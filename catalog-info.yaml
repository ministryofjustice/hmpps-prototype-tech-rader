apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: prison-api
  description: Access to all NOMIS data via this API.
  labels:
    example.com/custom: custom_label_value
  annotations:
    circleci.com/project-slug: github/ministryofjustice/prison-api
  tags:
    - java
    - spring-boot
  links:
    - url: https://api.prison.service.justice.gov.uk/health
      title: Health Check
      icon: dashboard
    - url: https://github.com/ministryofjustice/nomis-api-terraform-azure/
      title: Infrastrcutre code
      icon: dashboard
spec:
  type: openapi
  lifecycle: live
  owner: dps-tech-team
  definition: |
     {
   "openapi":"3.0.3",
   "info":{
      "title":"HMPPS Prison API Documentation",
      "description":"A RESTful API service for accessing NOMIS data sets.\n\nAll times sent to the API should be sent in local time without the timezone e.g. YYYY-MM-DDTHH:MM:SS.  All times returned in responses will be in Europe / London local time unless otherwise stated.",
      "termsOfService":"https://sign-in.hmpps.service.justice.gov.uk/auth/terms",
      "contact":{
         "name":"HMPPS Digital Studio",
         "email":"feedback@digital.justice.gov.uk"
      },
      "license":{
         "name":"Open Government Licence v3.0",
         "url":"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
      },
      "version":"2021-08-05.7627.3dd7c7d"
   },
   "servers":[
      {
         "url":"https://api.prison.service.justice.gov.uk:443",
         "description":"Inferred Url"
      }
   ],
   "tags":[
      {
         "name":"access-roles",
         "description":"Access Role Resource"
      },
      {
         "name":"agencies",
         "description":"Agency Resource"
      },
      {
         "name":"appointments",
         "description":"Appointments Resource"
      },
      {
         "name":"bookings",
         "description":"Booking Resource"
      },
      {
         "name":"case-notes",
         "description":"Case Note Resource"
      },
      {
         "name":"cell",
         "description":"Cell Resource"
      },
      {
         "name":"data-compliance",
         "description":"Data Compliance Controller"
      },
      {
         "name":"education",
         "description":"Education Resource"
      },
      {
         "name":"employment",
         "description":"Employment Resource"
      },
      {
         "name":"events",
         "description":"Offender Events Controller"
      },
      {
         "name":"finance",
         "description":"Finance Controller"
      },
      {
         "name":"identifiers",
         "description":"Identifiers Resource"
      },
      {
         "name":"images",
         "description":"Image Resource"
      },
      {
         "name":"incidents",
         "description":"Incidents Resource"
      },
      {
         "name":"key-worker",
         "description":"Key Worker Resource"
      },
      {
         "name":"locations",
         "description":"Location Resource"
      },
      {
         "name":"movements",
         "description":"Movement Resource"
      },
      {
         "name":"offences",
         "description":"Offence Resource"
      },
      {
         "name":"offender-assessments",
         "description":"Offender Assessment Resource"
      },
      {
         "name":"offender-relationships",
         "description":"Offender Relationship Resource"
      },
      {
         "name":"offender-sentences",
         "description":"Offender Sentence Resource"
      },
      {
         "name":"offenders",
         "description":"Offender Resource"
      },
      {
         "name":"persons",
         "description":"Person Resource"
      },
      {
         "name":"prisoners",
         "description":"Prisoner Status Controller"
      },
      {
         "name":"questionnaires",
         "description":"Questionnaire Resource"
      },
      {
         "name":"reference-domains",
         "description":"Reference Domain Resource"
      },
      {
         "name":"schedules",
         "description":"Schedule Resource"
      },
      {
         "name":"search-offenders",
         "description":"Search Offender Resource"
      },
      {
         "name":"staff",
         "description":"Staff Resource"
      },
      {
         "name":"users",
         "description":"User Resource"
      },
      {
         "name":"v1",
         "description":"Nomis Api V 1 Resource"
      }
   ],
   "paths":{
      "/api/access-roles":{
         "get":{
            "tags":[
               "access-roles"
            ],
            "summary":"List of access roles",
            "description":"List of access roles",
            "operationId":"getAccessRoles",
            "parameters":[
               {
                  "name":"includeAdmin",
                  "in":"query",
                  "description":"Include admin roles",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AccessRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "access-roles"
            ],
            "summary":"Update the access role.",
            "description":"Update the access role.",
            "operationId":"updateAccessRole",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AccessRole"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request - e.g. role code not provided."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update an access role."
               },
               "404":{
                  "description":"Access role not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "access-roles"
            ],
            "summary":"Create new access role.",
            "description":"Create new access role.",
            "operationId":"createAccessRole",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AccessRole"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request - e.g. role code not provided."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to create an access role."
               },
               "404":{
                  "description":"Parent access role not found."
               },
               "409":{
                  "description":"A role already exists with the provided role code."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of active agencies.",
            "description":"List of active agencies.",
            "operationId":"getAgencies",
            "parameters":[
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of agency records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of agency records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Agency"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "agencies"
            ],
            "summary":"Create an agency",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"createAgencyUsingPOST",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToCreateAgency"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Agency"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The Agency location created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to create an agency location"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/caseload/{caseload}":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of agencies for caseload.",
            "description":"List of agencies for caseload.",
            "operationId":"getAgenciesByCaseload",
            "parameters":[
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"caseload",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Agency"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/prison":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of prison contact details.",
            "description":"List of prison contact details.",
            "operationId":"getPrisonContactDetailList",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonContactDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/prison/{agencyId}":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"Prison contact detail.",
            "description":"Prison contact detail.",
            "operationId":"getPrisonContactDetail",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrisonContactDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/type/{type}":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of agencies by type",
            "description":"List of active agencies by type",
            "operationId":"getAgenciesByTypeUsingGET",
            "parameters":[
               {
                  "name":"type",
                  "in":"path",
                  "description":"Agency Type",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Only return active agencies",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"jurisdictionCode",
                  "in":"query",
                  "description":"Only return agencies that match the supplied Jurisdiction Code(s), NOTE: Deprecated, please use courtType param",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"courtType",
                  "in":"query",
                  "description":"Only return courts that match the supplied court types(s)",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"withAddresses",
                  "in":"query",
                  "description":"Returns Address Information",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"skipFormatLocation",
                  "in":"query",
                  "description":"Don't format the location",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Agency"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"Agency detail.",
            "description":"Agency detail.",
            "operationId":"getAgency",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Only return active agencies",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"agencyType",
                  "in":"query",
                  "description":"Agency Type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"withAddresses",
                  "in":"query",
                  "description":"Returns Address Information",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"skipFormatLocation",
                  "in":"query",
                  "description":"Don't format the location",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Agency"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "agencies"
            ],
            "summary":"Update an existing agency",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"updateAgencyUsingPUT",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToUpdateAgency"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Agency"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update a agency location"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/addresses":{
         "post":{
            "tags":[
               "agencies"
            ],
            "summary":"Create an address",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"createAgencyAddressUsingPOST",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToUpdateAddress"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AddressDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to create a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/addresses/{addressId}":{
         "put":{
            "tags":[
               "agencies"
            ],
            "summary":"Update an existing address",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"updateAgencyAddressUsingPUT",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               },
               {
                  "name":"addressId",
                  "in":"path",
                  "description":"The ID of the address",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToUpdateAddress"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AddressDto"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "agencies"
            ],
            "summary":"Delete an existing address",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"deleteAgencyAddressUsingDELETE",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               },
               {
                  "name":"addressId",
                  "in":"path",
                  "description":"The ID of the address",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to delete a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/addresses/{addressId}/phones":{
         "post":{
            "tags":[
               "agencies"
            ],
            "summary":"Create an contact for an address",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"createAgencyAddressPhoneContactUsingPOST",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               },
               {
                  "name":"addressId",
                  "in":"path",
                  "description":"The ID of the address",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToUpdatePhone"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Telephone"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to create a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/addresses/{addressId}/phones/{phoneId}":{
         "put":{
            "tags":[
               "agencies"
            ],
            "summary":"Update an existing contact on an address",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"updateAgencyAddressPhoneContactUsingPUT",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               },
               {
                  "name":"addressId",
                  "in":"path",
                  "description":"The ID of the address",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"phoneId",
                  "in":"path",
                  "description":"The ID of the contact",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToUpdatePhone"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Telephone"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "agencies"
            ],
            "summary":"Delete an existing address contact",
            "description":"Requires MAINTAIN_REF_DATA",
            "operationId":"deleteAgencyAddressPhoneContactUsingDELETE",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The ID of the agency",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":2,
                     "type":"string"
                  }
               },
               {
                  "name":"addressId",
                  "in":"path",
                  "description":"The ID of the address",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"phoneId",
                  "in":"path",
                  "description":"The ID of the contact",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to delete a agency address"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/cellsWithCapacity":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of active cells with capacity for agency.",
            "description":"List of active cells with capacity for agency.",
            "operationId":"getAgencyActiveCellsWithCapacity",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"attribute",
                  "in":"query",
                  "description":"Restricts list of cells returned to those that have a specified attribute.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderCell"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/establishment-types":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"Return the establishment types for the given Agency.",
            "description":"An agency can have one to many establishment types. For example a prison could be both a youth and adult establishment.",
            "operationId":"getAgencyEstablishmentTypes",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AgencyEstablishmentTypes"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/eventLocations":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of locations for agency where events (appointments, visits, activities) could be held.",
            "description":"List of locations for agency where events (appointments, visits, activities) could be held.",
            "operationId":"getAgencyEventLocations",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>description, userDescription</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Location"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/eventLocationsBooked":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of locations for agency where events (appointments, visits, activities) are being held.",
            "description":"List of locations for agency where events (appointments, visits, activities) are being held.",
            "operationId":"getAgencyEventLocationsBooked",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"bookedOnDay",
                  "in":"query",
                  "description":"Filter list to only return locations which prisoners will be attending on this day",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"Only return locations which prisoners will be attending in this time slot (AM, PM or ED, and bookedOnDay must be specified)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Location"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/iepLevels":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of active IEP levels for agency.",
            "description":"List of active IEP levels for agency.",
            "operationId":"getAgencyIepLevels",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/IepLevel"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/iepReview":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"Per offender information necessary for IEP review.",
            "description":"IEP review information",
            "operationId":"getPrisonIepReview",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"iepLevel",
                  "in":"query",
                  "description":"IEP level to filter by.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"location",
                  "in":"query",
                  "description":"Offender location to filter by.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned offenders.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of offenders returned.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderIepReview"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/locations":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of active internal locations for agency.",
            "description":"List of active internal locations for agency.",
            "operationId":"getAgencyLocations",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"eventType",
                  "in":"query",
                  "description":"Restricts list of locations returned to those that can be used for the specified event type.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>description, userDescription</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Location"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/locations/groups":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of all available Location Groups at agency.",
            "description":"List of all available Location Groups at agency.",
            "operationId":"getAvailableLocationGroups",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/LocationGroup"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/agencies/{agencyId}/locations/type/{type}":{
         "get":{
            "tags":[
               "agencies"
            ],
            "summary":"List of active internal locations for agency by type.",
            "description":"List of active internal locations for agency by type.",
            "operationId":"getAgencyLocationsByType",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"type",
                  "in":"path",
                  "description":"Restricts list of locations returned to those of the passed type.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Location"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/appointments":{
         "post":{
            "tags":[
               "appointments"
            ],
            "summary":"Create multiple appointments",
            "description":"Create multiple appointments",
            "operationId":"createAppointments",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AppointmentsToCreate"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The appointments have been created.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CreatedAppointmentDetails"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/appointments/delete":{
         "post":{
            "tags":[
               "appointments"
            ],
            "summary":"Delete multiple appointments.",
            "description":"Delete multiple appointments.",
            "operationId":"deleteAppointments",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The client is not authorised for this operation"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/appointments/{appointmentId}":{
         "get":{
            "tags":[
               "appointments"
            ],
            "summary":"Get an appointment by id.",
            "description":"Get appointment byId.",
            "operationId":"getBookingAppointment",
            "parameters":[
               {
                  "name":"appointmentId",
                  "in":"path",
                  "description":"The unique identifier for the appointment",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"The appointment has been returned",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ScheduledEvent"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The client is not authorised for this operation"
               },
               "404":{
                  "description":"The appointment was not found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "appointments"
            ],
            "summary":"Delete an appointment.",
            "description":"Delete appointment.",
            "operationId":"deleteBookingAppointment",
            "parameters":[
               {
                  "name":"appointmentId",
                  "in":"path",
                  "description":"The unique identifier for the appointment",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"The appointment has been deleted"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The client is not authorised for this operation"
               },
               "404":{
                  "description":"The appointment was not found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/appointments/{appointmentId}/comment":{
         "put":{
            "tags":[
               "appointments"
            ],
            "summary":"Change an appointment's comment.",
            "operationId":"updateAppointmentCommentUsingPUT",
            "parameters":[
               {
                  "name":"appointmentId",
                  "in":"path",
                  "description":"The appointment's unique identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"string"
                     }
                  },
                  "text/plain":{
                     "schema":{
                        "type":"string"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created"
               },
               "204":{
                  "description":"The appointment's comment has been set."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The client is not authorised for this operation"
               },
               "404":{
                  "description":"The appointment was not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Summary information for all offenders accessible to current user.",
            "description":"Summary information for all offenders accessible to current user.",
            "operationId":"getOffenderBookings",
            "parameters":[
               {
                  "name":"query",
                  "in":"query",
                  "description":"Search parameters with the format [connector]:&lt;fieldName&gt;:&lt;operator&gt;:&lt;value&gt;:[format],... <p>Connector operators - and, or <p>Supported Operators - eq, neq, gt, gteq, lt, lteq, like, in</p> <p>Supported Fields - bookingNo, bookingId, offenderNo, firstName, lastName, agencyId, assignedLivingUnitId, assignedOfficerUserId</p> ",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"bookingId",
                  "in":"query",
                  "description":"The booking ids of offender",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"offenderNo",
                  "in":"query",
                  "description":"The required offender numbers",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"iepLevel",
                  "in":"query",
                  "description":"return IEP level data",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of booking records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of booking records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>bookingNo, bookingId, offenderNo, firstName, lastName, agencyId, assignedLivingUnitId</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Summary information for all offenders accessible to current user.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderBooking"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/activities/attendance":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Update attendance and pay for multiple bookings.",
            "description":"Update offender attendance and pay.",
            "operationId":"updateAttendance_1",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UpdateAttendanceBatch"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Attendance data has been updated"
               },
               "400":{
                  "description":"Invalid request - e.g. validation error."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to attend activity."
               },
               "404":{
                  "description":"Resource not found - booking or event does not exist or is not accessible to user."
               },
               "500":{
                  "description":"Internal server error."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/mainOffence":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Get Offender main offence detail.",
            "description":"Post version to allow specifying a large number of bookingIds.",
            "operationId":"getMainOffenceUsingPOST",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenceDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/alerts":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Get alerts for a list of offenders. Requires VIEW_PRISONER_DATA role",
            "operationId":"getAlertsByOffenderNosUsingPOST",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Alert"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/personal-care-needs":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Personal Care Needs  - POST version to allow for large numbers of offenders",
            "description":"Personal Care Needs",
            "operationId":"getPersonalCareNeeds",
            "parameters":[
               {
                  "name":"type",
                  "in":"query",
                  "description":"a list of types and optionally subtypes (joined with +) to search.",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PersonalCareNeeds"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{agencyId}/alerts":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Get alerts for a list of offenders at a prison",
            "operationId":"getAlertsByOffenderNosAtAgencyUsingPOST",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison where the offenders are booked",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Alert"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender detail.",
            "description":"Offender detail.",
            "operationId":"getOffenderBookingByOffenderNo",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fullInfo",
                  "in":"query",
                  "description":"If set to true then full data is returned",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"extraInfo",
                  "in":"query",
                  "description":"Only used when fullInfo=true, returns identifiers,offences,aliases,sentence dates,convicted status",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"csraSummary",
                  "in":"query",
                  "description":"Only used when fullInfo=true, returns the applicable CSRA classification for this offender",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/activities/{activityId}/attendance":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"updateAttendance",
            "operationId":"updateAttendanceUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of the prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"activityId",
                  "in":"path",
                  "description":"The activity id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UpdateAttendance"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Attendance data has been updated"
               },
               "400":{
                  "description":"Invalid request - e.g. validation error."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to attend activity."
               },
               "404":{
                  "description":"Resource not found - booking or event does not exist or is not accessible to user."
               },
               "500":{
                  "description":"Internal server error."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/caseNotes":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create case note for offender.",
            "description":"Create case note for offender.",
            "operationId":"createOffenderCaseNote",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewCaseNote"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The Case Note has been recorded. The updated object is returned including the status.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"The case note has already been recorded under the booking. The current unmodified object (including status) is returned."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/image/data":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Image data (as bytes).",
            "description":"Image data (as bytes).",
            "operationId":"getMainBookingImageDataByNo",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offender No of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fullSizeImage",
                  "in":"query",
                  "description":"Return full size image",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "image/jpeg":{
                        "schema":{
                           "type":"string",
                           "format":"byte"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/key-worker":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Key worker details.",
            "description":"Key worker details. This should not be used - call keywork API instead",
            "operationId":"getKeyworkerByOffenderNoUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Keyworker"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "deprecated":true,
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/offenceHistory":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offence history.",
            "description":"All Offences recorded for this offender.",
            "operationId":"getOffenceHistory",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offender number",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"convictionsOnly",
                  "in":"query",
                  "description":"include offences with convictions only",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenceHistoryDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/relationships":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"The contact details and their relationship to the offender",
            "description":"The contact details and their relationship to the offender",
            "operationId":"getRelationshipsByOffenderNo",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offender Offender No",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"relationshipType",
                  "in":"query",
                  "description":"filter by the relationship type",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Contact"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create a relationship with an offender",
            "description":"Create a relationship with an offender",
            "operationId":"createRelationshipByOffenderNo",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offender Offender No",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/OffenderRelationship"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"If successful the Contact object is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Contact"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenderNo/{offenderNo}/visit/balances":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Balances visit orders and privilege visit orders for offender.",
            "description":"Balances visit orders and privilege visit orders for offender.",
            "operationId":"getBookingVisitsBalances",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/VisitBalances"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenders":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender detail.",
            "description":"Offender detail for offenders",
            "operationId":"getBasicInmateDetailsForOffenders",
            "parameters":[
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Returns only Offender details with an active booking if true, otherwise Offenders without an active booking are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/InmateBasicDetails"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenders/iepSummary":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offenders IEP (Incentives & Earned Privileges) summary.",
            "description":"Offenders IEP (Incentives & Earned Privileges) summary.",
            "operationId":"getBookingIEPSummaryForOffenders",
            "parameters":[
               {
                  "name":"bookings",
                  "in":"query",
                  "description":"The booking ids of offender",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"withDetails",
                  "in":"query",
                  "description":"Toggle to return IEP detail entries in response (or not).",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrivilegeSummary"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/offenders/{agencyId}/list":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Basic offender details by booking ids - POST version to allow for large numbers",
            "description":"Basic offender details by booking ids",
            "operationId":"getBasicInmateDetailsForOffendersByBookingIds",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison where the offenders are booked - the response is restricted to bookings at this prison",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/InmateBasicDetails"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender detail.",
            "description":"Offender detail.",
            "operationId":"getOffenderBooking",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"basicInfo",
                  "in":"query",
                  "description":"If set to true then only basic data is returned",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"extraInfo",
                  "in":"query",
                  "description":"Only used when requesting more than basic data, returns identifiers,offences,aliases,sentence dates,convicted status",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/activities":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"All scheduled activities for offender.",
            "description":"All scheduled activities for offender.",
            "operationId":"getBookingActivities",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Returned activities must be scheduled on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Returned activities must be scheduled on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of activity records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of activity records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/activities/today":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Today's scheduled activities for offender.",
            "description":"Today's scheduled activities for offender.",
            "operationId":"getBookingActivitiesForToday",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/activities/{activityId}/attendance":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Update offender attendance and pay.",
            "description":"Update offender attendance and pay.",
            "operationId":"updateAttendance",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking Id of the prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"activityId",
                  "in":"path",
                  "description":"The activity id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UpdateAttendance"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Attendance data has been updated"
               },
               "400":{
                  "description":"Invalid request - e.g. validation error."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to attend activity."
               },
               "404":{
                  "description":"Resource not found - booking or event does not exist or is not accessible to user."
               },
               "500":{
                  "description":"Internal server error."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/adjudications":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender adjudications summary (awards and sanctions).",
            "description":"Offender adjudications (awards and sanctions).",
            "operationId":"getAdjudicationSummary",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"awardCutoffDate",
                  "in":"query",
                  "description":"Only awards ending on or after this date (in YYYY-MM-DD format) will be considered.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"adjudicationCutoffDate",
                  "in":"query",
                  "description":"Only proved adjudications ending on or after this date (in YYYY-MM-DD format) will be counted.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AdjudicationSummary"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/alert":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create an alert",
            "operationId":"postAlertUsingPOST",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateAlert"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AlertCreated"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Alert id."
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/alert/{alertSeq}":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Update an alert",
            "operationId":"updateAlertUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"alertSeq",
                  "in":"path",
                  "description":"alertSeq",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/AlertChanges"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Alert"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/alerts":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender alerts.",
            "description":"Offender alerts.",
            "operationId":"getOffenderAlerts",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"query",
                  "in":"query",
                  "description":"Search parameters with the format [connector]:&lt;fieldName&gt;:&lt;operator&gt;:&lt;value&gt;:[format],... <p>Connector operators - and, or <p>Supported Operators - eq, neq, gt, gteq, lt, lteq, like, in</p> <p>Supported Fields - alertType, alertCode, dateCreated, dateExpires</p> ",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of alert records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of alert records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>alertType, alertCode, dateCreated, dateExpires</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Alert"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/alerts/{alertId}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender alert detail.",
            "description":"Offender alert detail.",
            "operationId":"getOffenderAlert",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"alertId",
                  "in":"path",
                  "description":"The Alert Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Alert"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/aliases":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender aliases.",
            "description":"Offender aliases.",
            "operationId":"getOffenderAliases",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of alias records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of alias records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>firstName, lastName, age, dob, middleName, nameType, createDate</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Alias"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/appointments":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"All scheduled appointments for offender.",
            "description":"All scheduled appointments for offender.",
            "operationId":"getBookingsBookingIdAppointments",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Returned appointments must be scheduled on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Returned appointments must be scheduled on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of appointment records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of appointment records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create appointment for offender.",
            "description":"Create appointment for offender.",
            "operationId":"postBookingsBookingIdAppointments",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewAppointment"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The appointment has been recorded. The updated object is returned including the status.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ScheduledEvent"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/appointments/nextWeek":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Scheduled appointments for offender for following week.",
            "description":"Scheduled appointments for offender for following week.",
            "operationId":"getBookingAppointmentsForNextWeek",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/appointments/thisWeek":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Scheduled appointments for offender for coming week (from current day).",
            "description":"Scheduled appointments for offender for coming week (from current day).",
            "operationId":"getBookingAppointmentsForThisWeek",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/appointments/today":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Today's scheduled appointments for offender.",
            "description":"Today's scheduled appointments for offender.",
            "operationId":"getBookingAppointmentsForToday",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/assessment/{assessmentCode}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender assessment detail.",
            "description":"Offender assessment detail.",
            "operationId":"getAssessmentByCode",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"assessmentCode",
                  "in":"path",
                  "description":"Assessment Type Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Assessment"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/assessments":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Assessment Information",
            "description":"Assessment Information",
            "operationId":"getAssessments",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Assessment"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/balances":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender account balances.",
            "description":"Offender account balances.",
            "operationId":"getBalances",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Account"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/caseNotes":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender case notes.",
            "description":"Offender case notes.",
            "operationId":"getOffenderCaseNotesUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"from",
                  "in":"query",
                  "description":"start contact date to search from",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"to",
                  "in":"query",
                  "description":"end contact date to search up to (including this date)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Filter by case note type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subType",
                  "in":"query",
                  "description":"Filter by case note sub-type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prisonId",
                  "in":"query",
                  "description":"Filter by the ID of the prison",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfCaseNote"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create case note for offender.",
            "description":"Create case note for offender.",
            "operationId":"createBookingCaseNote",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewCaseNote"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The Case Note has been recorded. The updated object is returned including the status.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"The case note has already been recorded under the booking. The current unmodified object (including status) is returned."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/caseNotes/{caseNoteId}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender case note detail.",
            "description":"Offender case note detail.",
            "operationId":"getOffenderCaseNote",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"caseNoteId",
                  "in":"path",
                  "description":"The case note id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Amend offender case note.",
            "description":"Amend offender case note.",
            "operationId":"updateOffenderCaseNote",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"caseNoteId",
                  "in":"path",
                  "description":"The case note id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UpdateCaseNote"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Case Note amendment processed successfully. Updated case note is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request - e.g. amendment text not provided."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to amend case note."
               },
               "404":{
                  "description":"Resource not found - booking or case note does not exist or is not accessible to user."
               },
               "500":{
                  "description":"Internal server error."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/caseNotes/{type}/{subType}/count":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Count of case notes",
            "description":"Count of case notes",
            "operationId":"getCaseNoteCount",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"type",
                  "in":"path",
                  "description":"Case note type.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subType",
                  "in":"path",
                  "description":"Case note sub-type.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNoteCount"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/cell-history":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Gets cell history for an offender booking",
            "description":"Default sort order is by assignment date descending",
            "operationId":"getBedAssignmentsHistory",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking linked to the court hearings.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The page number to return. Index starts at 0",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"The number of results per page. Defaults to 20.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfBedAssignment"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/contacts":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender contacts (e.g. next of kin).",
            "description":"Offender contacts (e.g. next of kin).",
            "operationId":"getContacts",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ContactDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/court-cases":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Court Cases",
            "description":"Court Cases",
            "operationId":"getCourtCases",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Only return active court cases",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CourtCase"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/events":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"All scheduled events for offender.",
            "description":"All scheduled events for offender.",
            "operationId":"getEvents",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Returned events must be scheduled on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Returned events must be scheduled on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/events/nextWeek":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Scheduled events for offender for following week.",
            "description":"Scheduled events for offender for following week.",
            "operationId":"getEventsNextWeek",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/events/thisWeek":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Scheduled events for offender for coming week (from current day).",
            "description":"Scheduled events for offender for coming week (from current day).",
            "operationId":"getEventsThisWeek",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/events/today":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Today's scheduled events for offender.",
            "description":"Today's scheduled events for offender.",
            "operationId":"getEventsToday",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/identifiers":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Identifiers for this booking",
            "description":"Identifiers for this booking",
            "operationId":"getOffenderIdentifiers",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Filter By Type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderIdentifier"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/iepLevels":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Add a new IEP (Incentives & Earned Privileges) level to an offender's booking.",
            "operationId":"addIepLevelUsingPOST",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of the offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/IepLevelAndComment"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/iepSummary":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender IEP (Incentives & Earned Privileges) summary.",
            "description":"Offender IEP (Incentives & Earned Privileges) summary.",
            "operationId":"getBookingIEPSummary",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"withDetails",
                  "in":"query",
                  "description":"Toggle to return IEP detail entries in response (or not).",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrivilegeSummary"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/image":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Image detail (without image data).",
            "description":"Image detail (without image data).",
            "operationId":"getMainImageForBookings",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ImageDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/image/data":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Image data (as bytes).",
            "description":"Image data (as bytes).",
            "operationId":"getMainBookingImageData",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fullSizeImage",
                  "in":"query",
                  "description":"Return full size image",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "image/jpeg":{
                        "schema":{
                           "type":"string",
                           "format":"byte"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/incidents":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Return a set Incidents for a given booking Id",
            "description":"Can be filtered by participation type and incident type",
            "operationId":"getIncidentsByBookingIdUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"incidentType",
                  "in":"query",
                  "description":"incidentType",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"participationRoles",
                  "in":"query",
                  "description":"participationRoles",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTINV",
                        "AI",
                        "AO",
                        "ASSIAL",
                        "FIGHT",
                        "IMPED",
                        "PAS",
                        "PERP",
                        "SUSASS",
                        "SUSINV",
                        "VICT"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/IncidentCase"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/mainOffence":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Get Offender main offence detail.",
            "description":"Offender main offence detail.",
            "operationId":"getMainOffenceUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenceDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/military-records":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Military Records",
            "description":"Military Records",
            "operationId":"getMilitaryRecords",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/MilitaryRecords"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/movement/{sequenceNumber}":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Retrieves a specific movement for a booking",
            "description":"Must booking in user caseload or have system privilege",
            "operationId":"getMovementByBookingIdAndSequenceUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"sequenceNumber",
                  "in":"path",
                  "description":"The sequence Number of the movement",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Movement"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/non-association-details":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Gets the offender non-association details for a given booking",
            "description":"Get offender non-association details",
            "operationId":"getNonAssociationDetails",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/OffenderNonAssociationDetails"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/personal-care-needs":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Personal Care Needs",
            "description":"Personal Care Need",
            "operationId":"getPersonalCareNeeds_1",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"a list of types and optionally subtypes (joined with +) to search.",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalCareNeeds"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/physicalAttributes":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender Physical Attributes.",
            "description":"Offender Physical Attributes.",
            "operationId":"getPhysicalAttributes",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PhysicalAttributes"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/physicalCharacteristics":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Physical Characteristics",
            "description":"Physical Characteristics",
            "operationId":"getPhysicalCharacteristics",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PhysicalCharacteristic"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/physicalMarks":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Physical Mark Information",
            "description":"Physical Mark Information",
            "operationId":"getPhysicalMarks",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PhysicalMark"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/profileInformation":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Profile Information",
            "description":"Profile Information",
            "operationId":"getProfileInformation",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ProfileInformation"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/property":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"List of active property containers",
            "description":"List of active property containers",
            "operationId":"getOffenderPropertyContainers",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PropertyContainer"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/reasonable-adjustments":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Reasonable Adjustment Information",
            "description":"Reasonable Adjustment Information",
            "operationId":"getReasonableAdjustment",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"a list of treatment codes to search.",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ReasonableAdjustments"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/relationships":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"The contact details and their relationship to the offender",
            "description":"The contact details and their relationship to the offender",
            "operationId":"getRelationships",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"relationshipType",
                  "in":"query",
                  "description":"filter by the relationship type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Contact"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Create a relationship with an offender",
            "description":"Create a relationship with an offender",
            "operationId":"createRelationship",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/OffenderRelationship"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"If successful the Contact object is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Contact"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/secondary-languages":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Get secondary languages",
            "description":"Get secondary languages",
            "operationId":"getSecondaryLanguages",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/SecondaryLanguage"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/sentenceAdjustments":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender sentence adjustments.",
            "operationId":"getBookingSentenceAdjustments",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/SentenceAdjustmentDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/sentenceDetail":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Offender sentence detail (key dates and additional days awarded).",
            "description":"<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
            "operationId":"getBookingSentenceDetail",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/SentenceDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/visits":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"All scheduled visits for offender.",
            "description":"All scheduled visits for offender.",
            "operationId":"getBookingVisits",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Returned visits must be scheduled on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Returned visits must be scheduled on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of visit records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of visit records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/visits-with-visitors":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"visits with visitor list for offender.",
            "description":"visits with visitor list for offender.",
            "operationId":"getBookingVisitsWithVisitor",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Returned visits must be scheduled on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Returned visits must be scheduled on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"visitType",
                  "in":"query",
                  "description":"Type of visit",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "OFFI",
                        "SCON"
                     ]
                  }
               },
               {
                  "name":"Status of visit. code from VIS_STS domain, e.g: Cancelled (CANC) or Scheduled (SCH)",
                  "in":"query",
                  "description":"visitStatus",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Target page number, zero being the first page",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"The number of results per page",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfVisitWithVisitors"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/visits/last":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"The most recent visit for the offender.",
            "description":"The most recent visit for the offender.",
            "operationId":"getBookingVisitsLast",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/VisitDetails"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/visits/next":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"The next visit for the offender.",
            "description":"The next visit for the offender.",
            "operationId":"getBookingVisitsNext",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/VisitDetails"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/visits/today":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"Today's scheduled visits for offender.",
            "description":"Today's scheduled visits for offender.",
            "operationId":"getBookingVisitsForToday",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>eventDate, startTime, endTime, eventLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/case-notes/events":{
         "get":{
            "tags":[
               "case-notes"
            ],
            "summary":"Fetch all case notes of a given type since a given date",
            "description":"Returns all case notes - consumed by Delius<br/>These are generated by  whenever a case note is created or amended for an offender.<br/>*Note:* An alternative call [GET /case_notes/for_delius](#case-notes-feed-fetch-case-notes-direct-get) has been created for performance reasons.<br/>Some case notes are automatically generated by the system in response to an action relating to the offender e.g. An alert being raised or a prison transfer.<br/>The note type only filters at the top note type level not the sub type.<br/>note_type can be presented multiples times in the URL to filter by multiple note types.",
            "operationId":"getCaseNotesEvents",
            "parameters":[
               {
                  "name":"type",
                  "in":"query",
                  "description":"a list of types and optionally subtypes (joined with +) to search.",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"createdDate",
                  "in":"query",
                  "description":"Only case notes occurring on or after this date and time (ISO 8601 format without timezone e.g. YYYY-MM-DDTHH:MM:SS) will be considered.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of events to return",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseNoteEvent"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/case-notes/staff-usage":{
         "get":{
            "tags":[
               "case-notes"
            ],
            "summary":"Count of case notes",
            "description":"Count of case notes",
            "operationId":"getCaseNoteStaffUsageSummary",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"query",
                  "description":"a list of staffId numbers to use.",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"numMonths",
                  "in":"query",
                  "description":"Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Case note type.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subType",
                  "in":"query",
                  "description":"Case note sub-type.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseNoteStaffUsage"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "case-notes"
            ],
            "summary":"Retrieves list of case notes grouped by type/sub-type and staff",
            "description":"Retrieves list of case notes grouped by type/sub-type and staff",
            "operationId":"getCaseNoteStaffUsageSummaryByPost",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CaseNoteStaffUsageRequest"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The case note usage list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseNoteStaffUsage"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/case-notes/usage":{
         "get":{
            "tags":[
               "case-notes"
            ],
            "summary":"Count of case notes",
            "description":"Count of case notes",
            "operationId":"getCaseNoteUsageSummary",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"query",
                  "description":"a list of offender numbers to search.",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"staffId",
                  "in":"query",
                  "description":"Staff Id to filter by",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"agencyId",
                  "in":"query",
                  "description":"Agency Id to filter by",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"numMonths",
                  "in":"query",
                  "description":"Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Case note type.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subType",
                  "in":"query",
                  "description":"Case note sub-type.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseNoteUsage"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "case-notes"
            ],
            "summary":"Retrieves list of case notes grouped by type and offender",
            "description":"Retrieves list of case notes grouped by type and offender",
            "operationId":"getCaseNoteUsageSummaryByPost",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CaseNoteUsageRequest"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The case note usage list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseNoteUsage"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/cell/{agencyId}/history/{assignmentDate}":{
         "get":{
            "tags":[
               "cell"
            ],
            "summary":"getBedAssignmentsHistoryByDateForAgency",
            "operationId":"getBedAssignmentsHistoryByDateForAgencyUsingGET",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"Agency Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"assignmentDate",
                  "in":"path",
                  "description":"Assignment date (2020-03-24)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/BedAssignment"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/cell/{locationId}/attributes":{
         "get":{
            "tags":[
               "cell"
            ],
            "summary":"getCellAttributes",
            "operationId":"getCellAttributesUsingGET",
            "parameters":[
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/OffenderCell"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/cell/{locationId}/history":{
         "get":{
            "tags":[
               "cell"
            ],
            "summary":"getBedAssignmentsHistory",
            "operationId":"getBedAssignmentsHistoryUsingGET",
            "parameters":[
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"From date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"To date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/BedAssignment"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/data-compliance/offenders-with-images":{
         "get":{
            "tags":[
               "data-compliance"
            ],
            "summary":"Get offenders with images captured in provided range",
            "operationId":"getOffendersWithImagesCapturedInRangeUsingGET",
            "parameters":[
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"fromDateTime",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenderNumber"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/education/prisoner/{offenderNo}":{
         "get":{
            "tags":[
               "education"
            ],
            "summary":"A list of offender educations.",
            "description":"A list of offender educations.",
            "operationId":"getPrisonerEducations",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"List of offender NOMS numbers. NOMS numbers have the format:<b>G0364GX</b>",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The page number of the paged results",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"Requested limit to number of results returned.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfEducation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/employment/prisoner/{offenderNo}":{
         "get":{
            "tags":[
               "employment"
            ],
            "summary":"A list of offender employments.",
            "description":"A list of offender employments.",
            "operationId":"getPrisonerEmployments",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"List of offender NOMS numbers. NOMS numbers have the format:<b>ANNNNAA</b>",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The page number of the paged results",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"Requested limit to number of results returned.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfEmployment"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/finance/prison/{prisonId}/offenders/{offenderNo}/transfer-to-savings":{
         "post":{
            "tags":[
               "finance"
            ],
            "summary":"Post a financial transaction to NOMIS.",
            "description":"Notes:<br/><ul><li>If the field X-Client-Name is present in the request header then the value is prepended to the client_unique_ref separated by a dash</li><li>The client_unique_ref can have a maximum of 64 characters, only alphabetic, numeric, â€˜-â€™ and â€˜_â€™ characters are allowed</li></ul>",
            "operationId":"transferToSavingsUsingPOST",
            "parameters":[
               {
                  "name":"X-Client-Name",
                  "in":"header",
                  "description":"If present then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prisonId",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/TransferTransaction"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/TransferTransactionDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Transaction Created"
               },
               "400":{
                  "description":"One of: <ul><li>Insufficient Funds - The prisoner has insufficient funds in the required account to cover the cost of the debit transaction</li><li>Offender not in specified prison - prisoner identified by {noms_id} is not in prison {prison_id}</li><li>Finance Exception - An unexpected error has occurred. Details will have been logged in the nomis_api_logs table on the Nomis database.</li></ul>"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "409":{
                  "description":"Duplicate post - The unique_client_ref has been used before"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/identifiers/{type}/{value}":{
         "get":{
            "tags":[
               "identifiers"
            ],
            "summary":"Identifiers for a specified type and value",
            "description":"Empty list will be returned for no matches",
            "operationId":"getOffenderIdentifiersByTypeAndValue",
            "parameters":[
               {
                  "name":"type",
                  "in":"path",
                  "description":"Identifier Type",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"value",
                  "in":"path",
                  "description":"Identifier Value",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderIdentifier"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/images/offenders/{offenderNo}":{
         "get":{
            "tags":[
               "images"
            ],
            "summary":"Image details related to offender.",
            "operationId":"getImagesByOffender",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ImageDetail"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/images/{imageId}":{
         "get":{
            "tags":[
               "images"
            ],
            "summary":"Image detail (with image data).",
            "description":"Image detail (with image data).",
            "operationId":"getImage",
            "parameters":[
               {
                  "name":"imageId",
                  "in":"path",
                  "description":"The image id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ImageDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/images/{imageId}/data":{
         "get":{
            "tags":[
               "images"
            ],
            "summary":"Image data (as bytes).",
            "description":"Image data (as bytes).",
            "operationId":"getImageData",
            "parameters":[
               {
                  "name":"imageId",
                  "in":"path",
                  "description":"The image id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fullSizeImage",
                  "in":"query",
                  "description":"Return full size image",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "image/jpeg":{
                        "schema":{
                           "type":"string",
                           "format":"byte"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/incidents/{incidentId}":{
         "get":{
            "tags":[
               "incidents"
            ],
            "summary":"Return an Incident for a given incident ID",
            "description":"System access only",
            "operationId":"getIncidentUsingGET",
            "parameters":[
               {
                  "name":"incidentId",
                  "in":"path",
                  "description":"Incident Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/IncidentCase"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/offenders/allocationHistory":{
         "post":{
            "tags":[
               "key-worker"
            ],
            "summary":"Retrieves Specified prisoners allocation history - POST version to allow larger allocation lists.",
            "description":"Retrieves Specified prisoners allocation history - POST version to allow larger allocation lists.",
            "operationId":"postKeyWorkerOffendersAllocationHistory",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The allocations history list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderKeyWorker"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/staff/allocationHistory":{
         "post":{
            "tags":[
               "key-worker"
            ],
            "summary":"Retrieves Specified key worker's currently allocation history - POST version to allow larger staff lists.",
            "description":"Retrieves Specified key worker's currently allocation history - POST version to allow larger staff lists.",
            "operationId":"postKeyWorkerStaffAllocationHistory",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The allocations history list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderKeyWorker"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/{agencyId}/allocationHistory":{
         "get":{
            "tags":[
               "key-worker"
            ],
            "summary":"All allocations in specified agency.",
            "description":"All allocations in specified agency.",
            "operationId":"getAllocationHistory",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of allocationHistory records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of allocationHistory records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderKeyWorker"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/{agencyId}/available":{
         "get":{
            "tags":[
               "key-worker"
            ],
            "summary":"Key workers available for allocation at specified agency.",
            "description":"Key workers available for allocation at specified agency.",
            "operationId":"getAvailableKeyworkers",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Keyworker"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/{agencyId}/current-allocations":{
         "post":{
            "tags":[
               "key-worker"
            ],
            "summary":"Retrieves Specified key worker's currently assigned offenders - POST version to allow larger staff lists.",
            "description":"Retrieves Specified key worker's currently assigned offenders - POST version to allow larger staff lists.",
            "operationId":"postKeyWorkerAgencyIdCurrentAllocations",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The allocations list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/KeyWorkerAllocationDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/{agencyId}/current-allocations/offenders":{
         "post":{
            "tags":[
               "key-worker"
            ],
            "summary":"Retrieves Specified key worker's currently assigned offenders - POST version to allow larger staff lists.",
            "description":"Retrieves Specified key worker's currently assigned offenders - POST version to allow larger staff lists.",
            "operationId":"postKeyWorkerAgencyIdCurrentAllocationsOffenders",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The allocations list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/KeyWorkerAllocationDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/key-worker/{staffId}/agency/{agencyId}/offenders":{
         "get":{
            "tags":[
               "key-worker"
            ],
            "summary":"Specified key worker's currently assigned offenders.",
            "description":"Specified key worker's currently assigned offenders.",
            "operationId":"getAllocationsForKeyworker",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The key worker staff id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) identifier.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/KeyWorkerAllocationDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/locations/description/{locationPrefix}/inmates":{
         "get":{
            "tags":[
               "locations"
            ],
            "summary":"List of offenders at location.",
            "description":"List of offenders at location.",
            "operationId":"getOffendersAtLocationDescription",
            "parameters":[
               {
                  "name":"locationPrefix",
                  "in":"path",
                  "description":"locationPrefix",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"keywords",
                  "in":"query",
                  "description":"offender name or id to match",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fromDob",
                  "in":"query",
                  "description":"Offenders with a DOB >= this date",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDob",
                  "in":"query",
                  "description":"Offenders with a DOB <= this date",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"alerts",
                  "in":"query",
                  "description":"alert flags to filter by",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"returnIep",
                  "in":"query",
                  "description":"return IEP data",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"returnAlerts",
                  "in":"query",
                  "description":"return Alert data",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"returnCategory",
                  "in":"query",
                  "description":"retrieve category classification from assessments",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"convictedStatus",
                  "in":"query",
                  "description":"retrieve inmates with a specific convicted status (Convicted, Remand, default: All)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of inmate records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of inmate records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>bookingNo, bookingId, offenderNo, firstName, lastName, agencyId, or assignedLivingUnitId</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderBooking"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/locations/{locationId}":{
         "get":{
            "tags":[
               "locations"
            ],
            "summary":"Location detail.",
            "description":"Location detail.",
            "operationId":"getLocation",
            "parameters":[
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id of location",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"includeInactive",
                  "in":"query",
                  "description":"Match a location that is inactive?",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean",
                     "enum":[
                        false,
                        false
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Location"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/locations/{locationId}/inmates":{
         "get":{
            "tags":[
               "locations"
            ],
            "summary":"List of offenders at location.",
            "description":"List of offenders at location.",
            "operationId":"getOffendersAtLocation",
            "parameters":[
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id of location",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"query",
                  "in":"query",
                  "description":"Search parameters with the format [connector]:&lt;fieldName&gt;:&lt;operator&gt;:&lt;value&gt;:[format],... <p>Connector operators - and, or <p>Supported Operators - eq, neq, gt, gteq, lt, lteq, like, in</p> <p>Supported Fields - bookingNo, bookingId, offenderNo, firstName, lastName, agencyId, or assignedLivingUnitId</p> ",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of inmate records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of inmate records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>bookingNo, bookingId, offenderNo, firstName, lastName, agencyId, or assignedLivingUnitId</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderBooking"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Returns a list of recently released or moved offender nos and the associated timestamp.",
            "description":"Returns a list of recently released or moved offender nos and the associated timestamp.",
            "operationId":"getRecentMovementsByDate",
            "parameters":[
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"A timestamp that indicates the earliest record required",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"movementDate",
                  "in":"query",
                  "description":"The date for which movements are searched, defaults to today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"agencyId",
                  "in":"query",
                  "description":"Filter to just movements to or from this agency.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"movementTypes",
                  "in":"query",
                  "description":"movement type codes to filter by, defaults to TRN, REL, ADM",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Movement"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "movements"
            ],
            "summary":"Create a new external movement for inactive bookings only, requires the INACTIVE_BOOKINGS role",
            "operationId":"createExternalMovement",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateExternalMovement"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Created",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/OffenderMovement"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/agency/{agencyId}/currently-out":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Information on offenders currently out.",
            "description":"Information on offenders currently out.",
            "operationId":"getOffendersCurrentlyOut_1",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderOut"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/livingUnit/{livingUnitId}/currently-out":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Information on offenders currently out.",
            "description":"Information on offenders currently out.",
            "operationId":"getOffendersCurrentlyOut",
            "parameters":[
               {
                  "name":"livingUnitId",
                  "in":"path",
                  "description":"The identifier of a living unit, otherwise known as an internal location.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderOut"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/offenders":{
         "post":{
            "tags":[
               "movements"
            ],
            "summary":"getMovementsByOffenders",
            "operationId":"getMovementsByOffenders",
            "parameters":[
               {
                  "name":"movementTypes",
                  "in":"query",
                  "description":"movement type codes to filter by",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Returns only latest movement for the offenders specified",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"allBookings",
                  "in":"query",
                  "description":"Returns all movements for this offender list from all bookings if true",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Movement"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/rollcount/{agencyId}":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Current establishment rollcount numbers.",
            "description":"Current establishment rollcount numbers.",
            "operationId":"getRollcount",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"unassigned",
                  "in":"query",
                  "description":"If false return data for prisoners in cell locations, if true return unassigned prisoners, i.e. those in non-cell locations.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/RollCount"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/rollcount/{agencyId}/enroute":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Enroute prisoner movement count.",
            "description":"Enroute to reception count",
            "operationId":"getEnrouteOffenderMovementCount",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"movementDate",
                  "in":"query",
                  "description":"Optional filter on date of movement. Defaults to today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"integer",
                           "format":"int32"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/rollcount/{agencyId}/in-reception":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"getOffendersInReception",
            "operationId":"getOffendersInReception",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderInReception"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/rollcount/{agencyId}/movements":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Rollcount movement numbers.",
            "description":"Rollcount movement numbers.",
            "operationId":"getRollcountMovements",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"movementDate",
                  "in":"query",
                  "description":"The date for which movements are counted, default today.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/MovementCount"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/transfers":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Information on scheduled court, transfer and release events, and confirmed movements between two dates/times for a specified number of agencies.",
            "description":"Planned movements are recorded as events of type court, release or transfers/appointments. When these events are started they are actualised as external movements.",
            "operationId":"getTransfers",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"query",
                  "description":"One or more agencyId values eg.agencyId=LEI&agencyId=MDI",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"From date and time ISO 8601 format without timezone e.g. YYYY-MM-DDTHH:MM:SS",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"toDateTime",
                  "in":"query",
                  "description":"To date and time in ISO 8601 format without timezone e.g. YYYY-MM-DDTHH:MM:SS",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"courtEvents",
                  "in":"query",
                  "description":"Set to true to include planned court events",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"releaseEvents",
                  "in":"query",
                  "description":"Set to true to include planned release events",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"transferEvents",
                  "in":"query",
                  "description":"Set to true to include planned transfer/appointment events",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"movements",
                  "in":"query",
                  "description":"Set to true to include confirmed movements",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/TransferSummary"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid agency identifiers, or from time after the to time, or a time period greater than 24 hours specified, or parameter format not correct."
               },
               "401":{
                  "description":"The token presented did not contain the necessary role to access this resource."
               },
               "403":{
                  "description":"The token presented has expired."
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/upcomingCourtAppearances":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Get future court hearings for all offenders",
            "operationId":"getUpcomingCourtAppearances",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CourtEventBasic"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/{agencyId}/enroute":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Enroute prisoner movement details.",
            "description":"Enroute to reception",
            "operationId":"getEnrouteOffenderMovements",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"movementDate",
                  "in":"query",
                  "description":"Optional filter on date of movement",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderMovement"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/{agencyId}/in":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Offenders who entered a prison during a time period.",
            "description":"Offenders who entered a prison during a time period.",
            "operationId":"getMovementsInBetweeen",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"allMovements",
                  "in":"query",
                  "description":"Returns movements for inactive prisoners",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"fromDateTime",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"toDateTime",
                  "in":"query",
                  "description":"toDateTime",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of prisoner records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderIn"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/{agencyId}/in/{isoDate}":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"Information on offenders in today.",
            "description":"Information on offenders in on given date.",
            "operationId":"getMovementsInOnDate",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"isoDate",
                  "in":"path",
                  "description":"date",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderIn"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/movements/{agencyId}/out/{isoDate}":{
         "get":{
            "tags":[
               "movements"
            ],
            "summary":"getOffendersOutToday",
            "operationId":"getOffendersOut",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"isoDate",
                  "in":"path",
                  "description":"date",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"movementType",
                  "in":"query",
                  "description":"The optional movement type to filter by e.g CRT, REL, TAP, TRN",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderOutTodayDto"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/lookup/active_offender":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Retrieve active offender",
            "description":"offender id will be returned if offender is found",
            "operationId":"getActiveOffenderUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"query",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               },
               {
                  "name":"date_of_birth",
                  "in":"query",
                  "description":"date of birth",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ActiveOffender"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid Noms ID"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Parameter exception (invalid date, time, format, type)"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/events":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch events",
            "description":"Returns all events that required to update the prisoner self service application. Currently these are:<ul><li>ALERT</li><li>DISCHARGE</li><li>IEP_CHANGED</li><li>INTERNAL_LOCATION_CHANGED</li><li>NOMS_ID_CHANGED</li><li>PERSONAL_DETAILS_CHANGED</li><li>PERSONAL_OFFICER_CHANGED</li><li>RECEPTION</li><li>SENTENCE_INFORMATION_CHANGED</li><li>BALANCE_UPDATE</li></ul>",
            "operationId":"getOffenderEventsUsingGET",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"query",
                  "description":"Prison ID",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"offender_id",
                  "in":"query",
                  "description":"Offender Noms Id",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"event_type",
                  "in":"query",
                  "description":"Event Type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"from_datetime",
                  "in":"query",
                  "description":"From Date Time. The following formats are supported: 2018-01-10, 2018-01-10 03:34, 2018-01-10 03:34:12, 2018-01-10 03:34:12.123",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of events to return",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Events"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid Noms ID"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Returns general offender information.",
            "operationId":"getOffenderUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Offender"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}/alerts":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch alerts by offender",
            "description":"Returns all active alerts for the specified offender or those that meet the optional criteria. Active alerts are listed first, followed by inactive alerts, both sorted by ascending order of alert date.<br/><ul><li>if alert_type is specified then only alerts of that type are returned</li><li>if modified_since is specified then only those alerts created or modified on or after the specified date time. The following formats are supported: 2018-01-10, 2018-01-10 03:34, 2018-01-10 03:34:12, 2018-01-10 03:34:12.123</li><li>If include_inactive=true is specified then inactive alerts are also returned.</li></ul>",
            "operationId":"getAlertsUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               },
               {
                  "name":"alert_type",
                  "in":"query",
                  "description":"Alert Type, if alert_type is specified then only alerts of that type are returned",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"modified_since",
                  "in":"query",
                  "description":"Modified Since - if modified_since is specified then only those alerts created or modified on or after the specified date time. The following formats are supported: 2018-01-10, 2018-01-10 03:34, 2018-01-10 03:34:12, 2018-01-10 03:34:12.123",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"include_inactive",
                  "in":"query",
                  "description":"Include Inactive alerts, If include_inactive=true is specified then inactive alerts are also returned.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Alerts"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid Noms ID"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}/charges":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Legal cases for each booking and charges within each legal case.",
            "description":"Returns all the bookings, the legal cases for each booking and charges within each legal case.<br/>The ordering is as follows:<ul><li><strong>bookings</strong>: Current or latest booking first, others in descending order of booking date</li><li><strong>legal_cases</strong>: Active cases followed by inactive cases, further ordered by begin_date, latest first</li><li><strong>charges</strong>: Most serious active charge first, then remaining active charges, followed by inactive charges</li></ul>",
            "operationId":"getBookingsUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Bookings"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}/image":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Get Current Photograph of the offender",
            "description":"Returns a 480wx600h JPEG photograph of the offender. The data is base64 encoded within the image key.",
            "operationId":"getOffenderImageUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Image"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}/location":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Current Location of the offender",
            "description":"The levels shows the type of each level of the location address as defined on the Agency Details tab in Maintain Agency Locations screen (OUMAGLOC).<br/><br/>Since the offender's location can change often and is fairly sensitive (and therefore should not automatically be exposed to all services), this information is not included in the general offender information call.",
            "operationId":"getLatestBookingLocationUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Location"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{noms_id}/pss_detail":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Get the PSS detail by offender",
            "description":"Returns the PSS detail information for the specified offender including personal data, warnings, sentence details and location information.<br/><ul><li>The 'type' field is always OFFENDER_DETAILS_REQUEST</li><br/><li>The field 'offender_details_request' contains a JSON block of data containing the offender data.</li></ul>The format of 'offender_details_request' is not specified here.",
            "operationId":"getOffenderPssDetailUsingGET",
            "parameters":[
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Event"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid Noms ID"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{offender_id}/visits/available_dates":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch available_dates for offender",
            "description":"returns list of dates",
            "operationId":"getVisitAvailableDatesUsingGET",
            "parameters":[
               {
                  "name":"offender_id",
                  "in":"path",
                  "description":"Offender Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"start_date",
                  "in":"query",
                  "description":"Start date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"end_date",
                  "in":"query",
                  "description":"To date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AvailableDates"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid start and end date range"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{offender_id}/visits/contact_list":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch contacts list for offender",
            "description":"returns list of contacts",
            "operationId":"getVisitContactListUsingGET",
            "parameters":[
               {
                  "name":"offender_id",
                  "in":"path",
                  "description":"Offender Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ContactList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid start and end date range"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/offenders/{offender_id}/visits/unavailability":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch unavailability reason for dates",
            "description":"returns list of reason if unavailable date",
            "operationId":"getVisitUnavailabilityUsingGET",
            "parameters":[
               {
                  "name":"offender_id",
                  "in":"path",
                  "description":"Offender Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"dates",
                  "in":"query",
                  "description":"dates",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"object",
                           "additionalProperties":{
                              "$ref":"#/components/schemas/UnavailabilityReason"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Dates requested must be in future"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{previous_prison_id}/offenders/{noms_id}/transfer_transactions":{
         "post":{
            "tags":[
               "v1"
            ],
            "summary":"Record transaction at previous Prison.",
            "description":"<p>Post a financial transaction to Nomis to a prison that the offender is no longer at.</p><p>The valid prison_id and type combinations are defined in the Nomis transaction_operations table which is maintained by the Maintain Transaction Operations screen (OCMTROPS), from the Financials Maintenance menu. Only those prisons (Caseloads) and Transaction types associated with the NOMISAPI module are valid. Only Transaction types with a usage of R (Receipt) are valid.Transaction Types are maintained via the Maintain Transaction Types screen (OCMTRANS).</p><p>Transaction is posted to the specified prison.  if the account has been closed at this prison then it is re-opened first.</p><p>If the offender has been transferred to another prison then the funds are transferred to this prison.</p><p>If the account was previously closed then it will be closed again.</p><p>If the offender has been released then the funds are transferred to NACRO. Based on the Nomis Clear Inactive accounts screen (OTDCLINA).</p>",
            "operationId":"transferTransactionUsingPOST",
            "parameters":[
               {
                  "name":"X-Client-Name",
                  "in":"header",
                  "description":"If present then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"previous_prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateTransaction"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Transfer"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"One of: <ul><li>Invalid transaction type - The transaction type has not been set up for the API for {prison_id}</li><li>Finance Exception - This indicates an unexpected financial problem, check the nomis_api_log table for details.</li><li>Only receipt transaction types allowed - Only transaction types with a transaction usage of Receipt are allowed.</li><li>Sum of sub account balances not equal to current balance - The sum of all the sub account balances does equal the current balance held for the trust account</li><li>Offender being transferred - The offender is currently in transit</li><li>Offender still in specified prison - The offender is still at the specified prison. Use Record Transaction instead.</li></ul>"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"One of: <ul><li>Offender Not Found - No offender matching the specified offender_id has been found on nomis.</li><li>Offender never at prison - The offender has never been at the specified prison</li></ul>"
               },
               "409":{
                  "description":"Duplicate Post - A transaction already exists with the client_unique_ref provided."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/live_roll":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetching live roll.",
            "operationId":"getLiveRollUsingGET",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/LiveRoll"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Not a digital prison.  Prison not found."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/accounts":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Retrieve an offender's financial account balances.",
            "description":"Returns balances for the offenderâ€™s three sub accounts (spends, savings and cash) at the specified prison.<br/>All balance values are represented as pence values.",
            "operationId":"getAccountBalanceUsingGET",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AccountBalance"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Not a digital prison.  Prison not found. Offender has no account at this prison."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Prison or offender was not found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/accounts/{account_code}/transactions":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Retrieve an offender's financial transaction history for cash, spends or savings.",
            "description":"Transactions are returned in NOMIS ordee (Descending date followed by id).<br/>All transaction amounts are represented as pence values.",
            "operationId":"getAccountTransactionsUsingGET",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               },
               {
                  "name":"account_code",
                  "in":"path",
                  "description":"Account code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "cash",
                        "savings",
                        "spends"
                     ]
                  }
               },
               {
                  "name":"from_date",
                  "in":"query",
                  "description":"Start date for transactions (defaults to today if not supplied)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"to_date",
                  "in":"query",
                  "description":"To date for transactions (defaults to today if not supplied)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AccountTransactions"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Not a digital prison.  Prison not found. Offender has no account at this prison."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Prison, offender or accountType not found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/holds":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Get holds.",
            "description":"Gets every hold on an offenderâ€™s account or just the hold identified by the client_unique_ref",
            "operationId":"getHoldsUsingGET",
            "parameters":[
               {
                  "name":"X-Client-Name",
                  "in":"header",
                  "description":"If present then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               },
               {
                  "name":"client_unique_ref",
                  "in":"query",
                  "description":"Client unique reference",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "maxLength":64,
                     "minLength":0,
                     "pattern":"[a-zA-Z0-9-_]+",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Hold"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender Not Found - No offender matching the specified offender_id has been found on nomis."
               },
               "409":{
                  "description":"Offender not in specified prison"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/payment":{
         "post":{
            "tags":[
               "v1"
            ],
            "summary":"Store a payment for an offender account.",
            "description":"Pay events will be stored in a table on receipt by Nomis to be processed by a batch job scheduled to run after the last Nomis payroll batch job but before the advances and scheduled payments batch jobs.\n<br/>Possible payment types are:<br/><table><tr><td>A_EARN</td><td>Credit, Offender Payroll</td></tr><tr><td>ADJ</td><td>Debit, Adjudication Award</td></tr></table><br/>Example request:<br/>{\n  \"type\": \"A_EARN\",\n  \"description\": \"May earnings\",\n  \"amount\": 1,\n  \"client_transaction_id\": \"PAY-05-19\"\n}<br/>The valid prison_id and type combinations are defined in the Nomis transaction_operations table which is maintained by the Maintain Transaction Operations screen (OCMTROPS), from the Financials Maintenance menu. Only those prisons (Caseloads) and Transaction types associated with the NOMISAPI module are valid.<br/>This will be setup by script intially as part of the deployment process as shown below<br/><br/>",
            "operationId":"storePaymentUsingPOST",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/StorePaymentRequest"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PaymentResponse"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"One of: <ul><li>Offender not in specified prison - prisoner identified by {noms_id} is not in prison {prison_id}</li><li>Invalid payment type</li><li>Client reference more than 12 characters</li><li>Missing data in request</li><li>Exception - An unexpected error has occurred. Details will have been logged in the nomis_api_logs table on the Nomis database.</li></ul>"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested prison or offender could not be found."
               },
               "409":{
                  "description":"Duplicate post - after an error with a post this response will be given for subsequent duplicate attempts"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/transactions":{
         "post":{
            "tags":[
               "v1"
            ],
            "summary":"Post a financial transaction to NOMIS.",
            "description":"The valid prison_id and type combinations are defined in the Nomis transaction_operations table which is maintained by the Maintain Transaction Operations screen (OCMTROPS), from the Financials Maintenance menu. Only those prisons (Caseloads) and Transaction types associated with the NOMISAPI module are valid.<br/>This will be setup by script intially as part of the deployment process as shown below<br/><br/><table><tr><th>Transaction Type</th><th>Description</th><th>Digital Prison</th><th>Non Digital Prison</th></tr><tr><td>CANT</td><td>Canteen Spend</td><td>Yes</td><td>No</td></tr><tr><td>REFND</td><td>Canteen Refund</td><td>Yes</td><td>No</td></tr><tr><td>PHONE</td><td>Phone Credit</td><td>Yes</td><td>No</td></tr><tr><td>MRPR</td><td>Misc Receipt - Private Cash</td><td>Yes</td><td>Yes</td></tr><tr><td>MTDS</td><td>Money through digital service</td><td>Yes</td><td>Yes</td></tr><tr><td>DTDS</td><td>Disbursement through Digital service</td><td>Yes</td><td>Yes</td></tr><tr><td>CASHD</td><td>Cash Disbursement</td><td>Yes</td><td>Yes</td></tr><tr><td>RELA</td><td>Money to Relatives</td><td>Yes</td><td>Yes</td></tr><tr><td>RELS</td><td>Money to Relatives- Spends</td><td>Yes</td><td>Yes</td></tr></table>Notes:<br/><ul><li>The sub_account the amount is debited or credited from will be determined by the transaction_type definition in NOMIS.</li><li>If the field X-Client-Name is present in the request header then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.</li><li>The client_unique_ref can have a maximum of 64 characters, only alphabetic, numeric, â€˜-â€™ and â€˜_â€™ characters are allowed</li></ul>",
            "operationId":"createTransactionUsingPOST",
            "parameters":[
               {
                  "name":"X-Client-Name",
                  "in":"header",
                  "description":"If present then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateTransaction"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Transaction"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Transaction Created"
               },
               "400":{
                  "description":"One of: <ul><li>Insufficient Funds - The prisoner has insufficient funds in the required account to cover the cost of the debit transaction</li><li>Offender not in specified prison - prisoner identified by {noms_id} is not in prison {prison_id}</li><li>Invalid transaction type - The transaction type has not been set up for the API for {prison_id}</li><li>Finance Exception - An unexpected error has occurred. Details will have been logged in the nomis_api_logs table on the Nomis database.</li></ul>"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "409":{
                  "description":"Duplicate post - The unique_client_ref has been used before"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/offenders/{noms_id}/transactions/{client_unique_ref}":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Retrieve a single financial transaction using client unique ref.",
            "description":"All transaction amounts are represented as pence values.",
            "operationId":"getTransactionByClientUniqueRefUsingGET",
            "parameters":[
               {
                  "name":"X-Client-Name",
                  "in":"header",
                  "description":"If present then the value is prepended to the client_unique_ref separated by a dash. When this API is invoked via the Nomis gateway this will already have been created by the gateway.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"noms_id",
                  "in":"path",
                  "description":"Offender Noms Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"[a-zA-Z][0-9]{4}[a-zA-Z]{2}",
                     "type":"string"
                  }
               },
               {
                  "name":"client_unique_ref",
                  "in":"path",
                  "description":"Client unique reference",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":64,
                     "minLength":0,
                     "pattern":"[a-zA-Z0-9-_]+",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AccountTransaction"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Not a digital prison.  Prison not found. Offender has no account at this prison."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Prison, offender or accountType not found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/v1/prison/{prison_id}/slots":{
         "get":{
            "tags":[
               "v1"
            ],
            "summary":"Fetch visit slots with capacity",
            "description":"returns list slots with capacity details",
            "operationId":"getVisitSlotsWithCapacityUsingGET",
            "parameters":[
               {
                  "name":"prison_id",
                  "in":"path",
                  "description":"Prison ID",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":3,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"start_date",
                  "in":"query",
                  "description":"Start date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"end_date",
                  "in":"query",
                  "description":"End date",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/VisitSlots"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid start and end date range"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Prison Not Found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offences":{
         "get":{
            "tags":[
               "offences"
            ],
            "summary":"Paged List of active offences",
            "operationId":"getActiveOffencesUsingGET",
            "parameters":[
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenceDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offences/all":{
         "get":{
            "tags":[
               "offences"
            ],
            "summary":"Paged List of all offences",
            "operationId":"getOffencesUsingGET",
            "parameters":[
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenceDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offences/ho-code":{
         "get":{
            "tags":[
               "offences"
            ],
            "summary":"Paged List of offences by HO Code",
            "operationId":"getOffencesByHoCodeUsingGET",
            "parameters":[
               {
                  "name":"code",
                  "in":"query",
                  "description":"HO Code",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenceDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offences/search":{
         "get":{
            "tags":[
               "offences"
            ],
            "summary":"Paged List of offences matching offence description",
            "operationId":"getOffencesByDescriptionUsingGET",
            "parameters":[
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"searchText",
                  "in":"query",
                  "description":"Search text of the offence",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenceDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offences/statute":{
         "get":{
            "tags":[
               "offences"
            ],
            "summary":"Paged List of offences by Statute",
            "operationId":"getOffencesByStatuteUsingGET",
            "parameters":[
               {
                  "name":"code",
                  "in":"query",
                  "description":"Statute Code",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfOffenceDto"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/assessments":{
         "get":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Returns assessment information on Offenders at a prison.",
            "operationId":"getAssessmentsUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"query",
                  "description":"The required offender numbers Ids (mandatory)",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Returns only assessments for the current sentence if true, otherwise assessments for all previous sentences are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Returns only active assessments if true, otherwise inactive and pending assessments are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"mostRecentOnly",
                  "in":"query",
                  "description":"Returns only the last assessment per sentence if true, otherwise all assessments for the booking are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Assessment"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request - e.g. no offender numbers provided."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category":{
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Returns Categorisation details for supplied Offenders - POST version to allow large offender lists.",
            "description":"Categorisation details for all supplied Offenders using SYSTEM access",
            "operationId":"getOffenderCategorisationsSystemUsingPOST",
            "parameters":[
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Only get the latest category for each booking",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The list of offenders with categorisation details is returned if categorisation record exists",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderCategorise"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/approve":{
         "put":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Approve a pending offender categorisation.",
            "description":"Update categorisation record with approval.",
            "operationId":"approveCategorisationUsingPUT",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CategoryApprovalDetail"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Validation error - e.g. category does not exist."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/categorise":{
         "put":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Update a pending offender categorisation.",
            "description":"This is intended for use by the categoriser to correct any problems with a pending (in-progress) categorisation. Fields left as null will be left unchanged",
            "operationId":"updateCategorisationUsingPUT",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CategorisationUpdateDetail"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request - e.g. category does not exist."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Record new offender categorisation.",
            "description":"Create new categorisation record. The booking id and new sequence number is returned.",
            "operationId":"createCategorisationUsingPOST",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CategorisationDetail"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"object",
                           "additionalProperties":{
                              "type":"integer",
                              "format":"int64"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request - e.g. category does not exist."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/reject":{
         "put":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Reject a pending offender categorisation.",
            "description":"Update categorisation record with rejection.",
            "operationId":"rejectCategorisationUsingPUT",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CategoryRejectionDetail"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Validation error - e.g. comment too long or committee code does not exist."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/{agencyId}":{
         "get":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Returns category information on Offenders at a prison.",
            "operationId":"getOffenderCategorisationsUsingGET",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"Prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Indicates which type of category information is required.<li>UNCATEGORISED: Offenders who need to be categorised,</li><li>CATEGORISED: Offenders who have an approved categorisation,</li><li>RECATEGORISATIONS: Offenders who will soon require recategorisation</li>",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"For type CATEGORISED: The past date from which categorisations are returned.<br />For type RECATEGORISATIONS: the future cutoff date: list includes all prisoners who require re-categorisation on or before this date.<br />For type UNCATEGORISED: Ignored; do not set this parameter.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderCategorise"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Returns Categorisation details for supplied Offenders - POST version to allow large offender lists.",
            "description":"Categorisation details for supplied Offenders where agencyId is their create agency and is in the caseload",
            "operationId":"getOffenderCategorisationsUsingPOST",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"Prison id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Only get the latest category for each booking",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The list of offenders with categorisation details is returned if categorisation record exists and their create agency is in the caseload",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderCategorise"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/{bookingId}/inactive":{
         "put":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Set all active or pending (status A or P) categorisations inactive",
            "description":"This endpoint should only be used with edge case categorisations.",
            "operationId":"setCategorisationInactiveUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"Indicates which categorisation statuses to set.<li>ACTIVE (default): set all active (i.e. approved) categorisations inactive,</li><li>PENDING: set all pending (i.e. awaiting approval) categorisations inactive,</li>",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTIVE",
                        "PENDING"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request - e.g. invalid status."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update categorisations."
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/category/{bookingId}/nextReviewDate/{nextReviewDate}":{
         "put":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Update the next review date on the latest active categorisation",
            "description":"Update categorisation record with new next review date.",
            "operationId":"updateCategorisationNextReviewDate",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"nextReviewDate",
                  "in":"path",
                  "description":"The new next review date (in YYYY-MM-DD format)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to update the categorisation."
               },
               "404":{
                  "description":"Active categorisation not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/csra/list":{
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Retrieves Offender CRSAs for multiple offenders - POST version to allow large offender lists.",
            "operationId":"postOffenderAssessmentsCsraList",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The CSRA assessment list is returned, 1 per offender.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Assessment"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/csra/rating":{
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Retrieves CSRA ratings for multiple offenders - POST version to allow large offender lists.",
            "operationId":"postOffenderAssessmentsCsraRatings",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The current CSRA rating for each offender.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AssessmentClassification"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/csra/{bookingId}/assessment/{assessmentSeq}":{
         "get":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Retrieves details of a single CSRA assessment.",
            "operationId":"getOffenderCsraAssessment",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The booking id of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"assessmentSeq",
                  "in":"path",
                  "description":"The assessment sequence number for the given offender booking",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AssessmentDetail"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/csra/{offenderNo}":{
         "get":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Retrieves CSRAs for the given offender, ordered by the latest first.",
            "operationId":"getOffenderCsraAssessments",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offender number",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AssessmentSummary"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-assessments/{assessmentCode}":{
         "get":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Offender assessment detail for multiple offenders.",
            "operationId":"getOffenderAssessmentsAssessmentCode",
            "parameters":[
               {
                  "name":"assessmentCode",
                  "in":"path",
                  "description":"Assessment Type Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Returns only assessments for the current sentence if true, otherwise assessments for all previous sentences are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Returns only active assessments if true, otherwise inactive and pending assessments are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"mostRecentOnly",
                  "in":"query",
                  "description":"Returns only the last assessment per sentence if true, otherwise all assessments for the booking are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Assessment"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "offender-assessments"
            ],
            "summary":"Retrieves Offender assessment details for multiple offenders - POST version to allow large offender lists.",
            "operationId":"postOffenderAssessmentsAssessmentCode",
            "parameters":[
               {
                  "name":"assessmentCode",
                  "in":"path",
                  "description":"Assessment Type Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Returns only assessments for the current sentence if true, otherwise assessments for all previous sentences are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Returns only active assessments if true, otherwise inactive and pending assessments are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"mostRecentOnly",
                  "in":"query",
                  "description":"Returns only the last assessment per sentence if true, otherwise all assessments for the booking are included",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The assessment list is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Assessment"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/events":{
         "get":{
            "tags":[
               "events"
            ],
            "summary":"Get events",
            "description":"**from** and **to** query params are optional.\nAn awful lot of events occur every day. To guard against unintentionally heavy queries, the following rules are applied:\nIf **both** are absent, scope will be limited to 24 hours starting from midnight yesterday.\nIf **to** is present but **from** is absent, **from** will be defaulted to 24 hours before **to**.\nIf **from** is present but **to** is absent, **to** will be defaulted to 24 hours after **from**.",
            "operationId":"getEventsUsingGET",
            "parameters":[
               {
                  "name":"from",
                  "in":"query",
                  "description":"ISO 8601 Date Time without zone or offset (local date time), eg 2017-07-24T09:18:15",
                  "required":true,
                  "style":"form",
                  "allowReserved":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sortBy",
                  "in":"query",
                  "description":"Sort order",
                  "required":true,
                  "style":"form",
                  "allowReserved":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "TIMESTAMP_ASC",
                        "TIMESTAMP_DESC"
                     ]
                  }
               },
               {
                  "name":"to",
                  "in":"query",
                  "description":"ISO 8601 Date Time without zone or offset (local date time), eg 2017-07-24T09:18:15",
                  "required":true,
                  "style":"form",
                  "allowReserved":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Comma separated list of event types to filter inclusively:\nBALANCE_UPDATE\nCOURT_SENTENCE-CHANGED\nALERT-DELETED\nPERSON_ADDRESS-UPDATED\nOFFENDER_ADDRESS-UPDATED\nADDRESS-UPDATED\nPERSON_ADDRESS-DELETED\nOFFENDER_ADDRESS-DELETED\nADDRESS-DELETED\nPERSON_ADDRESS-INSERTED\nHDC_FINE-INSERTED\nHDC_CONDITION-CHANGED\nOFFENDER_EMPLOYMENT-INSERTED\nOFFENDER_EMPLOYMENT-UPDATED\nOFFENDER_EMPLOYMENT-DELETED\nPHONE-INSERTED\nPHONE-UPDATED\nPHONE-DELETED\nHEARING_RESULT-CHANGED\nHEARING_RESULT-DELETED\nHEARING_DATE-CHANGED\nSENTENCE_CALCULATION_DATES-CHANGED\nOFFENDER_PROFILE_DETAILS-UPDATED\nOFFENDER_PROFILE_DETAILS-INSERTED\nALERT-INSERTED\nALERT-UPDATED\nASSESSMENT-CHANGED\nIMPRISONMENT_STATUS-CHANGED\nOFFENDER_IDENTIFIER-INSERTED\nOFFENDER_IDENTIFIER-DELETED\nEDUCATION_LEVEL-INSERTED\nEDUCATION_LEVEL-UPDATED\nEDUCATION_LEVEL-DELETED\nCONTACT_PERSON-INSERTED\nCONTACT_PERSON-UPDATED\nCONTACT_PERSON-DELETED\nOFFENDER-UPDATED\nOFFENDER_ALIAS-CHANGED\nADDRESS_USAGE-INSERTED\nADDRESS_USAGE-UPDATED\nADDRESS_USAGE-DELETED\nOFFENDER_DETAILS-CHANGED\nOFFENDER_BOOKING-INSERTED\nOFFENDER_BOOKING-CHANGED\nOFFENDER_BOOKING-REASSIGNED\nEXTERNAL_MOVEMENT_RECORD-INSERTED\nEXTERNAL_MOVEMENT_RECORD-DELETED\nEXTERNAL_MOVEMENT_RECORD-UPDATED\nOFFENDER_MOVEMENT-DISCHARGE\nOFFENDER_MOVEMENT-RECEPTION\nMATERNITY_STATUS-INSERTED\nMATERNITY_STATUS-UPDATED\nRISK_SCORE-CHANGED\nRISK_SCORE-DELETED\nOFFENDER_SANCTION-CHANGED\nBOOKING_NUMBER-CHANGED",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "allowReserved":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderEvent"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/court-cases/{courtCaseId}/prison-to-court-hearings":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Schedules a prison to court hearing for an offender and given court case.",
            "description":"Schedules a prison to court hearing for an offender and given court case.",
            "operationId":"prisonToCourt",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking to associate the court hearing with.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"courtCaseId",
                  "in":"path",
                  "description":"The court case to associate the hearing with.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/PrisonToCourtHearing"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Court hearing created.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CourtHearing"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/court-hearings":{
         "get":{
            "tags":[
               "bookings"
            ],
            "summary":"getCourtHearings",
            "operationId":"getCourtHearingsUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking linked to the court hearings.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Return court hearings on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Return court hearings on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CourtHearings"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/court-hearings/{hearingId}/cancel":{
         "delete":{
            "tags":[
               "bookings"
            ],
            "summary":"Cancels the scheduled court hearing for an offender.",
            "description":"Cancels the scheduled court hearing for an offender.",
            "operationId":"cancelCourtHearing",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking to linked to the scheduled event.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"hearingId",
                  "in":"path",
                  "description":"The identifier of the scheduled event to be cancelled.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "204":{
                  "description":"No Content"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/court-hearings/{hearingId}/hearing-date":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Amends the scheduled court hearing date and/or time for an offender.",
            "description":"Amends the scheduled court hearing date and/or time for an offender.",
            "operationId":"courtHearingDateAmendment",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking to associate the update with.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"hearingId",
                  "in":"path",
                  "description":"The  court hearing to be updated.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CourtHearingDateAmendment"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CourtHearing"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/living-unit/{internalLocationDescription}":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"moveToCell",
            "operationId":"moveToCellUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"internalLocationDescription",
                  "in":"path",
                  "description":"The cell location the offender has been moved to",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"reasonCode",
                  "in":"query",
                  "description":"The reason code for the move (from reason code domain CHG_HOUS_RSN)",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"dateTime",
                  "in":"query",
                  "description":"The date / time of the move (defaults to current)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CellMoveResult"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/move-to-cell-swap":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"moveToCellSwap",
            "operationId":"moveToCellSwapUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestMoveToCellSwap"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CellMoveResult"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/prison-to-court-hearings":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Schedules a prison to court hearing for an offender.",
            "description":"Schedules a prison to court hearing for an offender.",
            "operationId":"prisonToCourt_1",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking to associate the court hearing with.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/PrisonToCourtHearing"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Court hearing created.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CourtHearing"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/prison-to-prison":{
         "post":{
            "tags":[
               "bookings"
            ],
            "summary":"Schedules a future prison to prison move for an offender.",
            "description":"Schedules a future prison to prison move for an offender.",
            "operationId":"prisonToPrison",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking to associate the prison to prison move with.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/SchedulePrisonToPrisonMove"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The scheduled prison move.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ScheduledPrisonToPrisonMove"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/bookings/{bookingId}/prison-to-prison/{eventId}/cancel":{
         "put":{
            "tags":[
               "bookings"
            ],
            "summary":"Cancels a scheduled prison to prison move for an offender.",
            "description":"Cancels a scheduled prison to prison move for an offender.",
            "operationId":"cancelPrisonToPrisonMove",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The offender booking linked to the scheduled event.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"eventId",
                  "in":"path",
                  "description":"The identifier of the scheduled event to be cancelled.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/PrisonMoveCancellation"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-relationships/externalRef/{externalRef}/{relationshipType}":{
         "get":{
            "tags":[
               "offender-relationships"
            ],
            "summary":"List of offenders",
            "description":"List of offenders",
            "operationId":"getBookingsByExternalRefAndType",
            "parameters":[
               {
                  "name":"externalRef",
                  "in":"path",
                  "description":"External Unique Reference to Contact Person",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"relationshipType",
                  "in":"path",
                  "description":"Relationship Type",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSummary"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-relationships/person/{personId}/{relationshipType}":{
         "get":{
            "tags":[
               "offender-relationships"
            ],
            "summary":"List of offenders that are related to this person Id and relationship type",
            "description":"List of offenders that are related to this person Id and relationship type",
            "operationId":"getBookingsByPersonIdAndType",
            "parameters":[
               {
                  "name":"personId",
                  "in":"path",
                  "description":"Person Id of the contact person",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"relationshipType",
                  "in":"path",
                  "description":"Relationship Type",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSummary"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders":{
         "post":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Creates a prisoner. BOOKING_CREATE role",
            "operationId":"createPrisonerUsingPOST",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToCreate"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to create a prisoner."
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/alerts/candidates":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of offender nos across the estate for which an alert has recently been created or changed",
            "description":"This query is slow and can take several minutes",
            "operationId":"getAlertCandidatesUsingGET",
            "parameters":[
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"A recent timestamp that indicates the earliest time to consider. NOTE More than a few days in the past can result in huge amounts of data.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first offender in returned list.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of offenders returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "type":"string"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/ids":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of all unique Noms IDs (also called Prisoner number and offenderNo).",
            "operationId":"getOffenderNumbersUsingGET",
            "parameters":[
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first Noms ID in returned list.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to the Noms IDs returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderNumber"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/incidents/candidates":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of offender nos across the estate for which an incident has recently occurred or changed",
            "description":"This query is slow and can take several minutes",
            "operationId":"getIncidentCandidatesUsingGET",
            "parameters":[
               {
                  "name":"fromDateTime",
                  "in":"query",
                  "description":"A recent timestamp that indicates the earliest time to consider. NOTE More than a few days in the past can result in huge amounts of data.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date-time"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first offender in returned list.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of offenders returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "type":"string"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/next-sequence":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Returns the next prisoner number (NOMS ID or Offender No) that can be used to create an offender",
            "operationId":"getNextPrisonerIdentifierUsingGET",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrisonerIdentifier"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Full details about the current state of an offender",
            "operationId":"getOffenderUsingGET_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/addresses":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of addresses for a given offender, most recent first.",
            "operationId":"getAddressesByOffenderNoUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AddressDto"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/adjudications":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of adjudications for a given offender",
            "operationId":"getAdjudicationsByOffenderNoUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offenceId",
                  "in":"query",
                  "description":"An offence id to allow optionally filtering by type of offence",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"agencyId",
                  "in":"query",
                  "description":"An agency id to allow optionally filtering by the agency in which the offence occurred",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"finding",
                  "in":"query",
                  "description":"Finding code to allow optionally filtering by type of finding",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"Adjudications must have been reported on or after this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"Adjudications must have been reported on or before this date (in YYYY-MM-DD format).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of adjudications.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of adjudications returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AdjudicationSearchResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/adjudications/{adjudicationNo}":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a specific adjudication",
            "operationId":"getAdjudicationUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"adjudicationNo",
                  "in":"path",
                  "description":"adjudicationNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/AdjudicationDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/alerts":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of alerts for a given offender No.",
            "description":"System or cat tool access only",
            "operationId":"getAlertsByOffenderNoUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Noms ID or Prisoner number",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"latestOnly",
                  "in":"query",
                  "description":"Only get alerts for the latest booking (prison term)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"query",
                  "in":"query",
                  "description":"Search parameters with the format [connector]:&lt;fieldName&gt;:&lt;operator&gt;:&lt;value&gt;:[format],... <p>Connector operators - and, or <p>Supported Operators - eq, neq, gt, gteq, lt, lteq, like, in</p> <p>Supported Fields - alertId, bookingId, alertType, alertCode, comment, dateCreated, dateExpires, active</p> ",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more Alert fields",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "active",
                        "alertCode",
                        "alertId",
                        "alertType",
                        "bookingId",
                        "comment",
                        "dateCreated",
                        "dateExpires"
                     ]
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Alert"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/booking":{
         "post":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Receives a prisoner on a new booking. BOOKING_CREATE role",
            "operationId":"newBookingUsingPOST",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestForNewBooking"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to receive prisoner on new bookings"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/case-notes":{
         "post":{
            "tags":[
               "offenders"
            ],
            "summary":"Create case note for offender.",
            "description":"Create case note for offender. Will attach to the latest booking",
            "operationId":"createOffenderCaseNote_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/NewCaseNote"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The Case Note has been recorded. The updated object is returned including the status."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "409":{
                  "description":"The case note has already been recorded under the booking. The current unmodified object (including status) is returned."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/case-notes/v2":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Offender case notes",
            "description":"Retrieve an offenders case notes for latest booking",
            "operationId":"getOffenderCaseNotesUsingGET_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Noms ID or Prisoner number (also called offenderNo)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"from",
                  "in":"query",
                  "description":"start contact date to search from",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"to",
                  "in":"query",
                  "description":"end contact date to search up to (including this date)",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"type",
                  "in":"query",
                  "description":"Filter by case note type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subType",
                  "in":"query",
                  "description":"Filter by case note sub-type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"prisonId",
                  "in":"query",
                  "description":"Filter by the ID of the prison",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfCaseNote"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/case-notes/{caseNoteId}":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Offender case note detail.",
            "description":"Retrieve an single offender case note",
            "operationId":"getOffenderCaseNote_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Noms ID or Prisoner number (also called offenderNo)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"caseNoteId",
                  "in":"path",
                  "description":"The case note id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"Amend offender case note.",
            "description":"Amend offender case note.",
            "operationId":"updateOffenderCaseNote_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Noms ID or Prisoner number (also called offenderNo)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"caseNoteId",
                  "in":"path",
                  "description":"The case note id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UpdateCaseNote"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseNote"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Case Note amendment processed successfully. Updated case note is returned."
               },
               "400":{
                  "description":"Invalid request - e.g. amendment text not provided."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to amend case note."
               },
               "404":{
                  "description":"Resource not found - offender or case note does not exist or is not accessible to user."
               },
               "500":{
                  "description":"Internal server error."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/damage-obligations":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a list of damage obligations",
            "operationId":"getOffenderDamageObligationsUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"Filter by obligation status. Leave blank to return all",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTIVE",
                        "APPEAL",
                        "INACT",
                        "ONH",
                        "PAID"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/OffenderDamageObligationResponse"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Offender does not exists or is in a different caseload to the user"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/discharge-to-hospital":{
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Discharges a prisoner to hospital, requires the RELEASE_PRISONER role",
            "operationId":"dischargePrisonerToHospitalUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToDischargePrisoner"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to release a prisoner."
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/iepSummary":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Offenders IEP (Incentives & Earned Privileges) summary for the latest booking only.",
            "description":"Offenders IEP (Incentives & Earned Privileges) summary.",
            "operationId":"getLatestBookingIEPSummaryForOffender",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"withDetails",
                  "in":"query",
                  "description":"Toggle to return IEP detail entries in response (or not).",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrivilegeSummary"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/incidents":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Return a set Incidents for a given offender No.",
            "description":"Can be filtered by participation type and incident type",
            "operationId":"getIncidentsByOffenderNoUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"offenderNo",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"incidentType",
                  "in":"query",
                  "description":"incidentType",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"participationRoles",
                  "in":"query",
                  "description":"participationRoles",
                  "required":true,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTINV",
                        "AI",
                        "AO",
                        "ASSIAL",
                        "FIGHT",
                        "IMPED",
                        "PAS",
                        "PERP",
                        "SUSASS",
                        "SUSINV",
                        "VICT"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/IncidentCase"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/military-records":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Military Records",
            "description":"Military Records",
            "operationId":"getMilitaryRecords_1",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Offender No",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/MilitaryRecords"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/prison-timeline":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Full details about the current state of an offender",
            "operationId":"getOffenderPrisonPeriodsUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of offender",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrisonerInPrisonSummary"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/recall":{
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Recalls a prisoner into prison. TRANSFER_PRISONER role",
            "operationId":"recallPrisonerUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToRecall"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to recall a prisoner."
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/release":{
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Releases a prisoner from their current prison location. Must be an active prisoner in currently inside a prison, requires the RELEASE_PRISONER role",
            "operationId":"releasePrisonerUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToReleasePrisoner"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to release a prisoner."
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/sentences":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Offender Sentence Details",
            "description":"Retrieve an single offender sentence details",
            "operationId":"getOffenderSentenceDetails",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Noms ID or Prisoner number (also called offenderNo)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/OffenderSentenceDetail"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/transaction-history":{
         "get":{
            "tags":[
               "offenders"
            ],
            "summary":"Retrieve an offender's financial transaction history for cash, spends or savings.",
            "description":"Transactions are returned in order of entryDate descending and sequence ascending).<br/>All transaction amounts are represented as pence values.",
            "operationId":"getTransactionsHistoryUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Offender No",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"account_code",
                  "in":"query",
                  "description":"Account code",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "cash",
                        "savings",
                        "spends"
                     ]
                  }
               },
               {
                  "name":"from_date",
                  "in":"query",
                  "description":"Start date for transactions, format yyyy-MM-dd",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"to_date",
                  "in":"query",
                  "description":"To date for transactions, format yyyy-MM-dd",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"transaction_type",
                  "in":"query",
                  "description":"Transaction type",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderTransactionHistoryDto"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Not a digital offender. Offender has no account at this prison."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Prison, offender or accountType not found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/transfer-in":{
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Transfer a prisoner into a prison. Must be an out prisoner in currently in transfer status, requires the TRANSFER_PRISONER role",
            "operationId":"transferInPrisonerUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToTransferIn"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden - user not authorised to transfer a prisoner"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offenders/{offenderNo}/transfer-out":{
         "put":{
            "tags":[
               "offenders"
            ],
            "summary":"*** BETA *** Marks a prisoner as in transit from their current prison location to a new prison. Must be an active prisoner in currently inside a prison, requires the TRANSFER_PRISONER role",
            "operationId":"transferOutPrisonerUsingPUT",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo of prisoner",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "pattern":"^[A-Z]\\d{4}[A-Z]{2}$",
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/RequestToTransferOut"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/InmateDetail"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences":{
         "get":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"List of offenders (with associated sentence detail).",
            "description":"<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
            "operationId":"getOffenderSentences",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"query",
                  "description":"agency/prison to restrict results, if none provided current active caseload will be used, unless offenderNo list is specified",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offenderNo",
                  "in":"query",
                  "description":"a list of offender numbers to search.",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSentenceDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Retrieves list of offenders (with associated sentence detail) - POST version to allow large offender lists.",
            "description":"Retrieves list of offenders (with associated sentence detail) - POST version to allow large offender lists.",
            "operationId":"postOffenderSentences",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The list of offenders is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSentenceDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/booking/{bookingId}/home-detention-curfews/latest":{
         "get":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Retrieve the current state of the latest Home Detention Curfew for a booking",
            "operationId":"getLatestHomeDetentionCurfewUsingGET",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"HDC information",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/HomeDetentionCurfew"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/booking/{bookingId}/home-detention-curfews/latest/approval-status":{
         "put":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Set the HDC approval status",
            "operationId":"setApprovalStatusUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ApprovalStatus"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "204":{
                  "description":"The new approval status was set"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Clear the HDC approval status",
            "operationId":"clearApprovalStatusUsingDELETE",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "204":{
                  "description":"The new approval status was cleared"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/booking/{bookingId}/home-detention-curfews/latest/checks-passed":{
         "put":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Set the HDC checks passed flag",
            "operationId":"setCurfewChecksUsingPUT",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/HdcChecks"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK"
               },
               "201":{
                  "description":"Created"
               },
               "204":{
                  "description":"The checks passed flag was set"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Clear the HDC checks passed flag",
            "operationId":"clearCurfewChecksUsingDELETE",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"bookingId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK"
               },
               "204":{
                  "description":"The checks passed flag was cleared"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/booking/{bookingId}/sentenceTerms":{
         "get":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Sentence term details for a prisoner",
            "operationId":"getOffenderSentenceTerms",
            "parameters":[
               {
                  "name":"bookingId",
                  "in":"path",
                  "description":"The required booking id (mandatory)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"filterBySentenceTermCodes",
                  "in":"query",
                  "description":"filterBySentenceTermCodes",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Sentence term details for a prisoner.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSentenceTerms"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/bookings":{
         "post":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"Retrieves list of offenders (with associated sentence detail) - POST version using booking id lists.",
            "description":"Retrieves list of offenders (with associated sentence detail) - POST version using booking id lists.",
            "operationId":"postOffenderSentencesBookings",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The list of offenders is returned.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSentenceDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/offender-sentences/home-detention-curfew-candidates":{
         "get":{
            "tags":[
               "offender-sentences"
            ],
            "summary":"List of offenders eligible for HDC",
            "description":"Version 1",
            "operationId":"getOffenderSentencesHomeDetentionCurfewCandidates",
            "responses":{
               "200":{
                  "description":"Sentence details for offenders who are candidates for Home Detention Curfew.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderSentenceCalc"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/persons/{personId}/addresses":{
         "get":{
            "tags":[
               "persons"
            ],
            "summary":"The addresses for person",
            "description":"The addresses for person",
            "operationId":"getPersonAddresses",
            "parameters":[
               {
                  "name":"personId",
                  "in":"path",
                  "description":"The persons NOMIS identifier (personId).",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AddressDto"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/persons/{personId}/emails":{
         "get":{
            "tags":[
               "persons"
            ],
            "summary":"The emails for person",
            "description":"The emails for person",
            "operationId":"getPersonEmails",
            "parameters":[
               {
                  "name":"personId",
                  "in":"path",
                  "description":"The persons NOMIS identifier (personId).",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Email"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/persons/{personId}/identifiers":{
         "get":{
            "tags":[
               "persons"
            ],
            "summary":"The most recent value of each type of person identifier",
            "description":"The most recent value of each type of person identifier",
            "operationId":"getPersonIdentifiers",
            "parameters":[
               {
                  "name":"personId",
                  "in":"path",
                  "description":"The persons NOMIS identifier (personId).",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PersonIdentifier"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/persons/{personId}/phones":{
         "get":{
            "tags":[
               "persons"
            ],
            "summary":"The phone numbers for person",
            "description":"The phone numbers for person",
            "operationId":"getPersonPhones",
            "parameters":[
               {
                  "name":"personId",
                  "in":"path",
                  "description":"The persons NOMIS identifier (personId).",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Telephone"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/prisoners":{
         "get":{
            "tags":[
               "prisoners"
            ],
            "summary":"List of offenders matching specified criteria.",
            "description":"List of offenders matching specified criteria.",
            "operationId":"getPrisoners",
            "parameters":[
               {
                  "name":"includeAliases",
                  "in":"query",
                  "description":"If true the result set should include a row for every matched alias.  If the request includes some combination of firstName, lastName and dateOfBirth then this will be a subset of the OFFENDERS records for one or more offenders. Otherwise it will be every OFFENDERS record for each match on the other search criteria. Default is false.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"offenderNo",
                  "in":"query",
                  "description":"List of offender NOMS numbers. NOMS numbers have the format:<b>ANNNNAA</b>",
                  "required":false,
                  "style":"form",
                  "explode":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"pncNumber",
                  "in":"query",
                  "description":"The offender's PNC (Police National Computer) number.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"croNumber",
                  "in":"query",
                  "description":"The offender's CRO (Criminal Records Office) number.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"firstName",
                  "in":"query",
                  "description":"The first name of the offender.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"middleNames",
                  "in":"query",
                  "description":"The middle name(s) of the offender.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"lastName",
                  "in":"query",
                  "description":"The last name of the offender.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"dob",
                  "in":"query",
                  "description":"The offender's date of birth. Cannot be used in conjunction with <i>dobFrom</i> or <i>dobTo</i>. Must be specified using YYYY-MM-DD format.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"dobFrom",
                  "in":"query",
                  "description":"Start date for offender date of birth search. If <i>dobTo</i> is not specified, an implicit <i>dobTo</i> value of <i>dobFrom</i> + 10 years will be applied. If <i>dobTo</i> is specified, it will be adjusted, if necessary, to ensure it is not more than 10 years after <i>dobFrom</i>. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"dobTo",
                  "in":"query",
                  "description":"End date for offender date of birth search. If <i>dobFrom</i> is not specified, an implicit <i>dobFrom</i> value of <i>dobTo</i> - 10 years will be applied. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"location",
                  "in":"query",
                  "description":"Offender's location filter (IN, OUT or ALL) - defaults to ALL.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"gender",
                  "in":"query",
                  "description":"Offender's gender code (F - Female, M - Male, NK - Not Known or NS - Not Specified).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"partialNameMatch",
                  "in":"query",
                  "description":"If <i>true</i>, the search will use partial, start-of-name matching of offender names (where provided). For example, if <i>lastName</i> criteria of 'AD' is specified, this will match an offender whose last name is 'ADAMS' but not an offender whose last name is 'HADAD'. This will typically increase the number of matching offenders found. This parameter can be used with any other search processing parameter (e.g. <i>prioritisedMatch</i> or <i>anyMatch</i>).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"prioritisedMatch",
                  "in":"query",
                  "description":"If <i>true</i>, search criteria prioritisation is used and searching/matching will stop as soon as one or more matching offenders are found. The criteria priority is:<br/><br/>1. <i>offenderNo</i><br/> 2. <i>pncNumber</i><br/>3. <i>croNumber</i><br/>4. <i>firstName</i>, <i>lastName</i>, <i>dob</i> <br/>5. <i>dobFrom</i>, <i>dobTo</i><br/><br/>As an example of how this works, if this parameter is set <i>true</i> and an <i>offenderNo</i> is specified and an offender having this offender number is found, searching will stop and that offender will be returned immediately. If no offender matching the specified <i>offenderNo</i> is found, the search will be repeated using the next priority criteria (<i>pncNumber</i>) and so on. Note that offender name and date of birth criteria have the same priority and will be used together to search for matching offenders (In this case the location filter will be ignored).",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"anyMatch",
                  "in":"query",
                  "description":"If <i>true</i>, offenders that match any of the specified criteria will be returned. The default search behaviour is to only return offenders that match <i>all</i> of the specified criteria. If the <i>prioritisedMatch</i> parameter is also set <i>true</i>, this parameter will only impact the behaviour of searching using offender name and date of birth criteria.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of prisoner records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of prisoner records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>offenderNo, pncNumber, croNumber, firstName, lastName, dob</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "prisoners"
            ],
            "summary":"List of offenders matching specified criteria. (POST version)",
            "description":"List of offenders matching specified criteria.",
            "operationId":"getPrisoners_1",
            "parameters":[
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of prisoner records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of prisoner records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>offenderNo, pncNumber, croNumber, firstName, lastName, dob</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/PrisonerDetailSearchCriteria"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/prisoners/{offenderNo}":{
         "get":{
            "tags":[
               "prisoners"
            ],
            "summary":"List of offenders globally matching the offenderNo.",
            "description":"List of offenders globally matching the offenderNo.",
            "operationId":"getPrisonersOffenderNo",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"The offenderNo to search for",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/prisoners/at-location/{establishmentCode}":{
         "get":{
            "tags":[
               "prisoners"
            ],
            "summary":"List of prisoners at a prison establishment",
            "description":"Pagination In Headers",
            "operationId":"getPrisonerDetailAtLocationOldUsingGET",
            "parameters":[
               {
                  "name":"establishmentCode",
                  "in":"path",
                  "description":"Establishment Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of prisoner records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of prisoner records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>bookingId, nomsId, cellLocation</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerInformation"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "deprecated":true,
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/prisoners/by-establishment/{establishmentCode}":{
         "get":{
            "tags":[
               "prisoners"
            ],
            "summary":"List of prisoners at a prison establishment",
            "operationId":"getPrisonerDetailAtLocationUsingGET",
            "parameters":[
               {
                  "name":"establishmentCode",
                  "in":"path",
                  "description":"Establishment Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"paged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.sorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"sort.unsorted",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"unpaged",
                  "in":"query",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PageOfPrisonerInformation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/prisoners/{offenderNo}/full-status":{
         "get":{
            "tags":[
               "prisoners"
            ],
            "summary":"Status and core offender information",
            "operationId":"getPrisonerInformationByIdUsingGET",
            "parameters":[
               {
                  "name":"offenderNo",
                  "in":"path",
                  "description":"Offender No (NOMS ID)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/PrisonerInformation"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized."
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"User not found."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/questionnaires/{category}/{code}":{
         "get":{
            "tags":[
               "questionnaires"
            ],
            "summary":"Return a questionnaire for a specified category and code",
            "operationId":"getQuestionnaireUsingGET",
            "parameters":[
               {
                  "name":"category",
                  "in":"path",
                  "description":"Category",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"code",
                  "in":"path",
                  "description":"Code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/Questionnaire"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/alertTypes":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"List of alert types (with alert codes).",
            "description":"List of alert types (with alert codes).",
            "operationId":"getAlertTypes",
            "parameters":[
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of alertType records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of alertType records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>code, description</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/caseNoteSources":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"List of case note source codes.",
            "description":"List of case note source codes.",
            "operationId":"getCaseNoteSources",
            "parameters":[
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of caseNoteSource records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of caseNoteSource records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>code, description</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/caseNoteTypes":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"List of all used case note types (with sub-types).",
            "description":"List of all used case note types (with sub-types).",
            "operationId":"getCaseNoteTypes",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/domains/{domain}":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"List of reference codes for reference domain.",
            "description":"List of reference codes for reference domain.",
            "operationId":"getReferenceCodesByDomain",
            "parameters":[
               {
                  "name":"domain",
                  "in":"path",
                  "description":"The domain identifier/name.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"withSubCodes",
                  "in":"query",
                  "description":"Specify whether or not to return reference codes with their associated sub-codes.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of domain records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of domain records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>code, description</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/domains/{domain}/codes/{code}":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"Reference code detail for reference domain and code (with sub-codes).",
            "description":"Reference code detail for reference domain and code (with sub-codes).",
            "operationId":"getReferenceCodeByDomainAndCode",
            "parameters":[
               {
                  "name":"domain",
                  "in":"path",
                  "description":"The domain identifier/name.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"code",
                  "in":"path",
                  "description":"The reference code.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"withSubCodes",
                  "in":"query",
                  "description":"Specify whether or not to return the reference code with its associated sub-codes.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ReferenceCode"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "reference-domains"
            ],
            "summary":"Updates a reference code",
            "operationId":"updateReferenceCodeUsingPUT",
            "parameters":[
               {
                  "name":"domain",
                  "in":"path",
                  "description":"The domain identifier/name.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"code",
                  "in":"path",
                  "description":"The reference code.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":0,
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ReferenceCodeInfo"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Updated",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ReferenceCode"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "reference-domains"
            ],
            "summary":"Creates a reference code",
            "operationId":"createReferenceCodeUsingPOST",
            "parameters":[
               {
                  "name":"domain",
                  "in":"path",
                  "description":"The domain identifier/name.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":0,
                     "type":"string"
                  }
               },
               {
                  "name":"code",
                  "in":"path",
                  "description":"The reference code.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "maxLength":12,
                     "minLength":0,
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/ReferenceCodeInfo"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/ReferenceCode"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/domains/{domain}/reverse-lookup":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"Reference code matching description ",
            "description":"Wild card can be specified",
            "operationId":"getReferenceCodeByDomainAndDescriptionUsingGET",
            "parameters":[
               {
                  "name":"domain",
                  "in":"path",
                  "description":"The domain identifier/name.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"description",
                  "in":"query",
                  "description":"decription of a reference code to find",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"wildcard",
                  "in":"query",
                  "description":"Specify whether or not to wild card the results",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/reference-domains/scheduleReasons":{
         "get":{
            "tags":[
               "reference-domains"
            ],
            "summary":"Get possible reason codes for created event.",
            "description":"Get possible reason codes for created event.",
            "operationId":"getScheduleReasons",
            "parameters":[
               {
                  "name":"eventType",
                  "in":"query",
                  "description":"Specify event type.",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/locations/{locationId}/activities":{
         "get":{
            "tags":[
               "schedules"
            ],
            "summary":"Get all Prisoner activities for given date at location.",
            "description":"Get all Prisoner activities for given date at location.",
            "operationId":"getActivitiesAtLocation",
            "parameters":[
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id where activity is held.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>cellLocation or lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               },
               {
                  "name":"includeSuspended",
                  "in":"query",
                  "description":"Include suspended scheduled activity - defaults to false",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/activities":{
         "get":{
            "tags":[
               "schedules"
            ],
            "summary":"Get all Prisoner activities for given date.",
            "description":"Get all Prisoner activities for given date",
            "operationId":"getActivitiesAtAllLocations",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>cellLocation or lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               },
               {
                  "name":"includeSuspended",
                  "in":"query",
                  "description":"Include suspended scheduled activity - defaults to false",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getActivitiesForBookings",
            "operationId":"getActivitiesForBookings",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"includeExcluded",
                  "in":"query",
                  "description":"Whether to include 'excluded' activities in the results",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/activities-by-date-range":{
         "get":{
            "tags":[
               "schedules"
            ],
            "summary":"Get all Prisoner activities for given date.",
            "description":"Get all Prisoner activities for given date range",
            "operationId":"getActivitiesAtAllLocationsByDateRange",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"fromDate",
                  "in":"query",
                  "description":"From date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"toDate",
                  "in":"query",
                  "description":"To Date of whereabouts list, default from date",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>cellLocation or lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               },
               {
                  "name":"includeSuspended",
                  "in":"query",
                  "description":"Include suspended scheduled activity - defaults to false",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/activities-by-event-ids":{
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getActivitiesByEventIds",
            "operationId":"getActivitiesByEventIds",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/appointments":{
         "get":{
            "tags":[
               "schedules"
            ],
            "summary":"getAppointments",
            "operationId":"getAppointments",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date the appointments are scheduled",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"locationId",
                  "in":"query",
                  "description":"Location id",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ScheduledAppointmentDto"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getAppointmentsForOffenders",
            "operationId":"getAppointmentsForOffenders",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/courtEvents":{
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getCourtEvents",
            "operationId":"getCourtEvents",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/events-by-location-ids":{
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"Get all events for given date for prisoners in listed cells. Note secondary sort is by start time",
            "description":"Get all events for given date for prisoners in listed cells. Note secondary sort is by start time",
            "operationId":"getGroupEvents",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>cellLocation or lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/externalTransfers":{
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getExternalTransfers",
            "operationId":"getExternalTransfers",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of scheduled transfer",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/locations/{locationId}/usage/{usage}":{
         "get":{
            "tags":[
               "schedules"
            ],
            "summary":"Get all Prisoner events for given date at location.",
            "description":"Get all Prisoner events for given date at location.",
            "operationId":"getLocationEvents",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The prison.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"locationId",
                  "in":"path",
                  "description":"The location id where event is held.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"usage",
                  "in":"path",
                  "description":"The locationUsage code from the location object - one of the INTERNAL_LOCATION_USAGE reference codes.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>cellLocation or lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/schedules/{agencyId}/visits":{
         "post":{
            "tags":[
               "schedules"
            ],
            "summary":"getVisits",
            "operationId":"getVisitsUsingPOST",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"agencyId",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"date",
                  "in":"query",
                  "description":"Date of whereabouts list, default today",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "format":"date"
                  }
               },
               {
                  "name":"timeSlot",
                  "in":"query",
                  "description":"AM, PM or ED",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "AM",
                        "ED",
                        "PM"
                     ]
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/PrisonerSchedule"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/search-offenders/{locationPrefix}/{keywords}":{
         "get":{
            "tags":[
               "search-offenders"
            ],
            "summary":"List offenders by location (matching keywords).",
            "description":"Deprecated: Use <b>/locations/description/{locationPrefix}/inmates</b> instead. This API will be removed in a future release.",
            "operationId":"searchForOffendersLocationAndKeyword",
            "parameters":[
               {
                  "name":"locationPrefix",
                  "in":"path",
                  "description":"locationPrefix",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"keywords",
                  "in":"path",
                  "description":"keywords",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"returnIep",
                  "in":"query",
                  "description":"return IEP data",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"returnAlerts",
                  "in":"query",
                  "description":"return Alert data",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of search-offender records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of search-offender records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b><<fieldsList>></b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/OffenderBooking"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "deprecated":true,
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/access-roles/caseload/{caseload}/access-role/{roleCode}":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"List access roles for staff by type and caseload",
            "description":"List access roles for staff by type and caseload",
            "operationId":"getAllStaffAccessRolesForCaseload",
            "parameters":[
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"roleCode",
                  "in":"path",
                  "description":"access role code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffUserRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/roles/{agencyId}/position/{position}/role/{role}":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"Get staff members within agency who are currently assigned the specified position and/or role.",
            "description":"Get staff members within agency who are currently assigned the specified position and/or role.",
            "operationId":"getStaffByAgencyPositionRole",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) id.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"position",
                  "in":"path",
                  "description":"The staff position.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"role",
                  "in":"path",
                  "description":"The staff role.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"nameFilter",
                  "in":"query",
                  "description":"Filter results by first name and/or last name of staff member.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"staffId",
                  "in":"query",
                  "description":"The staff id of a staff member.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Filters results by activeOnly staff members.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of role records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of role records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>firstName, lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffLocationRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/roles/{agencyId}/role/{role}":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"Get staff members within agency who are currently assigned the specified role.",
            "description":"Get staff members within agency who are currently assigned the specified role.",
            "operationId":"getStaffByAgencyRole",
            "parameters":[
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"The agency (prison) id.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"role",
                  "in":"path",
                  "description":"The staff role.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"nameFilter",
                  "in":"query",
                  "description":"Filter results by first name and/or last name of staff member. Supplied filter term is matched to start of staff member's first and last name.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"staffId",
                  "in":"query",
                  "description":"The staff id of a staff member.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"activeOnly",
                  "in":"query",
                  "description":"Filters results by activeOnly staff members.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of role records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of role records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>firstName, lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffLocationRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"Staff detail.",
            "description":"Staff detail.",
            "operationId":"getStaffDetail",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff member.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/StaffDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/access-roles":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"List of access roles for specified staff user and caseload",
            "description":"List of access roles for specified staff user and caseload",
            "operationId":"getStaffAccessRoles",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffUserRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "staff"
            ],
            "summary":"add access role to staff user for API caseload",
            "description":"add access role to staff user for API caseload",
            "operationId":"addStaffAccessRoleForApiCaseload",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"string"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The access role has been created.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/StaffUserRole"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/access-roles/caseload/{caseload}":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"List of access roles for specified staff user and caseload",
            "description":"List of access roles for specified staff user and caseload",
            "operationId":"getAccessRolesByCaseload",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff member.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffUserRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "staff"
            ],
            "summary":"add access role to staff user",
            "description":"add access role to staff user",
            "operationId":"addStaffAccessRole",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff member.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"string"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"The access role has been created.",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/StaffUserRole"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/access-roles/caseload/{caseload}/access-role/{roleCode}":{
         "delete":{
            "tags":[
               "staff"
            ],
            "summary":"remove access roles from user and specific caseload",
            "description":"remove access roles from user and specific caseload",
            "operationId":"removeStaffAccessRole",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff member.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"roleCode",
                  "in":"path",
                  "description":"access role code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"The access role has been removed"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/caseloads":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"Returns a list of caseloads associated with this staff user",
            "description":"List of caseloads for a specified staff user",
            "operationId":"getStaffCaseloads",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseLoad"
                           }
                        }
                     }
                  }
               },
               "204":{
                  "description":"No caseloads were found for this staff member."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"The staffId supplied was not valid or not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/emails":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"Returns a list of email addresses associated with this staff user",
            "description":"List of email addresses for a specified staff user",
            "operationId":"getStaffEmailAddresses",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "type":"string"
                           }
                        }
                     }
                  }
               },
               "204":{
                  "description":"No email addresses were found for this staff member."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"The staffId supplied was not valid."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/staff/{staffId}/{agencyId}/roles":{
         "get":{
            "tags":[
               "staff"
            ],
            "summary":"List of job roles for specified staff and agency Id",
            "description":"List of job roles for specified staff and agency Id",
            "operationId":"getAllRolesForAgency",
            "parameters":[
               {
                  "name":"staffId",
                  "in":"path",
                  "description":"The staff id of the staff member.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"agencyId",
                  "in":"path",
                  "description":"Agency Id.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/StaffRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get user details.",
            "description":"Get user details.",
            "operationId":"getUsers",
            "parameters":[
               {
                  "name":"nameFilter",
                  "in":"query",
                  "description":"Filter results by first name and/or username and/or last name of staff member.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"accessRole",
                  "in":"query",
                  "description":"Filter results by access role",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"Limit to active / inactive / show all users.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTIVE",
                        "ALL",
                        "INACTIVE"
                     ]
                  }
               },
               {
                  "name":"caseload",
                  "in":"query",
                  "description":"Filter results to include only those users that have access to the specified caseload (irrespective of whether it is currently active or not",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"activeCaseload",
                  "in":"query",
                  "description":"Filter results by user's currently active caseload i.e. the one they have currently selected.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of user records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of user records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>firstName, lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/UserDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/add/default/{caseload}":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Add the NWEB caseload to specified caseload.",
            "description":"Add the NWEB caseload to specified caseload.",
            "operationId":"addApiAccessForCaseload",
            "parameters":[
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"The caseload (equates to prison) id to add all active users to default API caseload (NWEB)",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"No New Users",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/CaseloadUpdate"
                        }
                     }
                  }
               },
               "201":{
                  "description":"New Users Enabled"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/list":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Returns the user details for supplied usernames - POST version to allow large user lists.",
            "description":"user details for supplied usernames",
            "operationId":"getUserDetailsList",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "uniqueItems":true,
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"The list of user details",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/UserDetail"
                           }
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/local-administrator/available":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get staff details for local administrator",
            "description":"Get user details for local administrator",
            "operationId":"getStaffUsersForLocalAdministrator",
            "parameters":[
               {
                  "name":"nameFilter",
                  "in":"query",
                  "description":"Filter results by first name and/or username and/or last name of staff member.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"accessRole",
                  "in":"query",
                  "description":"Filter results by access role",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"Limit to active / inactive / show all users.",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ACTIVE",
                        "ALL",
                        "INACTIVE"
                     ]
                  }
               },
               {
                  "name":"Page-Offset",
                  "in":"header",
                  "description":"Requested offset of first record in returned collection of caseload records.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Page-Limit",
                  "in":"header",
                  "description":"Requested limit to number of caseload records returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>firstName, lastName</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/UserDetail"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Current user detail.",
            "description":"Current user detail.",
            "operationId":"getMyUserInformation",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/UserDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me/activeCaseLoad":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Update working caseload for current user.",
            "description":"Update working caseload for current user.",
            "operationId":"updateMyActiveCaseLoad",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CaseLoad"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"object"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Invalid username or password"
               },
               "403":{
                  "description":"the user does not have permission to view the caseload."
               },
               "404":{
                  "description":"Not Found"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me/caseLoads":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"List of caseloads accessible to current user.",
            "description":"List of caseloads accessible to current user.",
            "operationId":"getMyCaseLoads",
            "parameters":[
               {
                  "name":"allCaseloads",
                  "in":"query",
                  "description":"If set to true then all caseloads are returned",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/CaseLoad"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me/caseNoteTypes":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"List of all case note types (with sub-types) accessible to current user (and based on working caseload).",
            "description":"List of all case note types (with sub-types) accessible to current user (and based on working caseload).",
            "operationId":"getMyCaseNoteTypes",
            "parameters":[
               {
                  "name":"Sort-Fields",
                  "in":"header",
                  "description":"Comma separated list of one or more of the following fields - <b>code, activeFlag, description</b>",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"Sort-Order",
                  "in":"header",
                  "description":"Sort order (ASC or DESC) - defaults to ASC.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "ASC",
                        "DESC"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/ReferenceCode"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me/locations":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"List of locations accessible to current user.",
            "description":"List of locations accessible to current user.",
            "operationId":"getMyLocations",
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Location"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/me/roles":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"List of roles for current user.",
            "description":"List of roles for current user.",
            "operationId":"getMyRoles",
            "parameters":[
               {
                  "name":"allRoles",
                  "in":"query",
                  "description":"If set to true then all roles are returned rather than just API roles",
                  "required":false,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/UserRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/{username}":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"User detail.",
            "description":"User detail.",
            "operationId":"getUserDetails",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"The username of the user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "$ref":"#/components/schemas/UserDetail"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/{username}/access-role":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Add the given access roles to the user.",
            "operationId":"addAccessRoles",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"The username of the user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Roles have been added or user already had the role(s)"
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The current user doesn't have permission to maintain user roles"
               },
               "404":{
                  "description":"The role(s) is not recognised or user cannot access caseload"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/{username}/access-role/{roleCode}":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Add the given access role to the user.",
            "description":"Add the given access role to the user.",
            "operationId":"addAccessRole",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"The username of the user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"roleCode",
                  "in":"path",
                  "description":"access role code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"User already has role"
               },
               "201":{
                  "description":"Role has been successfully added to user"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The current user doesn't have permission to maintain user roles"
               },
               "404":{
                  "description":"The role is not recognised or user cannot access caseload"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/{username}/access-roles/caseload/{caseload}":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"List of roles for the given user and caseload",
            "description":"List of roles for the given user and caseload",
            "operationId":"getRolesForUserAndCaseload",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"user account to filter by",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"includeAdmin",
                  "in":"query",
                  "description":"Include admin roles",
                  "required":true,
                  "style":"form",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "content":{
                     "*/*":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/AccessRole"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid request."
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Requested resource not found."
               },
               "500":{
                  "description":"Unrecoverable error occurred whilst processing request."
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      },
      "/api/users/{username}/caseload/{caseload}/access-role/{roleCode}":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Add the given access role to the user and caseload.",
            "description":"Add the given access role to the user and caseload.",
            "operationId":"addAccessRoleByCaseload",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"The username of the user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"roleCode",
                  "in":"path",
                  "description":"access role code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"User already has role"
               },
               "201":{
                  "description":"Role has been successfully added to user"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The current user doesn't have permission to maintain user roles"
               },
               "404":{
                  "description":"The role is not recognised or user cannot access caseload"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"Remove the given access role from the user.",
            "description":"Remove the given access role from the user.",
            "operationId":"removeUsersAccessRoleForCaseload",
            "parameters":[
               {
                  "name":"username",
                  "in":"path",
                  "description":"The username of the user.",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"caseload",
                  "in":"path",
                  "description":"Caseload Id",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"roleCode",
                  "in":"path",
                  "description":"access role code",
                  "required":true,
                  "style":"simple",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"User role has been removed"
               },
               "204":{
                  "description":"No Content"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"The current user doesn't have permission to maintain user roles"
               },
               "404":{
                  "description":"The role is not recognised or user does not have role on caseload"
               }
            },
            "security":[
               {
                  "Authorization":[

                  ]
               }
            ]
         }
      }
   },
   "components":{
      "schemas":{
         "AccessRole":{
            "title":"AccessRole",
            "required":[
               "roleCode"
            ],
            "type":"object",
            "properties":{
               "parentRoleCode":{
                  "type":"string",
                  "description":"role code of the parent role"
               },
               "roleCode":{
                  "type":"string",
                  "description":"unique code for the access role"
               },
               "roleFunction":{
                  "type":"string",
                  "description":"ADMIN or GENERAL"
               },
               "roleId":{
                  "type":"integer",
                  "description":"internal role id",
                  "format":"int64"
               },
               "roleName":{
                  "type":"string",
                  "description":"name of the access role"
               }
            },
            "description":"Access Role"
         },
         "Account":{
            "title":"Account",
            "required":[
               "cash",
               "currency",
               "damageObligations",
               "savings",
               "spends"
            ],
            "type":"object",
            "properties":{
               "cash":{
                  "type":"number",
                  "description":"Cash sub account balance.",
                  "format":"bigdecimal"
               },
               "currency":{
                  "type":"string",
                  "description":"Currency of these balances."
               },
               "damageObligations":{
                  "type":"number",
                  "description":"Damage obligation balance.",
                  "format":"bigdecimal"
               },
               "savings":{
                  "type":"number",
                  "description":"Saves sub account balance.",
                  "format":"bigdecimal"
               },
               "spends":{
                  "type":"number",
                  "description":"Spends sub account balance.",
                  "format":"bigdecimal"
               }
            },
            "description":"Prisoner Account Balance"
         },
         "AccountBalance":{
            "title":"AccountBalance",
            "type":"object",
            "properties":{
               "cash":{
                  "type":"integer",
                  "description":"Cash balance",
                  "format":"int64",
                  "example":13565
               },
               "savings":{
                  "type":"integer",
                  "description":"Saving balance",
                  "format":"int64",
                  "example":12344
               },
               "spends":{
                  "type":"integer",
                  "description":"Spends balance",
                  "format":"int64",
                  "example":5678
               }
            },
            "description":"Account Balance"
         },
         "AccountTransaction":{
            "title":"AccountTransaction",
            "required":[
               "amount",
               "date",
               "description",
               "id",
               "type"
            ],
            "type":"object",
            "properties":{
               "amount":{
                  "type":"integer",
                  "description":"Amount in pence",
                  "format":"int64",
                  "example":12345
               },
               "date":{
                  "type":"string",
                  "description":"Date of the transaction",
                  "format":"date",
                  "example":"2016-10-21T00:00:00.000+00:00"
               },
               "description":{
                  "type":"string",
                  "description":"Transaction description",
                  "example":"Transfer In Regular from caseload PVR"
               },
               "id":{
                  "type":"string",
                  "description":"Transaction ID",
                  "example":"204564839-3"
               },
               "type":{
                  "description":"The type of transaction",
                  "$ref":"#/components/schemas/CodeDescription"
               }
            },
            "description":"Account Transaction"
         },
         "AccountTransactions":{
            "title":"AccountTransactions",
            "type":"object",
            "properties":{
               "transactions":{
                  "type":"array",
                  "description":"List of account transactions",
                  "items":{
                     "$ref":"#/components/schemas/AccountTransaction"
                  }
               }
            },
            "description":"Account Transactions"
         },
         "ActiveOffender":{
            "title":"ActiveOffender",
            "type":"object",
            "properties":{
               "found":{
                  "type":"boolean",
                  "description":"found",
                  "example":true
               },
               "offender":{
                  "description":"offender",
                  "$ref":"#/components/schemas/OffenderId"
               }
            },
            "description":"Active Offender"
         },
         "AddressDto":{
            "title":"AddressDto",
            "required":[
               "noFixedAddress",
               "primary"
            ],
            "type":"object",
            "properties":{
               "addressId":{
                  "type":"integer",
                  "description":"Address Id",
                  "format":"int64",
                  "example":543524
               },
               "addressType":{
                  "type":"string",
                  "description":"Address Type",
                  "example":"BUS"
               },
               "addressUsages":{
                  "type":"array",
                  "description":"The address usages/types",
                  "items":{
                     "$ref":"#/components/schemas/AddressUsageDto"
                  }
               },
               "comment":{
                  "type":"string",
                  "description":"Comment",
                  "example":"This is a comment text"
               },
               "country":{
                  "type":"string",
                  "description":"Country",
                  "example":"ENG"
               },
               "county":{
                  "type":"string",
                  "description":"County",
                  "example":"HEREFORD"
               },
               "endDate":{
                  "type":"string",
                  "description":"Date ended",
                  "format":"date",
                  "example":"2021-02-12T00:00:00.000+00:00"
               },
               "flat":{
                  "type":"string",
                  "description":"Flat",
                  "example":"3B"
               },
               "locality":{
                  "type":"string",
                  "description":"Locality",
                  "example":"Brincliffe"
               },
               "noFixedAddress":{
                  "type":"boolean",
                  "description":"No Fixed Address",
                  "example":false
               },
               "phones":{
                  "type":"array",
                  "description":"The phone number associated with the address",
                  "items":{
                     "$ref":"#/components/schemas/Telephone"
                  }
               },
               "postalCode":{
                  "type":"string",
                  "description":"Postal Code",
                  "example":"LI1 5TH"
               },
               "premise":{
                  "type":"string",
                  "description":"Premise",
                  "example":"Liverpool Prison"
               },
               "primary":{
                  "type":"boolean",
                  "description":"Primary Address",
                  "example":false
               },
               "startDate":{
                  "type":"string",
                  "description":"Date Added",
                  "format":"date",
                  "example":"2005-05-12T00:00:00.000+00:00"
               },
               "street":{
                  "type":"string",
                  "description":"Street",
                  "example":"Slinn Street"
               },
               "town":{
                  "type":"string",
                  "description":"Town/City",
                  "example":"Liverpool"
               }
            },
            "description":"An Address"
         },
         "AddressUsageDto":{
            "title":"AddressUsageDto",
            "type":"object",
            "properties":{
               "activeFlag":{
                  "type":"boolean",
                  "description":"Active Flag",
                  "example":false
               },
               "addressId":{
                  "type":"integer",
                  "description":"Address ID of the associated address",
                  "format":"int64",
                  "example":23422313
               },
               "addressUsage":{
                  "type":"string",
                  "description":"The address usages",
                  "example":"HDC"
               },
               "addressUsageDescription":{
                  "type":"string",
                  "description":"The address usages description",
                  "example":"HDC Address"
               }
            },
            "description":"An Offender's address usage"
         },
         "Adjudication":{
            "title":"Adjudication",
            "type":"object",
            "properties":{
               "adjudicationCharges":{
                  "type":"array",
                  "description":"Charges made as part of the adjudication",
                  "items":{
                     "$ref":"#/components/schemas/AdjudicationCharge"
                  }
               },
               "adjudicationNumber":{
                  "type":"integer",
                  "description":"Adjudication Number",
                  "format":"int64",
                  "example":1234567
               },
               "agencyId":{
                  "type":"string",
                  "description":"Agency Id",
                  "example":"MDI"
               },
               "agencyIncidentId":{
                  "type":"integer",
                  "description":"Agency Incident Id",
                  "format":"int64",
                  "example":1484302
               },
               "partySeq":{
                  "type":"integer",
                  "description":"Party Sequence",
                  "format":"int64",
                  "example":1
               },
               "reportTime":{
                  "type":"string",
                  "description":"Report Time",
                  "format":"date-time"
               }
            },
            "description":"An overview of an adjudication"
         },
         "AdjudicationCharge":{
            "title":"AdjudicationCharge",
            "type":"object",
            "properties":{
               "findingCode":{
                  "type":"string",
                  "description":"Offence Finding Code",
                  "example":"PROVED"
               },
               "offenceCode":{
                  "type":"string",
                  "description":"Offence Code",
                  "example":"51:22"
               },
               "offenceDescription":{
                  "type":"string",
                  "description":"Offence Description",
                  "example":"Disobeys any lawful order"
               },
               "oicChargeId":{
                  "type":"string",
                  "description":"Charge Id",
                  "example":"1506763/1"
               }
            },
            "description":"A charge which was made as part of an adjudication"
         },
         "AdjudicationDetail":{
            "title":"AdjudicationDetail",
            "type":"object",
            "properties":{
               "adjudicationNumber":{
                  "type":"integer",
                  "description":"Adjudication Number",
                  "format":"int64",
                  "example":1234567
               },
               "establishment":{
                  "type":"string",
                  "description":"Establishment",
                  "example":"Moorland (HMP & YOI)"
               },
               "hearings":{
                  "type":"array",
                  "description":"Hearings",
                  "items":{
                     "$ref":"#/components/schemas/Hearing"
                  }
               },
               "incidentDetails":{
                  "type":"string",
                  "description":"Incident Details",
                  "example":"Whilst conducting an intelligence cell search..."
               },
               "incidentTime":{
                  "type":"string",
                  "description":"Incident Time",
                  "format":"date-time"
               },
               "interiorLocation":{
                  "type":"string",
                  "description":"Interior Location",
                  "example":"Wing A"
               },
               "reportNumber":{
                  "type":"integer",
                  "description":"Report Number",
                  "format":"int64",
                  "example":1234567
               },
               "reportTime":{
                  "type":"string",
                  "description":"Report Time",
                  "format":"date-time"
               },
               "reportType":{
                  "type":"string",
                  "description":"Report Type",
                  "example":"Governor's Report"
               },
               "reporterFirstName":{
                  "type":"string",
                  "description":"Reporter First Name",
                  "example":"John"
               },
               "reporterLastName":{
                  "type":"string",
                  "description":"Reporter Last Name",
                  "example":"Smith"
               }
            },
            "description":"Detail about an individual Adjudication"
         },
         "AdjudicationOffence":{
            "title":"AdjudicationOffence",
            "type":"object",
            "properties":{
               "code":{
                  "type":"string",
                  "description":"Offence Code",
                  "example":"51:7"
               },
               "description":{
                  "type":"string",
                  "description":"Offence Description",
                  "example":"Escapes or absconds from prison or from legal custody"
               },
               "id":{
                  "type":"string",
                  "description":"Offence Id",
                  "example":"8"
               }
            },
            "description":"A type of offence that can be made as part of an adjudication"
         },
         "AdjudicationSearchResponse":{
            "title":"AdjudicationSearchResponse",
            "type":"object",
            "properties":{
               "agencies":{
                  "type":"array",
                  "description":"Complete list of agencies where this offender has had adjudications",
                  "items":{
                     "$ref":"#/components/schemas/Agency"
                  }
               },
               "offences":{
                  "type":"array",
                  "description":"A complete list of the type of offences that this offender has had adjudications for",
                  "items":{
                     "$ref":"#/components/schemas/AdjudicationOffence"
                  }
               },
               "results":{
                  "type":"array",
                  "description":"Search results",
                  "items":{
                     "$ref":"#/components/schemas/Adjudication"
                  }
               }
            }
         },
         "AdjudicationSummary":{
            "title":"AdjudicationSummary",
            "required":[
               "adjudicationCount",
               "awards",
               "bookingId"
            ],
            "type":"object",
            "properties":{
               "adjudicationCount":{
                  "type":"integer",
                  "description":"Number of proven adjudications",
                  "format":"int32"
               },
               "awards":{
                  "type":"array",
                  "description":"List of awards / sanctions",
                  "items":{
                     "$ref":"#/components/schemas/Award"
                  }
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender Booking Id",
                  "format":"int64"
               }
            },
            "description":"Adjudication Summary for offender"
         },
         "Agency":{
            "title":"Agency",
            "required":[
               "active",
               "agencyId",
               "agencyType",
               "description"
            ],
            "type":"object",
            "properties":{
               "active":{
                  "type":"boolean",
                  "description":"Indicates the Agency is active",
                  "example":true
               },
               "addresses":{
                  "type":"array",
                  "description":"List of addresses associated with agency",
                  "items":{
                     "$ref":"#/components/schemas/AddressDto"
                  }
               },
               "agencyId":{
                  "type":"string",
                  "description":"Agency identifier.",
                  "example":"MDI"
               },
               "agencyType":{
                  "type":"string",
                  "description":"Agency type.  Reference domain is AGY_LOC_TYPE",
                  "example":"INST",
                  "enum":[
                     "AIRPORT",
                     "APPR",
                     "COMM",
                     "CRC",
                     "CRT",
                     "HOSPITAL",
                     "HOST",
                     "HSHOSP",
                     "IMDC",
                     "INST",
                     "OUT",
                     "PAR",
                     "PECS",
                     "PNP",
                     "POLICE",
                     "POLSTN",
                     "PSY",
                     "SCH",
                     "STC",
                     "TRN",
                     "YOT"
                  ]
               },
               "courtType":{
                  "type":"string",
                  "description":"Court Type.  Reference domain is JURISDICTION",
                  "example":"CC",
                  "enum":[
                     "CACD",
                     "CB",
                     "CC",
                     "CO",
                     "DCM",
                     "GCM",
                     "IMM",
                     "MC",
                     "OTHER",
                     "YC"
                  ]
               },
               "deactivationDate":{
                  "type":"string",
                  "description":"Date agency became inactive",
                  "format":"date",
                  "example":"2012-01-12T00:00:00.000+00:00"
               },
               "description":{
                  "type":"string",
                  "description":"Agency description.",
                  "example":"Moorland (HMP & YOI)"
               },
               "emails":{
                  "type":"array",
                  "description":"List of emails associated with agency",
                  "items":{
                     "$ref":"#/components/schemas/Email"
                  }
               },
               "longDescription":{
                  "type":"string",
                  "description":"Long description of the agency",
                  "example":"Moorland (HMP & YOI)"
               },
               "phones":{
                  "type":"array",
                  "description":"List of phones associated with agency",
                  "items":{
                     "$ref":"#/components/schemas/Telephone"
                  }
               }
            },
            "description":"Agency Details"
         },
         "AgencyEstablishmentType":{
            "title":"AgencyEstablishmentType",
            "required":[
               "code",
               "description"
            ],
            "type":"object",
            "properties":{
               "code":{
                  "type":"string",
                  "description":"Code.",
                  "example":"IM"
               },
               "description":{
                  "type":"string",
                  "description":"Description.",
                  "example":"Closed Young Offender Institute (Male)"
               }
            },
            "description":"Agency Establishment Type"
         },
         "AgencyEstablishmentTypes":{
            "title":"AgencyEstablishmentTypes",
            "required":[
               "agencyId"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency id",
                  "example":"MDI"
               },
               "establishmentTypes":{
                  "type":"array",
                  "description":"The establishment types for the agency.",
                  "items":{
                     "$ref":"#/components/schemas/AgencyEstablishmentType"
                  }
               }
            },
            "description":"Agency Establishment Types"
         },
         "Alert":{
            "title":"Alert",
            "required":[
               "active",
               "alertCode",
               "alertCodeDescription",
               "alertId",
               "alertType",
               "alertTypeDescription",
               "bookingId",
               "comment",
               "dateCreated",
               "expired",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "active":{
                  "type":"boolean",
                  "description":"True / False based on alert status",
                  "example":false
               },
               "addedByFirstName":{
                  "type":"string",
                  "description":"First name of the user who added the alert",
                  "example":"John"
               },
               "addedByLastName":{
                  "type":"string",
                  "description":"Last name of the user who added the alert",
                  "example":"Smith"
               },
               "alertCode":{
                  "type":"string",
                  "description":"Alert Code",
                  "example":"XER"
               },
               "alertCodeDescription":{
                  "type":"string",
                  "description":"Alert Code Description",
                  "example":"Escape Risk"
               },
               "alertId":{
                  "type":"integer",
                  "description":"Alert Id",
                  "format":"int64",
                  "example":1
               },
               "alertType":{
                  "type":"string",
                  "description":"Alert Type",
                  "example":"X"
               },
               "alertTypeDescription":{
                  "type":"string",
                  "description":"Alert Type Description",
                  "example":"Security"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":14
               },
               "comment":{
                  "type":"string",
                  "description":"Alert comments",
                  "example":"Profession lock pick."
               },
               "dateCreated":{
                  "type":"string",
                  "description":"Date the alert was created",
                  "format":"date",
                  "example":"2019-08-20T00:00:00.000+00:00"
               },
               "dateExpires":{
                  "type":"string",
                  "description":"Date the alert expires",
                  "format":"date",
                  "example":"2020-08-20T00:00:00.000+00:00"
               },
               "expired":{
                  "type":"boolean",
                  "description":"True / False based on presence of expiry date",
                  "example":true
               },
               "expiredByFirstName":{
                  "type":"string",
                  "description":"First name of the user who expired the alert",
                  "example":"John"
               },
               "expiredByLastName":{
                  "type":"string",
                  "description":"Last name of the user who expired the alert",
                  "example":"Smith"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference",
                  "example":"G3878UK"
               }
            },
            "description":"Alert"
         },
         "AlertChanges":{
            "title":"AlertChanges",
            "type":"object",
            "properties":{
               "comment":{
                  "type":"string",
                  "description":"Alert comment"
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Date the alert became inactive",
                  "format":"date",
                  "example":"2019-02-13T00:00:00.000+00:00"
               }
            },
            "description":"Update an alert"
         },
         "AlertCreated":{
            "title":"AlertCreated",
            "type":"object",
            "properties":{
               "alertId":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         },
         "AlertV1":{
            "title":"AlertV1",
            "required":[
               "alert_date",
               "alert_sub_type",
               "alert_type"
            ],
            "type":"object",
            "properties":{
               "alert_date":{
                  "type":"string",
                  "description":"Date the alert became effective",
                  "format":"date",
                  "example":"2019-02-13T00:00:00.000+00:00"
               },
               "alert_sub_type":{
                  "description":"Code and description identifying the sub type of alert",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"XEL\", \"desc\": \"Escape List\" }"
               },
               "alert_type":{
                  "description":"Code and description identifying the type of alert",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"FX\", \"desc\": \"Security\" }"
               },
               "comment":{
                  "type":"string",
                  "description":"Free Text Comment",
                  "example":"has a large poster on cell wall"
               },
               "expiry_date":{
                  "type":"string",
                  "description":"Alert Type",
                  "format":"date",
                  "example":"2019-04-15T00:00:00.000+00:00"
               },
               "status":{
                  "type":"string",
                  "description":"ACTIVE or INACTIVE (Inactive alerts will have a expiry date of today or earlier",
                  "example":"ACTIVE",
                  "enum":[
                     "ACTIVE",
                     "INACTIVE"
                  ]
               }
            },
            "description":"Offender Alert"
         },
         "Alerts":{
            "title":"Alerts",
            "type":"object",
            "properties":{
               "alerts":{
                  "type":"array",
                  "description":"Alerts",
                  "items":{
                     "$ref":"#/components/schemas/AlertV1"
                  }
               }
            },
            "description":"Alerts"
         },
         "Alias":{
            "title":"Alias",
            "required":[
               "age",
               "createDate",
               "dob",
               "firstName",
               "gender",
               "lastName"
            ],
            "type":"object",
            "properties":{
               "age":{
                  "type":"integer",
                  "description":"Age of Offender",
                  "format":"int32",
                  "example":32
               },
               "createDate":{
                  "type":"string",
                  "description":"Date of creation",
                  "format":"date",
                  "example":"2019-02-15T00:00:00.000+00:00"
               },
               "dob":{
                  "type":"string",
                  "description":"Date of Birth of Offender",
                  "format":"date",
                  "example":"1980-02-28T00:00:00.000+00:00"
               },
               "ethnicity":{
                  "type":"string",
                  "description":"Ethnicity",
                  "example":"Mixed: White and Black African"
               },
               "firstName":{
                  "type":"string",
                  "description":"First name of offender alias",
                  "example":"Mike"
               },
               "gender":{
                  "type":"string",
                  "description":"Gender",
                  "example":"Male"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last name of offender alias",
                  "example":"Smith"
               },
               "middleName":{
                  "type":"string",
                  "description":"Middle names of offender alias",
                  "example":"John"
               },
               "nameType":{
                  "type":"string",
                  "description":"Type of Alias",
                  "example":"Alias Name"
               }
            },
            "description":"Alias"
         },
         "AppointmentDefaults":{
            "title":"AppointmentDefaults",
            "required":[
               "appointmentType",
               "locationId",
               "startTime"
            ],
            "type":"object",
            "properties":{
               "appointmentType":{
                  "maxLength":12,
                  "minLength":0,
                  "pattern":"\\w*",
                  "type":"string",
                  "description":"The scheduled event subType",
                  "example":"ACTI"
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"A comment that applies to all the appointments in this request.",
                  "example":"Please provide helpful supporting text when it applies to all the appointments specified by this request."
               },
               "endTime":{
                  "type":"string",
                  "description":"The date and time at which the appointments end. ISO 8601 Date-time format. endTime, if present, must be later than startTime.",
                  "format":"date-time"
               },
               "locationId":{
                  "type":"integer",
                  "description":"The identifier of the appointments' Location. The location must be situated in the requestor's case load.",
                  "format":"int64",
                  "example":25
               },
               "startTime":{
                  "type":"string",
                  "description":"The date and time at which the appointments start. ISO 8601 Date-time format. startTime must be in the future.",
                  "format":"date-time"
               }
            },
            "description":"Default values to be applied when creating each appointment"
         },
         "AppointmentDetails":{
            "title":"AppointmentDetails",
            "required":[
               "bookingId"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"The Booking id of the offender for whom the appointment is to be created.",
                  "format":"int64",
                  "example":123456
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"The Appointment's details. When present this value replaces the default comment.",
                  "example":"Please provide helpful supporting text relevant to this particular appointment when the default comment is not suitable."
               },
               "endTime":{
                  "type":"string",
                  "description":"A replacement for the default endTime. ISO 8601 date-time format.  This value, when present, must be later than the default startTime, or the startTime in this object if it is defined.",
                  "format":"date-time"
               },
               "startTime":{
                  "type":"string",
                  "description":"A replacement for the default startTime. ISO 8601 date-time format.  This value, when present, must be in the future.",
                  "format":"date-time"
               }
            },
            "description":"Detail for creating an appointment for a particular bookingId where values should differ from the defaults"
         },
         "AppointmentsToCreate":{
            "title":"AppointmentsToCreate",
            "required":[
               "appointmentDefaults",
               "appointments"
            ],
            "type":"object",
            "properties":{
               "appointmentDefaults":{
                  "description":"The default values to be applied to each new appointment. An individual appointment may change the startTime, add or change the endTime and provide text for that appointment's comment.",
                  "$ref":"#/components/schemas/AppointmentDefaults"
               },
               "appointments":{
                  "type":"array",
                  "description":"The details for creating each appointment.  A Missing value falls back to the default value if present. Mandatory, but an empty list is accepted.",
                  "items":{
                     "$ref":"#/components/schemas/AppointmentDetails"
                  }
               },
               "repeat":{
                  "description":"If present specifies the number of times to repeat the appointments and the period of the repeat",
                  "$ref":"#/components/schemas/Repeat"
               }
            },
            "description":"Details for creating appointments in bulk"
         },
         "ApprovalStatus":{
            "title":"ApprovalStatus",
            "required":[
               "approvalStatus",
               "date"
            ],
            "type":"object",
            "properties":{
               "approvalStatus":{
                  "type":"string",
                  "description":"Approval status. Must be one of the 'HDC_APPROVE' reference codes",
                  "example":"APPROVED"
               },
               "date":{
                  "type":"string",
                  "description":"Approval status date. ISO-8601 format. YYYY-MM-DD",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "refusedReason":{
                  "type":"string",
                  "description":"Refused reason. Must be one of the 'HDC_REJ_RSN' reference codes",
                  "example":"UNDER_14DAYS"
               }
            },
            "description":"HDC Approval Status"
         },
         "Assessment":{
            "title":"Assessment",
            "type":"object",
            "properties":{
               "approvalDate":{
                  "type":"string",
                  "description":"Date of assessment approval",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "assessmentAgencyId":{
                  "type":"string",
                  "description":"The assessment creation agency id",
                  "example":"MDI"
               },
               "assessmentCode":{
                  "type":"string",
                  "description":"Identifies the type of assessment",
                  "example":"CATEGORY"
               },
               "assessmentComment":{
                  "type":"string",
                  "description":"Comment from assessor",
                  "example":"Comment details"
               },
               "assessmentDate":{
                  "type":"string",
                  "description":"Date assessment was created",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "assessmentDescription":{
                  "type":"string",
                  "description":"Assessment description",
                  "example":"Categorisation"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number of assessment within booking",
                  "format":"int32",
                  "example":1
               },
               "assessmentStatus":{
                  "type":"string",
                  "description":"The status of the assessment",
                  "example":"A",
                  "enum":[
                     "A",
                     "I",
                     "P"
                  ]
               },
               "assessorId":{
                  "type":"integer",
                  "description":"Staff member who made the assessment",
                  "format":"int64",
                  "example":130000
               },
               "assessorUser":{
                  "type":"string",
                  "description":"Username who made the assessment",
                  "example":"NGK33Y"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking number",
                  "format":"int64",
                  "example":123456
               },
               "cellSharingAlertFlag":{
                  "type":"boolean",
                  "description":"Indicates the presence of a cell sharing alert",
                  "example":false
               },
               "classification":{
                  "type":"string",
                  "description":"Classification description",
                  "example":"Cat C"
               },
               "classificationCode":{
                  "type":"string",
                  "description":"Classification code",
                  "example":"C"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Date of next review",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number).",
                  "example":"GV09876N"
               }
            },
            "description":"Assessment"
         },
         "AssessmentClassification":{
            "title":"AssessmentClassification",
            "type":"object",
            "properties":{
               "classificationCode":{
                  "type":"string",
                  "description":"The current classification code. This will not have a value if np assessment has been completed",
                  "example":"STANDARD"
               },
               "classificationDate":{
                  "type":"string",
                  "description":"The date that the current classification was made. This will not have a value if np assessment has been completed",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number).",
                  "example":"GV09876N"
               }
            },
            "description":"AssessmentRating"
         },
         "AssessmentDetail":{
            "title":"AssessmentDetail",
            "type":"object",
            "properties":{
               "approvalCommitteeCode":{
                  "type":"string",
                  "description":"The code of the committee that conducted the approval",
                  "example":"REVIEW"
               },
               "approvalCommitteeName":{
                  "type":"string",
                  "description":"The name of the committee that conducted the approval",
                  "example":"REVIEW"
               },
               "approvalDate":{
                  "type":"string",
                  "description":"Date of assessment approval",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "assessmentAgencyId":{
                  "type":"string",
                  "description":"The assessment creation agency id",
                  "example":"MDI"
               },
               "assessmentCode":{
                  "type":"string",
                  "description":"Identifies the type of assessment",
                  "example":"CSR"
               },
               "assessmentComment":{
                  "type":"string",
                  "description":"Comment from assessor",
                  "example":"Comment details"
               },
               "assessmentCommitteeCode":{
                  "type":"string",
                  "description":"The code of the committee that conducted the assessment",
                  "example":"REVIEW"
               },
               "assessmentCommitteeName":{
                  "type":"string",
                  "description":"The name of the committee that conducted the assessment",
                  "example":"REVIEW"
               },
               "assessmentDate":{
                  "type":"string",
                  "description":"Date assessment was created",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number of assessment within booking",
                  "format":"int32",
                  "example":1
               },
               "assessorUser":{
                  "type":"string",
                  "description":"Username who made the assessment",
                  "example":"NGK33Y"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking number",
                  "format":"int64",
                  "example":123456
               },
               "cellSharingAlertFlag":{
                  "type":"boolean",
                  "description":"Indicates whether this is a CSRA assessment",
                  "example":false
               },
               "classificationCode":{
                  "type":"string",
                  "description":"Classification code. This will not have a value if the assessment is incomplete or pending",
                  "example":"STANDARD"
               },
               "classificationReviewReason":{
                  "type":"string",
                  "description":"The reason for the review of the classification",
                  "example":"HI"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Date of next review",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number).",
                  "example":"GV09876N"
               },
               "originalClassificationCode":{
                  "type":"string",
                  "description":"Classification code before it was reviewed",
                  "example":"HI"
               },
               "questions":{
                  "type":"array",
                  "description":"Assessment questions and answers, in the order they were asked",
                  "items":{
                     "$ref":"#/components/schemas/AssessmentQuestion"
                  }
               }
            },
            "description":"AssessmentDetail"
         },
         "AssessmentQuestion":{
            "title":"AssessmentQuestion",
            "type":"object",
            "properties":{
               "additionalAnswers":{
                  "type":"array",
                  "description":"If a question has more than one answer, all but the first answer will be in this property",
                  "items":{
                     "type":"string"
                  }
               },
               "answer":{
                  "type":"string",
                  "description":"The answer given. More than one answer might have been given, in which case the other answers will be in the additionalAnswers property"
               },
               "question":{
                  "type":"string",
                  "description":"Question"
               }
            },
            "description":"AssessmentQuestion"
         },
         "AssessmentSummary":{
            "title":"AssessmentSummary",
            "type":"object",
            "properties":{
               "assessmentAgencyId":{
                  "type":"string",
                  "description":"The assessment creation agency id",
                  "example":"MDI"
               },
               "assessmentCode":{
                  "type":"string",
                  "description":"Identifies the type of assessment",
                  "example":"CSR"
               },
               "assessmentComment":{
                  "type":"string",
                  "description":"Comment from assessor",
                  "example":"Comment details"
               },
               "assessmentDate":{
                  "type":"string",
                  "description":"Date assessment was created",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number of assessment within booking",
                  "format":"int32",
                  "example":1
               },
               "assessorUser":{
                  "type":"string",
                  "description":"Username who made the assessment",
                  "example":"NGK33Y"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking number",
                  "format":"int64",
                  "example":123456
               },
               "cellSharingAlertFlag":{
                  "type":"boolean",
                  "description":"Indicates whether this is a CSRA assessment",
                  "example":false
               },
               "classificationCode":{
                  "type":"string",
                  "description":"Classification code. This will not have a value if the assessment is incomplete or pending",
                  "example":"STANDARD"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Date of next review",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number).",
                  "example":"GV09876N"
               }
            },
            "description":"AssessmentSummary"
         },
         "AssignedLivingUnit":{
            "title":"AssignedLivingUnit",
            "required":[
               "agencyId",
               "agencyName",
               "description",
               "locationId"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency Id"
               },
               "agencyName":{
                  "type":"string",
                  "description":"Name of the agency where this living unit resides"
               },
               "description":{
                  "type":"string",
                  "description":"Living Unit Desc"
               },
               "locationId":{
                  "type":"integer",
                  "description":"location Id",
                  "format":"int64"
               }
            },
            "description":"Assigned Living Unit"
         },
         "AvailableDates":{
            "title":"AvailableDates",
            "type":"object",
            "properties":{
               "dates":{
                  "type":"array",
                  "description":"Available Dates",
                  "items":{
                     "type":"string",
                     "format":"date"
                  }
               }
            },
            "description":"Available Dates"
         },
         "Award":{
            "title":"Award",
            "required":[
               "effectiveDate",
               "hearingId",
               "hearingSequence",
               "sanctionCode"
            ],
            "type":"object",
            "properties":{
               "comment":{
                  "type":"string",
                  "description":"Optional details"
               },
               "days":{
                  "type":"integer",
                  "description":"Number of days duration",
                  "format":"int32"
               },
               "effectiveDate":{
                  "type":"string",
                  "description":"Start of sanction",
                  "format":"date"
               },
               "hearingId":{
                  "type":"integer",
                  "description":"Id of hearing",
                  "format":"int64"
               },
               "hearingSequence":{
                  "type":"integer",
                  "description":"hearing record sequence number",
                  "format":"int32"
               },
               "limit":{
                  "type":"number",
                  "description":"Compensation amount",
                  "format":"bigdecimal"
               },
               "months":{
                  "type":"integer",
                  "description":"Number of months duration",
                  "format":"int32"
               },
               "sanctionCode":{
                  "type":"string",
                  "description":"Type of award"
               },
               "sanctionCodeDescription":{
                  "type":"string",
                  "description":"Award type description"
               },
               "status":{
                  "type":"string",
                  "description":"Award status (ref domain OIC_SANCT_ST)"
               },
               "statusDescription":{
                  "type":"string",
                  "description":"Award status description"
               }
            },
            "description":"Adjudication award / sanction"
         },
         "BaseSentenceDetail":{
            "title":"BaseSentenceDetail",
            "type":"object",
            "properties":{
               "actualParoleDate":{
                  "type":"string",
                  "description":"APD - the offender's actual parole date.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "automaticReleaseDate":{
                  "type":"string",
                  "description":"ARD - calculated automatic (unconditional) release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "conditionalReleaseDate":{
                  "type":"string",
                  "description":"CRD - calculated conditional release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "dtoPostRecallReleaseDate":{
                  "type":"string",
                  "description":"DPRRD - Detention training order post recall release date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "earlyRemovalSchemeEligibilityDate":{
                  "type":"string",
                  "description":"ERSED - the date on which offender will be eligible for early removal (under the Early Removal Scheme for foreign nationals).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "earlyTermDate":{
                  "type":"string",
                  "description":"ETD - early term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "effectiveSentenceEndDate":{
                  "type":"string",
                  "description":"Effective sentence end date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "homeDetentionCurfewActualDate":{
                  "type":"string",
                  "description":"HDCAD - the offender's actual home detention curfew date.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "homeDetentionCurfewEligibilityDate":{
                  "type":"string",
                  "description":"HDCED - date on which offender will be eligible for home detention curfew.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "lateTermDate":{
                  "type":"string",
                  "description":"LTD - late term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "licenceExpiryDate":{
                  "type":"string",
                  "description":"LED - date on which offender licence expires.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "midTermDate":{
                  "type":"string",
                  "description":"MTD - mid term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "nonParoleDate":{
                  "type":"string",
                  "description":"NPD - calculated non-parole date for offender (relating to the 1991 act).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "paroleEligibilityDate":{
                  "type":"string",
                  "description":"PED - date on which offender is eligible for parole.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "postRecallReleaseDate":{
                  "type":"string",
                  "description":"PRRD - calculated post-recall release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "releaseOnTemporaryLicenceDate":{
                  "type":"string",
                  "description":"ROTL - the date on which offender will be released on temporary licence.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "sentenceExpiryDate":{
                  "type":"string",
                  "description":"SED - date on which sentence expires.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "tariffDate":{
                  "type":"string",
                  "description":"Date on which minimum term is reached for parole (indeterminate/life sentences).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "tariffEarlyRemovalSchemeEligibilityDate":{
                  "type":"string",
                  "description":"TERSED - Tariff early removal scheme eligibility date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "topupSupervisionExpiryDate":{
                  "type":"string",
                  "description":"TUSED - top-up supervision expiry date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               }
            },
            "description":"Sentence Details"
         },
         "BedAssignment":{
            "title":"BedAssignment",
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency of living unit",
                  "example":"MDI"
               },
               "assignmentDate":{
                  "type":"string",
                  "description":"Date the offender was assigned to a living unit.",
                  "format":"date",
                  "example":"2020-10-12T00:00:00.000+00:00"
               },
               "assignmentDateTime":{
                  "type":"string",
                  "description":"Date and time the offender was moved to a living unit.",
                  "format":"date-time"
               },
               "assignmentEndDate":{
                  "type":"string",
                  "description":"Date an offender was moved out of the living unit",
                  "format":"date",
                  "example":"2020-11-12T00:00:00.000+00:00"
               },
               "assignmentEndDateTime":{
                  "type":"string",
                  "description":"Date and time an offender was moved out of the living unit",
                  "format":"date-time"
               },
               "assignmentReason":{
                  "type":"string",
                  "description":"Assignment reason code",
                  "example":"ADM"
               },
               "bedAssignmentHistorySequence":{
                  "type":"integer",
                  "description":"Bed assignment sequence. Used as a primary key when combined with the booking id",
                  "format":"int32",
                  "example":2
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Unique, numeric booking id. Used as a primary key when combined with the bed assignment sequence",
                  "format":"int64",
                  "example":1234134
               },
               "description":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) ",
                  "example":"MDI-1-1-2"
               },
               "livingUnitId":{
                  "type":"integer",
                  "description":"Identifier of living unit (e.g. cell) that offender is assigned to.",
                  "format":"int64",
                  "example":123123
               },
               "movementMadeBy":{
                  "type":"string",
                  "description":"the staff member responsible for the movement of a prisoner",
                  "example":"KQJ74F"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number",
                  "example":"A1234AA"
               }
            },
            "description":"Bed assignment history entry"
         },
         "Booking":{
            "title":"Booking",
            "required":[
               "booking_active",
               "booking_no",
               "booking_started"
            ],
            "type":"object",
            "properties":{
               "booking_active":{
                  "type":"boolean",
                  "description":"Booking Active?",
                  "example":true
               },
               "booking_ended":{
                  "type":"string",
                  "description":"End date of Booking",
                  "format":"date",
                  "example":"2019-06-04T00:00:00.000+00:00"
               },
               "booking_no":{
                  "type":"string",
                  "description":"Bookings",
                  "example":"A12313"
               },
               "booking_started":{
                  "type":"string",
                  "description":"Start Date of Booking",
                  "format":"date",
                  "example":"2017-02-04T00:00:00.000+00:00"
               },
               "legal_cases":{
                  "type":"array",
                  "description":"Legal Cases",
                  "items":{
                     "$ref":"#/components/schemas/LegalCase"
                  }
               },
               "location":{
                  "description":"Location of Offender",
                  "$ref":"#/components/schemas/Location"
               },
               "release_date":{
                  "type":"string",
                  "description":"Release Date",
                  "format":"date",
                  "example":"2019-02-04T00:00:00.000+00:00"
               }
            },
            "description":"Offender Booking"
         },
         "BookingActivity":{
            "title":"BookingActivity",
            "type":"object",
            "properties":{
               "activityId":{
                  "type":"integer",
                  "format":"int64"
               },
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         },
         "Bookings":{
            "title":"Bookings",
            "type":"object",
            "properties":{
               "bookings":{
                  "type":"array",
                  "description":"Bookings",
                  "items":{
                     "$ref":"#/components/schemas/Booking"
                  }
               }
            },
            "description":"Bookings"
         },
         "CaseLoad":{
            "title":"CaseLoad",
            "required":[
               "caseLoadId",
               "currentlyActive",
               "description",
               "type"
            ],
            "type":"object",
            "properties":{
               "caseLoadId":{
                  "type":"string",
                  "description":"Case Load ID",
                  "example":"MDI"
               },
               "caseloadFunction":{
                  "type":"string",
                  "description":"Functional Use of the case load",
                  "example":"GENERAL",
                  "enum":[
                     "ADMIN",
                     "GENERAL"
                  ]
               },
               "currentlyActive":{
                  "type":"boolean",
                  "description":"Indicates that this caseload in the context of a staff member is the current active",
                  "example":false
               },
               "description":{
                  "type":"string",
                  "description":"Full description of the case load",
                  "example":"Moorland Closed (HMP & YOI)"
               },
               "type":{
                  "type":"string",
                  "description":"Type of case load",
                  "example":"INST",
                  "enum":[
                     "APP",
                     "COMM",
                     "INST"
                  ]
               }
            },
            "description":"Case Load"
         },
         "CaseNote":{
            "title":"CaseNote",
            "required":[
               "amendments",
               "authorName",
               "bookingId",
               "caseNoteId",
               "creationDateTime",
               "occurrenceDateTime",
               "originalNoteText",
               "source",
               "staffId",
               "subType",
               "text",
               "type"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency Code where Case Note was made.",
                  "example":"MDI"
               },
               "amendments":{
                  "type":"array",
                  "description":"Ordered list of amendments to the case note (oldest first)",
                  "items":{
                     "$ref":"#/components/schemas/CaseNoteAmendment"
                  }
               },
               "authorName":{
                  "type":"string",
                  "description":"Name of staff member who created case note (lastname, firstname)",
                  "example":"Smith, John"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id of offender",
                  "format":"int64",
                  "example":512321
               },
               "caseNoteId":{
                  "type":"integer",
                  "description":"Case Note Id (unique)",
                  "format":"int64",
                  "example":12311312
               },
               "creationDateTime":{
                  "type":"string",
                  "description":"Date and Time of Case Note creation",
                  "format":"date-time"
               },
               "occurrenceDateTime":{
                  "type":"string",
                  "description":"Date and Time of when case note contact with offender was made",
                  "format":"date-time"
               },
               "originalNoteText":{
                  "type":"string",
                  "description":"The initial case note information that was entered",
                  "example":"This is some text"
               },
               "source":{
                  "type":"string",
                  "description":"Source Type",
                  "example":"INST"
               },
               "staffId":{
                  "type":"integer",
                  "description":"Id of staff member who created case note",
                  "format":"int64",
                  "example":321241
               },
               "subType":{
                  "type":"string",
                  "description":"Case Note Sub Type",
                  "example":"KS"
               },
               "subTypeDescription":{
                  "type":"string",
                  "description":"Case Note Sub Type Description",
                  "example":"Key Worker Session"
               },
               "text":{
                  "type":"string",
                  "description":"Case Note Text",
                  "example":"This is some text"
               },
               "type":{
                  "type":"string",
                  "description":"Case Note Type",
                  "example":"KA"
               },
               "typeDescription":{
                  "type":"string",
                  "description":"Case Note Type Description",
                  "example":"Key Worker Activity"
               }
            },
            "description":"Case Note"
         },
         "CaseNoteAmendment":{
            "title":"CaseNoteAmendment",
            "required":[
               "additionalNoteText",
               "authorName",
               "creationDateTime"
            ],
            "type":"object",
            "properties":{
               "additionalNoteText":{
                  "type":"string",
                  "description":"Additional Case Note Information",
                  "example":"Some Additional Text"
               },
               "authorName":{
                  "type":"string",
                  "description":"Name of the user amending the case note (lastname, firstname)",
                  "example":"Smith, John"
               },
               "creationDateTime":{
                  "type":"string",
                  "description":"Date and Time of Case Note creation",
                  "format":"date-time"
               }
            },
            "description":"Case Note Amendment"
         },
         "CaseNoteCount":{
            "title":"CaseNoteCount",
            "required":[
               "bookingId",
               "count",
               "subType",
               "type"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id",
                  "format":"int64"
               },
               "count":{
                  "type":"integer",
                  "description":"Number of case notes of defined type and subType for offender.",
                  "format":"int64"
               },
               "fromDate":{
                  "type":"string",
                  "description":"Count includes case notes occurring on or after this date (in YYYY-MM-DD format).",
                  "format":"date"
               },
               "subType":{
                  "type":"string",
                  "description":"Case note sub-type."
               },
               "toDate":{
                  "type":"string",
                  "description":"Count includes case notes occurring on or before this date (in YYYY-MM-DD format).",
                  "format":"date"
               },
               "type":{
                  "type":"string",
                  "description":"Case note type."
               }
            },
            "description":"Case Note Count Detail"
         },
         "CaseNoteEvent":{
            "title":"CaseNoteEvent",
            "required":[
               "contactTimestamp",
               "content",
               "id",
               "nomsId",
               "noteType",
               "notificationTimestamp",
               "staffName"
            ],
            "type":"object",
            "properties":{
               "contactTimestamp":{
                  "type":"string",
                  "description":"Date and Time of when case note contact with offender was made",
                  "format":"date-time"
               },
               "content":{
                  "type":"string",
                  "description":"Case Note Text",
                  "example":"This is some text"
               },
               "establishmentCode":{
                  "type":"string",
                  "description":"Agency Code where Case Note was made.",
                  "example":"MDI"
               },
               "id":{
                  "type":"integer",
                  "description":"Case Note Id (unique)",
                  "format":"int64",
                  "example":12311312
               },
               "nomsId":{
                  "type":"string",
                  "description":"Offender Noms Id",
                  "example":"A1417AE"
               },
               "noteType":{
                  "type":"string",
                  "description":"Case Note Type and Sub Type",
                  "example":"POS IEP_ENC"
               },
               "notificationTimestamp":{
                  "type":"string",
                  "description":"Date and Time of notification of event",
                  "format":"date-time"
               },
               "staffName":{
                  "type":"string",
                  "description":"Name of staff member who created case note (lastname, firstname)",
                  "example":"Smith, John"
               }
            },
            "description":"Case Note Event"
         },
         "CaseNoteStaffUsage":{
            "title":"CaseNoteStaffUsage",
            "required":[
               "caseNoteSubType",
               "caseNoteType",
               "latestCaseNote",
               "numCaseNotes",
               "staffId"
            ],
            "type":"object",
            "properties":{
               "caseNoteSubType":{
                  "type":"string",
                  "description":"Case Note Sub Type",
                  "example":"KS"
               },
               "caseNoteType":{
                  "type":"string",
                  "description":"Case Note Type",
                  "example":"KA"
               },
               "latestCaseNote":{
                  "type":"string",
                  "description":"Last case note of this type",
                  "format":"date-time"
               },
               "numCaseNotes":{
                  "type":"integer",
                  "description":"Number of case notes of this type/subtype",
                  "format":"int32",
                  "example":5
               },
               "staffId":{
                  "type":"integer",
                  "description":"Staff ID",
                  "format":"int32",
                  "example":2341232
               }
            },
            "description":"Case Note Type Staff Usage"
         },
         "CaseNoteStaffUsageRequest":{
            "title":"CaseNoteStaffUsageRequest",
            "required":[
               "staffIds"
            ],
            "type":"object",
            "properties":{
               "fromDate":{
                  "type":"string",
                  "description":"Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
                  "format":"date"
               },
               "numMonths":{
                  "type":"integer",
                  "description":"Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
                  "format":"int32"
               },
               "staffIds":{
                  "type":"array",
                  "description":"a list of staff numbers to search.",
                  "items":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               "subType":{
                  "type":"string",
                  "description":"Case note sub-type."
               },
               "toDate":{
                  "type":"string",
                  "description":"Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
                  "format":"date"
               },
               "type":{
                  "type":"string",
                  "description":"Case note type."
               }
            },
            "description":"Case Note Type Staff Usage Request"
         },
         "CaseNoteUsage":{
            "title":"CaseNoteUsage",
            "required":[
               "caseNoteSubType",
               "caseNoteType",
               "latestCaseNote",
               "numCaseNotes",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "caseNoteSubType":{
                  "type":"string",
                  "description":"Case Note Sub Type",
                  "example":"KS"
               },
               "caseNoteType":{
                  "type":"string",
                  "description":"Case Note Type",
                  "example":"KA"
               },
               "latestCaseNote":{
                  "type":"string",
                  "description":"Last case note of this type",
                  "format":"date-time"
               },
               "numCaseNotes":{
                  "type":"integer",
                  "description":"Number of case notes of this type/subtype",
                  "format":"int32",
                  "example":5
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender No",
                  "example":"ZWE12A"
               }
            },
            "description":"Case Note Type Usage"
         },
         "CaseNoteUsageRequest":{
            "title":"CaseNoteUsageRequest",
            "required":[
               "offenderNos"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Optional agency Id to filter by",
                  "example":"MDI"
               },
               "fromDate":{
                  "type":"string",
                  "description":"Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
                  "format":"date",
                  "example":"2018-11-01T00:00:00.000+00:00"
               },
               "numMonths":{
                  "type":"integer",
                  "description":"Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
                  "format":"int32",
                  "example":2
               },
               "offenderNos":{
                  "type":"array",
                  "description":"a list of offender numbers to search.",
                  "items":{
                     "type":"string"
                  }
               },
               "staffId":{
                  "type":"integer",
                  "description":"staff Id to use in search (optional).",
                  "format":"int32",
                  "example":223423
               },
               "subType":{
                  "type":"string",
                  "description":"Case note sub-type.",
                  "example":"KS"
               },
               "toDate":{
                  "type":"string",
                  "description":"Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
                  "format":"date",
                  "example":"2018-12-01T00:00:00.000+00:00"
               },
               "type":{
                  "type":"string",
                  "description":"Case note type.",
                  "example":"KA"
               }
            },
            "description":"Case Note Type Usage Request"
         },
         "CaseloadUpdate":{
            "title":"CaseloadUpdate",
            "required":[
               "caseload",
               "numUsersEnabled"
            ],
            "type":"object",
            "properties":{
               "caseload":{
                  "type":"string",
                  "description":"Caseload",
                  "example":"MDI"
               },
               "numUsersEnabled":{
                  "type":"integer",
                  "description":"Number of users enabled to access API",
                  "format":"int32",
                  "example":5
               }
            },
            "description":"Caseload Update"
         },
         "CategorisationDetail":{
            "title":"CategorisationDetail",
            "required":[
               "bookingId",
               "category",
               "committee",
               "placementAgencyId"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id",
                  "format":"int64"
               },
               "category":{
                  "type":"string",
                  "description":"Category code"
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"Initial categorisation comment"
               },
               "committee":{
                  "type":"string",
                  "description":"The assessment committee code (reference code in domain 'ASSESS_COMM')"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Next review date for recategorisation, defaults to current date + 6 months, if not provided",
                  "format":"date"
               },
               "placementAgencyId":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The prison to be transferred to"
               }
            },
            "description":"Categorisation detail for an offender"
         },
         "CategorisationUpdateDetail":{
            "title":"CategorisationUpdateDetail",
            "required":[
               "assessmentSeq",
               "bookingId"
            ],
            "type":"object",
            "properties":{
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number",
                  "format":"int32"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id",
                  "format":"int64"
               },
               "category":{
                  "type":"string",
                  "description":"Category code"
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"Initial categorisation comment"
               },
               "committee":{
                  "type":"string",
                  "description":"The assessment committee code (reference code in domain 'ASSESS_COMM')"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Next review date for recategorisation",
                  "format":"date"
               }
            },
            "description":"Categorisation detail for an offender"
         },
         "CategoryApprovalDetail":{
            "title":"CategoryApprovalDetail",
            "required":[
               "bookingId",
               "category",
               "evaluationDate",
               "reviewCommitteeCode"
            ],
            "type":"object",
            "properties":{
               "approvedCategoryComment":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Approved result category comment"
               },
               "approvedPlacementAgencyId":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"Approved placement prison"
               },
               "approvedPlacementText":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Approved placement prison comment"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number. Only used to check consistency",
                  "format":"int32"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id",
                  "format":"int64"
               },
               "category":{
                  "type":"string",
                  "description":"Category code, reference code in domain 'SUP_LVL_TYPE'"
               },
               "committeeCommentText":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Overall comment"
               },
               "evaluationDate":{
                  "type":"string",
                  "description":"Date of approval",
                  "format":"date"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Next review date (date of re-assessment, remains unchanged if not provided)",
                  "format":"date"
               },
               "reviewCommitteeCode":{
                  "type":"string",
                  "description":"Department, reference code in domain 'ASSESS_COMM'. Normally 'REVIEW'",
                  "example":"REVIEW"
               }
            },
            "description":"Categorisation approval detail for an offender"
         },
         "CategoryRejectionDetail":{
            "title":"CategoryRejectionDetail",
            "required":[
               "assessmentSeq",
               "bookingId",
               "evaluationDate",
               "reviewCommitteeCode"
            ],
            "type":"object",
            "properties":{
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number",
                  "format":"int32"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id",
                  "format":"int64"
               },
               "committeeCommentText":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Overall comment"
               },
               "evaluationDate":{
                  "type":"string",
                  "description":"Date of rejection",
                  "format":"date"
               },
               "reviewCommitteeCode":{
                  "type":"string",
                  "description":"Department, reference code in domain 'ASSESS_COMM'. Normally 'REVIEW'"
               }
            },
            "description":"Categorisation approval detail for an offender"
         },
         "CellMoveResult":{
            "title":"CellMoveResult",
            "required":[
               "agencyId",
               "bookingId"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of agency that offender is associated with.",
                  "example":"MDI"
               },
               "assignedLivingUnitDesc":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) that offender is assigned to.",
                  "example":"MDI-1-1-3"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Identifier of living unit (e.g. cell) that offender is assigned to.",
                  "format":"int64",
                  "example":123123
               },
               "bedAssignmentHistorySequence":{
                  "type":"integer",
                  "description":"Bed assignment sequence associated with the entry created for this cell move ",
                  "format":"int32",
                  "example":2
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Unique, numeric booking id.",
                  "format":"int64",
                  "example":1234134
               }
            },
            "description":"Cell move result"
         },
         "Charge":{
            "title":"Charge",
            "type":"object",
            "properties":{
               "band":{
                  "description":"Band",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"1\", \"desc\": \"Sent-Determinate NonFine\" }"
               },
               "charge_active":{
                  "type":"boolean",
                  "description":"Charge Active",
                  "example":true
               },
               "convicted":{
                  "type":"boolean",
                  "description":"Convicted",
                  "example":true
               },
               "disposition":{
                  "description":"Disposition",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"F\", \"desc\": \"Final\" }"
               },
               "imprisonment_status":{
                  "description":"Imprisonment Status",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"UNK_SENT\", \"desc\": \"Unknown Sentenced\" }"
               },
               "most_serious":{
                  "type":"boolean",
                  "description":"Most Serious Offence ",
                  "example":true
               },
               "offence":{
                  "description":"Offence",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"PL96001\", \"desc\": \"Assault a constable in the execution of his / her duty\" }"
               },
               "result":{
                  "description":"Result",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"1002\", \"desc\": \"Imprisonment\" }"
               },
               "severity_ranking":{
                  "type":"string",
                  "description":"Severity Ranking",
                  "example":"100"
               },
               "statute":{
                  "description":"Statute",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"PL96\", \"desc\": \"Police Act 1996\" }"
               }
            },
            "description":"Offender Charge"
         },
         "CodeDescription":{
            "title":"CodeDescription",
            "type":"object",
            "properties":{
               "code":{
                  "type":"string",
                  "description":"Code"
               },
               "desc":{
                  "type":"string",
                  "description":"Description"
               }
            },
            "description":"Code Description"
         },
         "Contact":{
            "title":"Contact",
            "required":[
               "activeFlag",
               "approvedVisitorFlag",
               "awareOfChargesFlag",
               "bookingId",
               "canBeContactedFlag",
               "contactType",
               "createDateTime",
               "emergencyContact",
               "firstName",
               "lastName",
               "nextOfKin",
               "relationship"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "type":"boolean",
                  "description":"Active indicator flag.",
                  "example":true
               },
               "approvedVisitorFlag":{
                  "type":"boolean",
                  "description":"Approved Visitor",
                  "example":true
               },
               "awareOfChargesFlag":{
                  "type":"boolean",
                  "description":"Aware of charges against prisoner",
                  "example":true
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender Booking Id for this contact",
                  "format":"int64",
                  "example":2468081
               },
               "canBeContactedFlag":{
                  "type":"boolean",
                  "description":"Can be contacted",
                  "example":false
               },
               "commentText":{
                  "type":"string",
                  "description":"Comments",
                  "example":"Some additional information"
               },
               "contactRootOffenderId":{
                  "type":"integer",
                  "description":"Link to root offender ID",
                  "format":"int64",
                  "example":5871791
               },
               "contactType":{
                  "type":"string",
                  "description":"Contact type",
                  "example":"O"
               },
               "contactTypeDescription":{
                  "type":"string",
                  "description":"Contact type text",
                  "example":"Official"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Date time the contact was created",
                  "format":"date-time"
               },
               "emergencyContact":{
                  "type":"boolean",
                  "description":"Is an emergency contact",
                  "example":true
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Date made inactive",
                  "format":"date",
                  "example":"2019-01-31T00:00:00.000+00:00"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name",
                  "example":"JOHN"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last name of the contact",
                  "example":"SMITH"
               },
               "middleName":{
                  "type":"string",
                  "description":"Middle Names",
                  "example":"MARK"
               },
               "nextOfKin":{
                  "type":"boolean",
                  "description":"Indicates that the contact is Next of Kin Type",
                  "example":false
               },
               "personId":{
                  "type":"integer",
                  "description":"id of the person contact",
                  "format":"int64",
                  "example":5871791
               },
               "relationship":{
                  "type":"string",
                  "description":"Relationship to prisoner",
                  "example":"RO"
               },
               "relationshipDescription":{
                  "type":"string",
                  "description":"Relationship text",
                  "example":"Responsible Officer"
               },
               "relationshipId":{
                  "type":"integer",
                  "description":"ID of the relationship (internal)",
                  "format":"int64",
                  "example":10466277
               }
            },
            "description":"Contact"
         },
         "ContactDetail":{
            "title":"ContactDetail",
            "required":[
               "bookingId",
               "nextOfKin",
               "otherContacts"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "nextOfKin":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Contact"
                  }
               },
               "otherContacts":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Contact"
                  }
               }
            },
            "description":"Contacts Details for offender"
         },
         "ContactList":{
            "title":"ContactList",
            "type":"object",
            "properties":{
               "contacts":{
                  "type":"array",
                  "description":"Available Dates",
                  "items":{
                     "$ref":"#/components/schemas/ContactPerson"
                  }
               }
            },
            "description":"Contact List"
         },
         "ContactPerson":{
            "title":"ContactPerson",
            "type":"object",
            "properties":{
               "active":{
                  "type":"boolean",
                  "description":"Active",
                  "example":false
               },
               "approved_visitor":{
                  "type":"boolean",
                  "description":"Approved Visitor",
                  "example":false
               },
               "contact_type":{
                  "description":"Contact Type",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "date_of_birth":{
                  "type":"string",
                  "description":"Date of Birth",
                  "format":"date",
                  "example":"1970-01-01T00:00:00.000+00:00"
               },
               "gender":{
                  "description":"Gender",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "given_name":{
                  "type":"string",
                  "description":"Given Name",
                  "example":"JENNIFER"
               },
               "id":{
                  "type":"integer",
                  "description":"ID",
                  "format":"int64",
                  "example":1234567
               },
               "middle_names":{
                  "type":"string",
                  "description":"Middle Names",
                  "example":"ESMERALADA JANE"
               },
               "relationship_type":{
                  "description":"Relationship Type",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "restrictions":{
                  "type":"array",
                  "description":"Restrictions",
                  "items":{
                     "$ref":"#/components/schemas/VisitRestriction"
                  }
               },
               "surname":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"HALLIBUT"
               }
            },
            "description":"Contact Person"
         },
         "CourtCase":{
            "title":"CourtCase",
            "type":"object",
            "properties":{
               "agency":{
                  "description":"Agency details",
                  "$ref":"#/components/schemas/Agency"
               },
               "beginDate":{
                  "type":"string",
                  "description":"The begin date",
                  "format":"date",
                  "example":"2019-12-01T00:00:00.000+00:00"
               },
               "caseInfoNumber":{
                  "type":"string",
                  "description":"The case information number",
                  "example":"TD20177010"
               },
               "caseInfoPrefix":{
                  "type":"string",
                  "description":"The prefix of the case number"
               },
               "caseSeq":{
                  "type":"integer",
                  "description":"The case sequence number for the offender",
                  "format":"int64",
                  "example":1
               },
               "caseStatus":{
                  "type":"string",
                  "description":"The case status",
                  "example":"ACTIVE",
                  "enum":[
                     "ACTIVE",
                     "CLOSED",
                     "INACTIVE"
                  ]
               },
               "caseType":{
                  "type":"string",
                  "description":"The case type",
                  "example":"Adult"
               },
               "courtHearings":{
                  "type":"array",
                  "description":"Court hearings associated with the court case",
                  "items":{
                     "$ref":"#/components/schemas/CourtHearing"
                  }
               },
               "id":{
                  "type":"integer",
                  "description":"The case identifier",
                  "format":"int64",
                  "example":1
               }
            },
            "description":"Offender court case details"
         },
         "CourtEvent":{
            "title":"CourtEvent",
            "required":[
               "bookingActiveFlag",
               "bookingInOutStatus",
               "commentText",
               "createDateTime",
               "directionCode",
               "endTime",
               "eventClass",
               "eventDate",
               "eventId",
               "eventStatus",
               "eventSubType",
               "eventType",
               "fromAgency",
               "fromAgencyDescription",
               "judgeName",
               "offenderNo",
               "startTime",
               "toAgency",
               "toAgencyDescription"
            ],
            "type":"object",
            "properties":{
               "bookingActiveFlag":{
                  "type":"boolean",
                  "description":"The booking active flag",
                  "example":true
               },
               "bookingInOutStatus":{
                  "type":"string",
                  "description":"The booking in or out status - either IN or OUT",
                  "example":"OUT"
               },
               "commentText":{
                  "type":"string",
                  "description":"The comment text stored against this event",
                  "example":"Restricted access to parking level"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "directionCode":{
                  "type":"string",
                  "description":"The direction code (IN or OUT)",
                  "example":"IN"
               },
               "endTime":{
                  "type":"string",
                  "description":"The planned date and time of the end of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "eventClass":{
                  "type":"string",
                  "description":"The event class (from COURT_EVENTS)",
                  "example":"EXT_MOV"
               },
               "eventDate":{
                  "type":"string",
                  "description":"The date on which the event is scheduled to occur",
                  "format":"date",
                  "example":"2019-12-01T00:00:00.000+00:00"
               },
               "eventId":{
                  "type":"integer",
                  "description":"The internal event ID",
                  "format":"int64",
                  "example":12343434
               },
               "eventStatus":{
                  "type":"string",
                  "description":"The event status - either SCH (scheduled) or COMP (completed)",
                  "example":"SCH"
               },
               "eventSubType":{
                  "type":"string",
                  "description":"The event sub-type",
                  "example":"DP"
               },
               "eventType":{
                  "type":"string",
                  "description":"The event type",
                  "example":"CRT"
               },
               "fromAgency":{
                  "type":"string",
                  "description":"The agency code ",
                  "example":"LEI"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"The from agency description",
                  "example":"HMP LEEDS"
               },
               "judgeName":{
                  "type":"string",
                  "description":"Judge name, where available",
                  "example":"Harris"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (NOMS ID)",
                  "example":"G3878UK"
               },
               "startTime":{
                  "type":"string",
                  "description":"The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "toAgency":{
                  "type":"string",
                  "description":"The agency code to which the transfer will be made (if an agency)",
                  "example":"LEEDCC"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"The to agency description",
                  "example":"Leeds Crown Court"
               }
            },
            "description":"Summary data for a scheduled court event"
         },
         "CourtEventBasic":{
            "title":"CourtEventBasic",
            "required":[
               "court",
               "eventSubType",
               "offenderNo",
               "startTime"
            ],
            "type":"object",
            "properties":{
               "court":{
                  "type":"string",
                  "description":"The agency code of the court",
                  "example":"LEEDCC"
               },
               "courtDescription":{
                  "type":"string",
                  "description":"The court description",
                  "example":"Leeds Crown Court"
               },
               "eventDescription":{
                  "type":"string",
                  "description":"The event description",
                  "example":"Court Appearance"
               },
               "eventSubType":{
                  "type":"string",
                  "description":"The court event subtype (from MOVE_RSN reference data)",
                  "example":"CRT"
               },
               "hold":{
                  "type":"boolean",
                  "description":"Whether hold ordered by the court at this hearing",
                  "example":false
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (NOMS ID)",
                  "example":"G3878UK"
               },
               "startTime":{
                  "type":"string",
                  "description":"The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               }
            },
            "description":"Basic Summary data for a scheduled court event"
         },
         "CourtHearing":{
            "title":"CourtHearing",
            "type":"object",
            "properties":{
               "dateTime":{
                  "type":"string",
                  "description":"The date and start time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "id":{
                  "type":"integer",
                  "description":"The court hearing identifier.",
                  "format":"int64",
                  "example":123456789
               },
               "location":{
                  "description":"The location of the court for the hearing.",
                  "$ref":"#/components/schemas/Agency"
               }
            },
            "description":"Represents a court hearing for an offender court case."
         },
         "CourtHearingDateAmendment":{
            "title":"CourtHearingDateAmendment",
            "required":[
               "hearingDateTime"
            ],
            "type":"object",
            "properties":{
               "hearingDateTime":{
                  "type":"string",
                  "description":"The date and time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               }
            },
            "description":"Supports amending a scheduled court hearing date and time for an offender."
         },
         "CourtHearings":{
            "title":"CourtHearings",
            "type":"object",
            "properties":{
               "hearings":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CourtHearing"
                  }
               }
            },
            "description":"Represents court hearings for an offender booking."
         },
         "CreateAlert":{
            "title":"CreateAlert",
            "required":[
               "alertCode",
               "alertDate",
               "alertType"
            ],
            "type":"object",
            "properties":{
               "alertCode":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Code identifying the sub type of alert",
                  "example":"XEL"
               },
               "alertDate":{
                  "type":"string",
                  "description":"Date the alert became effective",
                  "format":"date",
                  "example":"2019-02-13T00:00:00.000+00:00"
               },
               "alertType":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Code identifying type of alert",
                  "example":"X"
               },
               "comment":{
                  "maxLength":1000,
                  "minLength":0,
                  "type":"string",
                  "description":"Free Text Comment",
                  "example":"has a large poster on cell wall"
               }
            },
            "description":"Create new alert"
         },
         "CreateExternalMovement":{
            "title":"CreateExternalMovement",
            "required":[
               "bookingId",
               "directionCode",
               "fromAgencyId",
               "movementReason",
               "movementTime",
               "movementType",
               "toAgencyId"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking id",
                  "format":"int64",
                  "example":1
               },
               "directionCode":{
                  "type":"string",
                  "description":"Direction code",
                  "example":"OUT",
                  "enum":[
                     "IN",
                     "OUT"
                  ]
               },
               "fromAgencyId":{
                  "type":"string",
                  "description":"Agency location moving from",
                  "example":"MDI"
               },
               "movementReason":{
                  "type":"string",
                  "description":"Movement reason",
                  "example":"SEC"
               },
               "movementTime":{
                  "type":"string",
                  "description":"Date time of movement",
                  "format":"date-time"
               },
               "movementType":{
                  "type":"string",
                  "description":"Type of movement",
                  "example":"TRN"
               },
               "toAgencyId":{
                  "type":"string",
                  "description":"Agency location moving to",
                  "example":"OUT"
               }
            },
            "description":"Create external movement"
         },
         "CreateTransaction":{
            "title":"CreateTransaction",
            "type":"object",
            "properties":{
               "amount":{
                  "type":"integer",
                  "description":"Amount of transaction in pence, hence 1634 is Â£16.34",
                  "format":"int64",
                  "example":1634
               },
               "client_transaction_id":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Client Transaction Id",
                  "example":"CL123212"
               },
               "client_unique_ref":{
                  "maxLength":64,
                  "minLength":0,
                  "pattern":"[a-zA-Z0-9-_]+",
                  "type":"string",
                  "description":"A reference unique to the client making the post. Maximum size 64 characters, only alphabetic, numeric, '-' and '_' are allowed",
                  "example":"CLIENT121131-0_11"
               },
               "description":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Description of the Transaction",
                  "example":"Canteen Purchase of Â£16.34"
               },
               "type":{
                  "type":"string",
                  "description":"Valid transaction type for the prison_id",
                  "example":"CANT",
                  "enum":[
                     "CANT",
                     "CASHD",
                     "DTDS",
                     "MRPR",
                     "MTDS",
                     "PHONE",
                     "REFND",
                     "RELA",
                     "RELS"
                  ]
               }
            },
            "description":"Transaction to Create"
         },
         "CreatedAppointmentDetails":{
            "title":"CreatedAppointmentDetails",
            "required":[
               "bookingId"
            ],
            "type":"object",
            "properties":{
               "appointmentEventId":{
                  "type":"integer",
                  "format":"int64"
               },
               "appointmentType":{
                  "type":"string",
                  "description":"The scheduled event subType",
                  "example":"ACTI"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"The Booking id of the offender for whom the appointment was created.",
                  "format":"int64",
                  "example":123456
               },
               "endTime":{
                  "type":"string",
                  "description":"The end time of the appointment.",
                  "format":"date-time"
               },
               "locationId":{
                  "type":"integer",
                  "description":"The identifier of the appointments' Location. The location must be situated in the requestor's case load.",
                  "format":"int64",
                  "example":25
               },
               "startTime":{
                  "type":"string",
                  "description":"The start time of the appointment.",
                  "format":"date-time"
               }
            },
            "description":"The details of an appointment that has just been created"
         },
         "Education":{
            "title":"Education",
            "required":[
               "addresses",
               "bookingId",
               "isSpecialEducation",
               "schedule"
            ],
            "type":"object",
            "properties":{
               "addresses":{
                  "type":"array",
                  "description":"A list of addresses associated with the education",
                  "items":{
                     "$ref":"#/components/schemas/AddressDto"
                  }
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":14
               },
               "comment":{
                  "type":"string",
                  "description":"Comment relating to education.",
                  "example":"The education is going well"
               },
               "educationLevel":{
                  "type":"string",
                  "description":"The highest level attained for the educational period.",
                  "example":"Degree Level or Higher"
               },
               "endDate":{
                  "type":"string",
                  "description":"End date of education",
                  "format":"date",
                  "example":"2020-02-11T00:00:00.000+00:00"
               },
               "graduationYear":{
                  "type":"string",
                  "description":"Year of graduation.",
                  "example":"2021"
               },
               "isSpecialEducation":{
                  "type":"boolean",
                  "description":"Whether this is special education",
                  "example":false
               },
               "numberOfYears":{
                  "type":"integer",
                  "description":"The number of educational years completed.",
                  "format":"int32",
                  "example":2
               },
               "schedule":{
                  "type":"string",
                  "description":"The education schedule",
                  "example":"Full Time"
               },
               "school":{
                  "type":"string",
                  "description":"Name of school attended.",
                  "example":"School of economics"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start date of education",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "studyArea":{
                  "type":"string",
                  "description":"The area of study for the offender while in school.",
                  "example":"General Studies"
               }
            },
            "description":"Offender Education"
         },
         "Email":{
            "title":"Email",
            "type":"object",
            "properties":{
               "email":{
                  "type":"string",
                  "description":"Email"
               }
            },
            "description":"An Email Address"
         },
         "Employment":{
            "title":"Employment",
            "required":[
               "addresses",
               "bookingId",
               "isEmployerAware",
               "isEmployerContactable",
               "startDate"
            ],
            "type":"object",
            "properties":{
               "addresses":{
                  "type":"array",
                  "description":"A list of addresses associated with the employment",
                  "items":{
                     "$ref":"#/components/schemas/AddressDto"
                  }
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":14
               },
               "comment":{
                  "type":"string",
                  "description":"A comment about the employment",
                  "example":"The employment is going well"
               },
               "employerName":{
                  "type":"string",
                  "description":"The name of the employer",
                  "example":"Greggs"
               },
               "endDate":{
                  "type":"string",
                  "description":"End date of employment",
                  "format":"date",
                  "example":"2018-05-11T00:00:00.000+00:00"
               },
               "hoursWeek":{
                  "type":"integer",
                  "description":"The hours worked per week",
                  "format":"int32",
                  "example":32
               },
               "isEmployerAware":{
                  "type":"boolean",
                  "description":"Whether the employer is aware of the offender's charges",
                  "example":true
               },
               "isEmployerContactable":{
                  "type":"boolean",
                  "description":"Whether the employer can be contacted or not",
                  "example":false
               },
               "occupation":{
                  "type":"string",
                  "description":"The occupation name of the offender",
                  "example":"builder"
               },
               "position":{
                  "type":"string",
                  "description":"Position held on job",
                  "example":"Supervisor"
               },
               "postType":{
                  "type":"string",
                  "description":"The employment post type condition",
                  "example":"Full Time"
               },
               "schedule":{
                  "type":"string",
                  "description":"The employment schedule",
                  "example":"Fortnightly"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start date of employment",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "supervisorName":{
                  "type":"string",
                  "description":"The name of the supervisor in the employment",
                  "example":"John Smith"
               },
               "terminationReason":{
                  "type":"string",
                  "description":"The reason for leaving job",
                  "example":"End of contract"
               },
               "wage":{
                  "type":"number",
                  "description":"Amount the offender was earning",
                  "format":"bigdecimal",
                  "example":10.0
               },
               "wagePeriod":{
                  "type":"string",
                  "description":"The frequency of wage payments",
                  "example":"Hourly"
               }
            },
            "description":"Offender Employment"
         },
         "ErrorResponse":{
            "title":"ErrorResponse",
            "required":[
               "status",
               "userMessage"
            ],
            "type":"object",
            "properties":{
               "developerMessage":{
                  "type":"string",
                  "description":"Detailed description of problem with remediation hints aimed at application developer.",
                  "example":"Serious error in the system"
               },
               "errorCode":{
                  "type":"integer",
                  "description":"An (optional) application-specific error code.",
                  "format":"int32",
                  "example":404
               },
               "moreInfo":{
                  "type":"string",
                  "description":"Provision for further information about the problem (e.g. a link to a FAQ or knowledge base article).",
                  "example":"Check out this FAQ for more information"
               },
               "status":{
                  "type":"integer",
                  "description":"Response status code (will typically mirror HTTP status code).",
                  "format":"int32",
                  "example":404
               },
               "userMessage":{
                  "type":"string",
                  "description":"Concise error reason for end-user consumption.",
                  "example":"Entity Not Found"
               }
            },
            "description":"General API Error Response"
         },
         "Event":{
            "title":"Event",
            "required":[
               "id",
               "nomsId",
               "prisonId",
               "timestamp",
               "type"
            ],
            "type":"object",
            "properties":{
               "eventData":{
                  "type":"string"
               },
               "id":{
                  "type":"integer",
                  "description":"Unique indentifier for event",
                  "format":"int64",
                  "example":21
               },
               "nomsId":{
                  "type":"string",
                  "description":"Offender Noms Id",
                  "example":"A1417AE"
               },
               "prisonId":{
                  "type":"string",
                  "description":"Prison ID",
                  "example":"BMI"
               },
               "timestamp":{
                  "type":"string",
                  "description":"Date and time the event occurred",
                  "format":"date-time"
               },
               "type":{
                  "type":"string",
                  "description":"Type of event",
                  "example":"IEP_CHANGED"
               }
            },
            "description":"Offender Event"
         },
         "Events":{
            "title":"Events",
            "type":"object",
            "properties":{
               "events":{
                  "type":"array",
                  "description":"Events",
                  "items":{
                     "$ref":"#/components/schemas/Event"
                  }
               }
            },
            "description":"Events"
         },
         "HOCodeDto":{
            "title":"HOCodeDto",
            "required":[
               "activeFlag",
               "code",
               "description"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "type":"string",
                  "description":"Active Y/N",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               },
               "code":{
                  "type":"string",
                  "description":"HO code",
                  "example":"825/99"
               },
               "description":{
                  "type":"string",
                  "description":"HO code description",
                  "example":"Ho Code 825/99"
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Expiry Date",
                  "format":"date",
                  "example":"2021-01-05T00:00:00.000+00:00"
               }
            },
            "description":"HO Code"
         },
         "HdcChecks":{
            "title":"HdcChecks",
            "required":[
               "date",
               "passed"
            ],
            "type":"object",
            "properties":{
               "date":{
                  "type":"string",
                  "description":"HDC Checks passed date. ISO-8601 format. YYYY-MM-DD",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "passed":{
                  "type":"boolean",
                  "description":"HDC Checks passed flag",
                  "example":true
               }
            },
            "description":"HDC Curfew Check"
         },
         "Hearing":{
            "title":"Hearing",
            "type":"object",
            "properties":{
               "comment":{
                  "type":"string",
                  "description":"Comment",
                  "example":"The defendant conducted themselves in a manner..."
               },
               "establishment":{
                  "type":"string",
                  "description":"Establishment",
                  "example":"Moorland (HMP & YOI)"
               },
               "heardByFirstName":{
                  "type":"string",
                  "description":"Adjudicator First name",
                  "example":"Bob"
               },
               "heardByLastName":{
                  "type":"string",
                  "description":"Adjudicator Last name",
                  "example":"Smith"
               },
               "hearingTime":{
                  "type":"string",
                  "description":"Hearing Time",
                  "format":"date-time"
               },
               "hearingType":{
                  "type":"string",
                  "description":"Hearing Type",
                  "example":"Governor's Hearing Adult"
               },
               "location":{
                  "type":"string",
                  "description":"Hearing Location",
                  "example":"Adjudication Room"
               },
               "oicHearingId":{
                  "type":"integer",
                  "description":"OIC Hearing ID",
                  "format":"int64",
                  "example":1985937
               },
               "otherRepresentatives":{
                  "type":"string",
                  "description":"Other Representatives",
                  "example":"Councillor Adams"
               },
               "results":{
                  "type":"array",
                  "description":"Hearing Results",
                  "items":{
                     "$ref":"#/components/schemas/HearingResult"
                  }
               }
            },
            "description":"An Adjudication Hearing"
         },
         "HearingResult":{
            "title":"HearingResult",
            "type":"object",
            "properties":{
               "finding":{
                  "type":"string",
                  "description":"Finding",
                  "example":"Charge Proved"
               },
               "offenceDescription":{
                  "type":"string",
                  "description":"Offence Description",
                  "example":"Disobeys any lawful order"
               },
               "offenceType":{
                  "type":"string",
                  "description":"Offence Type",
                  "example":"Prison Rule 51"
               },
               "oicOffenceCode":{
                  "type":"string",
                  "description":"OIC Offence Code",
                  "example":"51:22"
               },
               "plea":{
                  "type":"string",
                  "description":"Plea",
                  "example":"Guilty"
               },
               "sanctions":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Sanction"
                  }
               }
            },
            "description":"A result from a hearing"
         },
         "Hold":{
            "title":"Hold",
            "type":"object",
            "properties":{
               "amount":{
                  "type":"integer",
                  "description":"Amount in pence",
                  "format":"int64",
                  "example":150
               },
               "client_unique_ref":{
                  "type":"string",
                  "description":"Client unique reference",
                  "example":"jerkincrocus"
               },
               "description":{
                  "type":"string",
                  "description":"Description",
                  "example":"Hold via API"
               },
               "entry_date":{
                  "type":"string",
                  "description":"Entry date",
                  "format":"date",
                  "example":"2017-06-23T00:00:00.000+00:00"
               },
               "hold_number":{
                  "type":"integer",
                  "description":"Hold Number",
                  "format":"int64",
                  "example":6185835
               },
               "hold_until_date":{
                  "type":"string",
                  "description":"Hold until date",
                  "format":"date",
                  "example":"2017-07-07T00:00:00.000+00:00"
               },
               "reference_no":{
                  "type":"string",
                  "description":"Reference number",
                  "example":"TEST0075"
               }
            },
            "description":"Hold Response"
         },
         "HomeDetentionCurfew":{
            "title":"HomeDetentionCurfew",
            "required":[
               "approvalStatusDate"
            ],
            "type":"object",
            "properties":{
               "approvalStatus":{
                  "type":"string",
                  "description":"Approval status. Will be one of the 'HDC_APPROVE' reference codes",
                  "example":"APPROVED"
               },
               "approvalStatusDate":{
                  "type":"string",
                  "description":"Approval status date. ISO-8601 format. YYYY-MM-DD",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "checksPassedDate":{
                  "type":"string",
                  "description":"HDC Checks passed date. ISO-8601 format. YYYY-MM-DD",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "passed":{
                  "type":"boolean",
                  "description":"HDC Checks passed flag",
                  "example":true
               },
               "refusedReason":{
                  "type":"string",
                  "description":"Refused reason. Will be one of the 'HDC_REJ_RSN' reference codes",
                  "example":"UNDER_14DAYS"
               }
            },
            "description":"Home Detention Curfew information"
         },
         "IepLevel":{
            "title":"IepLevel",
            "required":[
               "iepDescription",
               "iepLevel"
            ],
            "type":"object",
            "properties":{
               "iepDescription":{
                  "type":"string",
                  "description":"A long description of the IEP level value",
                  "example":"Basic"
               },
               "iepLevel":{
                  "type":"string",
                  "description":"The IEP level. Must be one of the reference data values in domain 'IEP_LEVEL'. Typically BAS (Basic), ENH (Enhanced), ENT (Entry) or STD (Standard)",
                  "example":"BAS"
               }
            },
            "description":"IEP Level"
         },
         "IepLevelAndComment":{
            "title":"IepLevelAndComment",
            "required":[
               "comment",
               "iepLevel"
            ],
            "type":"object",
            "properties":{
               "comment":{
                  "maxLength":240,
                  "minLength":1,
                  "type":"string",
                  "description":"A comment (reason for change) for the new IEP Level",
                  "example":"The submitting officer's reasons for changing the IEP level. Should be clear and concise."
               },
               "iepLevel":{
                  "type":"string",
                  "description":"The IEP level. Must be one of the reference data values in domain 'IEP_LEVEL'. Typically BAS (Basic), ENH (Enhanced), ENT (Entry) or STD (Standard)",
                  "example":"BAS"
               }
            }
         },
         "Image":{
            "title":"Image",
            "type":"object",
            "properties":{
               "image":{
                  "type":"string",
                  "description":"Base64 Encoded JPEG data",
                  "example":"<base64_encoded_jpeg_data>"
               }
            },
            "description":"Prisoner Photo"
         },
         "ImageDetail":{
            "title":"ImageDetail",
            "required":[
               "captureDate",
               "imageId",
               "imageOrientation",
               "imageType",
               "imageView"
            ],
            "type":"object",
            "properties":{
               "captureDate":{
                  "type":"string",
                  "description":"Date of image capture",
                  "format":"date"
               },
               "imageId":{
                  "type":"integer",
                  "description":"Image ID",
                  "format":"int64"
               },
               "imageOrientation":{
                  "type":"string",
                  "description":"Orientation of the image"
               },
               "imageType":{
                  "type":"string",
                  "description":"Image Type"
               },
               "imageView":{
                  "type":"string",
                  "description":"Image view information"
               },
               "objectId":{
                  "type":"integer",
                  "description":"Object ID",
                  "format":"int64"
               }
            },
            "description":"Image Detail"
         },
         "IncidentCase":{
            "title":"IncidentCase",
            "required":[
               "incidentCaseId",
               "incidentDate",
               "incidentStatus",
               "incidentTime",
               "incidentTitle",
               "incidentType",
               "reportDate",
               "reportTime",
               "reportedStaffId"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency where incident happened",
                  "example":"MDI"
               },
               "incidentCaseId":{
                  "type":"integer",
                  "description":"Incident Case ID",
                  "format":"int64",
                  "example":2131231
               },
               "incidentDate":{
                  "type":"string",
                  "description":"Date the incident took place",
                  "format":"date",
                  "example":"2018-02-10T00:00:00.000+00:00"
               },
               "incidentDetails":{
                  "type":"string",
                  "description":"Details about the case",
                  "example":"There was a big fight"
               },
               "incidentStatus":{
                  "type":"string",
                  "description":"Current Status of Incident",
                  "example":"CLOSE",
                  "enum":[
                     "AWAN",
                     "CLOSE",
                     "DUP",
                     "INAME",
                     "INAN",
                     "INREQ",
                     "IUP",
                     "PIU"
                  ]
               },
               "incidentTime":{
                  "type":"string",
                  "description":"Time when incident occurred",
                  "format":"date-time"
               },
               "incidentTitle":{
                  "type":"string",
                  "description":"Title of the case",
                  "example":"Assault on staff member"
               },
               "incidentType":{
                  "type":"string",
                  "description":"Type of incident",
                  "example":"ASSAULT",
                  "enum":[
                     "ABSCOND",
                     "ASSAULT",
                     "ATT_ESCAPE",
                     "ATT_ESC_E",
                     "BARRICADE",
                     "BOMB",
                     "BREACH",
                     "CLOSE_DOWN",
                     "CON_INDISC",
                     "DAMAGE",
                     "DEATH",
                     "DEATH_NI",
                     "DISORDER",
                     "DRONE",
                     "DRUGS",
                     "ESCAPE_ESC",
                     "ESCAPE_EST",
                     "FIND",
                     "FIND1",
                     "FINDS",
                     "FINDS1",
                     "FIRE",
                     "FIREARM_ETC",
                     "FOOD_REF",
                     "HOSTAGE",
                     "KEY_LOCK",
                     "KEY_LOCKNEW",
                     "MISC",
                     "MOBILES",
                     "RADIO_COMP",
                     "REL_ERROR",
                     "ROOF_CLIMB",
                     "SELF_HARM",
                     "TOOL_LOSS",
                     "TRF",
                     "TRF2",
                     "TRF3"
                  ]
               },
               "parties":{
                  "uniqueItems":true,
                  "type":"array",
                  "description":"Parties Involved in case",
                  "items":{
                     "$ref":"#/components/schemas/IncidentParty"
                  }
               },
               "reportDate":{
                  "type":"string",
                  "description":"Date when incident reported",
                  "format":"date",
                  "example":"2018-02-11T00:00:00.000+00:00"
               },
               "reportTime":{
                  "type":"string",
                  "description":"Time incident reported",
                  "format":"date-time"
               },
               "reportedStaffId":{
                  "type":"integer",
                  "description":"Staff ID who created report",
                  "format":"int64",
                  "example":2131231
               },
               "responseLockedFlag":{
                  "type":"boolean",
                  "description":"Is the response completed?",
                  "example":true
               },
               "responses":{
                  "uniqueItems":true,
                  "type":"array",
                  "description":"Question And Answer Responses",
                  "items":{
                     "$ref":"#/components/schemas/IncidentResponse"
                  }
               }
            },
            "description":"Incident Case"
         },
         "IncidentParty":{
            "title":"IncidentParty",
            "required":[
               "bookingId",
               "commentText",
               "incidentCaseId",
               "outcomeCode",
               "participationRole",
               "partySeq"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id of offender involved",
                  "format":"int64",
                  "example":1241232
               },
               "commentText":{
                  "type":"string",
                  "description":"Additional Comments",
                  "example":"Some additional Information"
               },
               "incidentCaseId":{
                  "type":"integer",
                  "description":"Incident Case ID",
                  "format":"int64",
                  "example":12431243
               },
               "outcomeCode":{
                  "type":"string",
                  "description":"Outcome Code",
                  "example":"POR"
               },
               "participationRole":{
                  "type":"string",
                  "description":"Role in the Incident",
                  "example":"ASSIAL"
               },
               "partySeq":{
                  "type":"integer",
                  "description":"Sequence or each party member",
                  "format":"int64",
                  "example":1
               },
               "personId":{
                  "type":"integer",
                  "description":"Person (non-staff) ID (optional)",
                  "format":"int64",
                  "example":544233
               },
               "staffId":{
                  "type":"integer",
                  "description":"Staff Member ID (optional)",
                  "format":"int64",
                  "example":1534133
               }
            },
            "description":"Incident Party"
         },
         "IncidentResponse":{
            "title":"IncidentResponse",
            "required":[
               "answer",
               "question",
               "questionSeq",
               "questionnaireAnsId",
               "questionnaireQueId"
            ],
            "type":"object",
            "properties":{
               "answer":{
                  "type":"string",
                  "description":"The Answer to the Question",
                  "example":"YES"
               },
               "question":{
                  "type":"string",
                  "description":"The Question",
                  "example":"Was it a violent assault?"
               },
               "questionSeq":{
                  "type":"integer",
                  "description":"Sequence of presented Questions",
                  "format":"int32",
                  "example":2131231
               },
               "questionnaireAnsId":{
                  "type":"integer",
                  "description":"ID for Questionnaire Answer",
                  "format":"int64",
                  "example":983434
               },
               "questionnaireQueId":{
                  "type":"integer",
                  "description":"ID for Questionnaire Question",
                  "format":"int64",
                  "example":983431
               },
               "recordStaffId":{
                  "type":"integer",
                  "description":"Staff Id recording comment",
                  "format":"int64",
                  "example":123123
               },
               "responseCommentText":{
                  "type":"string",
                  "description":"Additional comments for the response to the question",
                  "example":"The knife was in his pocket"
               },
               "responseDate":{
                  "type":"string",
                  "description":"Date response was recorded",
                  "format":"date-time"
               }
            },
            "description":"Incident Reponses"
         },
         "InmateBasicDetails":{
            "title":"InmateBasicDetails",
            "required":[
               "dateOfBirth",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of agency to which the prisoner is associated."
               },
               "assignedLivingUnitDesc":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) that offender is assigned to.",
                  "example":"MDI-1-1-3"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Identifier of living unit (e.g. cell) that prisoner is assigned to.",
                  "format":"int64"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender Booking Id",
                  "format":"int64",
                  "example":432132
               },
               "bookingNo":{
                  "type":"string",
                  "description":"Booking Number"
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of Birth of prisoner",
                  "format":"date",
                  "example":"1970-03-15T00:00:00.000+00:00"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name"
               },
               "middleName":{
                  "type":"string",
                  "description":"Middle Name(s)"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference",
                  "example":"A1234AA"
               }
            },
            "description":"Offender basic detail"
         },
         "InmateDetail":{
            "title":"InmateDetail",
            "required":[
               "activeFlag",
               "dateOfBirth",
               "firstName",
               "inOutStatus",
               "lastName",
               "offenderId",
               "offenderNo",
               "rootOffenderId",
               "status"
            ],
            "type":"object",
            "properties":{
               "activeAlertCount":{
                  "type":"integer",
                  "description":"number of active alerts",
                  "format":"int64"
               },
               "activeFlag":{
                  "type":"boolean",
                  "description":"Indicates that the person is currently in prison",
                  "example":false
               },
               "age":{
                  "type":"integer",
                  "description":"Age of prisoner",
                  "format":"int32"
               },
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of agency to which the prisoner is associated."
               },
               "alerts":{
                  "type":"array",
                  "description":"List of alert details",
                  "items":{
                     "$ref":"#/components/schemas/Alert"
                  }
               },
               "alertsCodes":{
                  "type":"array",
                  "description":"List of Alerts",
                  "items":{
                     "type":"string"
                  }
               },
               "aliases":{
                  "type":"array",
                  "description":"Aliases",
                  "items":{
                     "$ref":"#/components/schemas/Alias"
                  }
               },
               "assessments":{
                  "type":"array",
                  "description":"List of assessments",
                  "items":{
                     "$ref":"#/components/schemas/Assessment"
                  }
               },
               "assignedLivingUnit":{
                  "description":"Cell or location of the prisoner",
                  "$ref":"#/components/schemas/AssignedLivingUnit"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Identifier of living unit (e.g. cell) that prisoner is assigned to.",
                  "format":"int64"
               },
               "birthCountryCode":{
                  "type":"string",
                  "description":"Country of birth",
                  "example":"GBR"
               },
               "birthPlace":{
                  "type":"string",
                  "description":"Place of birth",
                  "example":"WALES"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender Booking Id",
                  "format":"int64",
                  "example":432132
               },
               "bookingNo":{
                  "type":"string",
                  "description":"Booking Number"
               },
               "category":{
                  "type":"string",
                  "description":"Category description (from list of assessments)"
               },
               "categoryCode":{
                  "type":"string",
                  "description":"Category code (from list of assessments)"
               },
               "csra":{
                  "type":"string",
                  "description":"CSRA (Latest assessment with cellSharing=true from list of assessments)"
               },
               "csraClassificationCode":{
                  "type":"string",
                  "description":"The CSRA classification (calculated from the list of CSRA assessments)",
                  "example":"STANDARD"
               },
               "csraClassificationDate":{
                  "type":"string",
                  "description":"The date that the csraClassificationCode was assessed",
                  "format":"date"
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of Birth of prisoner",
                  "format":"date",
                  "example":"1970-03-15T00:00:00.000+00:00"
               },
               "facialImageId":{
                  "type":"integer",
                  "description":"Image Id Ref of prisoner",
                  "format":"int64"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name"
               },
               "identifiers":{
                  "type":"array",
                  "description":"Identifiers",
                  "items":{
                     "$ref":"#/components/schemas/OffenderIdentifier"
                  }
               },
               "imprisonmentStatus":{
                  "type":"string",
                  "description":"The prisoner's imprisonment status.",
                  "example":"LIFE"
               },
               "imprisonmentStatusDescription":{
                  "type":"string",
                  "description":"The prisoner's imprisonment status description.",
                  "example":"Serving Life Imprisonment"
               },
               "inOutStatus":{
                  "type":"string",
                  "description":"In/Out Status",
                  "example":"IN",
                  "enum":[
                     "IN",
                     "OUT",
                     "TRN"
                  ]
               },
               "inactiveAlertCount":{
                  "type":"integer",
                  "description":"number of inactive alerts",
                  "format":"int64"
               },
               "interpreterRequired":{
                  "type":"boolean",
                  "description":"Interpreter required",
                  "example":false
               },
               "language":{
                  "type":"string",
                  "description":"Preferred spoken language"
               },
               "lastMovementReasonCode":{
                  "type":"string",
                  "description":"Last Movement Reason of prisoner",
                  "example":"CA"
               },
               "lastMovementTypeCode":{
                  "type":"string",
                  "description":"Last Movement Type Code of prisoner",
                  "example":"TAP",
                  "enum":[
                     "ADM",
                     "CRT",
                     "REL",
                     "TAP",
                     "TRN"
                  ]
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name"
               },
               "latestLocationId":{
                  "type":"string",
                  "description":"the current prison id or the last prison before release",
                  "example":"MDI"
               },
               "legalStatus":{
                  "type":"string",
                  "description":"Legal Status",
                  "example":"REMAND",
                  "enum":[
                     "CIVIL_PRISONER",
                     "CONVICTED_UNSENTENCED",
                     "DEAD",
                     "IMMIGRATION_DETAINEE",
                     "INDETERMINATE_SENTENCE",
                     "OTHER",
                     "RECALL",
                     "REMAND",
                     "SENTENCED",
                     "UNKNOWN"
                  ]
               },
               "locationDescription":{
                  "type":"string",
                  "description":"current prison or outside with last movement information.",
                  "example":"Outside - released from Leeds"
               },
               "middleName":{
                  "type":"string",
                  "description":"Middle Name(s)"
               },
               "offenceHistory":{
                  "type":"array",
                  "description":"Offence History",
                  "items":{
                     "$ref":"#/components/schemas/OffenceHistoryDetail"
                  }
               },
               "offenderId":{
                  "type":"integer",
                  "description":"Internal Offender ID",
                  "format":"int64"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference",
                  "example":"A1234AA"
               },
               "personalCareNeeds":{
                  "type":"array",
                  "description":"Personal Care Needs",
                  "items":{
                     "$ref":"#/components/schemas/PersonalCareNeed"
                  }
               },
               "physicalAttributes":{
                  "description":"A set of physical attributes",
                  "$ref":"#/components/schemas/PhysicalAttributes"
               },
               "physicalCharacteristics":{
                  "type":"array",
                  "description":"List of physical characteristics",
                  "items":{
                     "$ref":"#/components/schemas/PhysicalCharacteristic"
                  }
               },
               "physicalMarks":{
                  "type":"array",
                  "description":"List of physical marks",
                  "items":{
                     "$ref":"#/components/schemas/PhysicalMark"
                  }
               },
               "privilegeSummary":{
                  "description":"The prisoner's IEP Status",
                  "$ref":"#/components/schemas/PrivilegeSummary"
               },
               "profileInformation":{
                  "type":"array",
                  "description":"List of profile information",
                  "items":{
                     "$ref":"#/components/schemas/ProfileInformation"
                  }
               },
               "recall":{
                  "type":"boolean",
                  "description":"Recall",
                  "example":true
               },
               "receptionDate":{
                  "type":"string",
                  "description":"Date prisoner was received into the prison.",
                  "format":"date",
                  "example":"1980-01-01T00:00:00.000+00:00"
               },
               "religion":{
                  "type":"string",
                  "description":"Religion of the prisoner"
               },
               "rootOffenderId":{
                  "type":"integer",
                  "description":"Internal Root Offender ID",
                  "format":"int64"
               },
               "sentenceDetail":{
                  "description":"Sentence Detail",
                  "$ref":"#/components/schemas/SentenceDetail"
               },
               "sentenceTerms":{
                  "type":"array",
                  "description":"Current Sentence Terms",
                  "items":{
                     "$ref":"#/components/schemas/OffenderSentenceTerms"
                  }
               },
               "status":{
                  "type":"string",
                  "description":"Status of prisoner",
                  "example":"ACTIVE IN",
                  "enum":[
                     "ACTIVE IN",
                     "ACTIVE OUT"
                  ]
               },
               "statusReason":{
                  "type":"string",
                  "description":"Last movement status of the prison",
                  "example":"CRT-CA"
               },
               "writtenLanguage":{
                  "type":"string",
                  "description":"Preferred written language"
               }
            },
            "description":"Inmate Detail"
         },
         "InternalLocation":{
            "title":"InternalLocation",
            "type":"object",
            "properties":{
               "description":{
                  "type":"string",
                  "description":"Description",
                  "example":"BMI-C-2-03"
               },
               "levels":{
                  "type":"array",
                  "description":"Levels",
                  "items":{
                     "$ref":"#/components/schemas/TypeValue"
                  }
               }
            },
            "description":"Internal Location"
         },
         "KeyWorkerAllocationDetail":{
            "title":"KeyWorkerAllocationDetail",
            "required":[
               "agencyId",
               "assigned",
               "bookingId",
               "firstName",
               "internalLocationDesc",
               "lastName",
               "offenderNo",
               "staffId"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency Id"
               },
               "assigned":{
                  "type":"string",
                  "description":"Date and time of the allocation",
                  "format":"date-time"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender Booking Id",
                  "format":"int64"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name"
               },
               "internalLocationDesc":{
                  "type":"string",
                  "description":"Description of the location within the prison"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name"
               },
               "middleNames":{
                  "type":"string",
                  "description":"Middle Name(s)"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference"
               },
               "staffId":{
                  "type":"integer",
                  "description":"The key worker's Staff Id",
                  "format":"int64"
               }
            },
            "description":"Key worker allocation details"
         },
         "Keyworker":{
            "title":"Keyworker",
            "required":[
               "firstName",
               "lastName",
               "numberAllocated",
               "staffId",
               "status"
            ],
            "type":"object",
            "properties":{
               "firstName":{
                  "type":"string",
                  "description":"Staff member's first name."
               },
               "lastName":{
                  "type":"string",
                  "description":"Staff member's last name."
               },
               "numberAllocated":{
                  "type":"integer",
                  "description":"Current number allocated",
                  "format":"int32"
               },
               "staffId":{
                  "type":"integer",
                  "description":"Unique identifier for staff member.",
                  "format":"int64"
               },
               "status":{
                  "type":"string",
                  "description":"Status of staff member."
               },
               "thumbnailId":{
                  "type":"integer",
                  "description":"Identifier for staff member image.",
                  "format":"int64"
               }
            },
            "description":"Keyworker Details"
         },
         "Language":{
            "title":"Language",
            "type":"object",
            "properties":{
               "interpreter_required":{
                  "type":"boolean",
                  "description":"whether an interpreter is required",
                  "example":true
               },
               "preferred_spoken":{
                  "description":"Spoken language",
                  "$ref":"#/components/schemas/CodeDescription"
               }
            },
            "description":"Language"
         },
         "LegalCase":{
            "title":"LegalCase",
            "type":"object",
            "properties":{
               "case_active":{
                  "type":"boolean",
                  "description":"Case Active",
                  "example":true
               },
               "case_info_number":{
                  "type":"string",
                  "description":"Case Information Number",
                  "example":"1254232"
               },
               "case_started":{
                  "type":"string",
                  "description":"Case Started Date",
                  "format":"date",
                  "example":"2019-01-17T00:00:00.000+00:00"
               },
               "charges":{
                  "type":"array",
                  "description":"Charges",
                  "items":{
                     "$ref":"#/components/schemas/Charge"
                  }
               },
               "court":{
                  "description":"Court",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"ABDRCT\", \"desc\": \"Aberdare County Court\" }"
               },
               "legal_case_type":{
                  "description":"Legal Case Type",
                  "$ref":"#/components/schemas/CodeDescription",
                  "example":"{ \"code\": \"A\", \"desc\": \"Adult\" }"
               }
            },
            "description":"Legal Case"
         },
         "LiveRoll":{
            "title":"LiveRoll",
            "type":"object",
            "properties":{
               "noms_ids":{
                  "type":"array",
                  "description":"Noms Ids",
                  "items":{
                     "type":"string"
                  }
               }
            },
            "description":"Live Roll"
         },
         "LocalTime":{
            "title":"LocalTime",
            "type":"object",
            "properties":{
               "hour":{
                  "type":"integer",
                  "format":"int32"
               },
               "minute":{
                  "type":"integer",
                  "format":"int32"
               },
               "nano":{
                  "type":"integer",
                  "format":"int32"
               },
               "second":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "Location":{
            "title":"Location",
            "required":[
               "agencyId",
               "description",
               "locationId",
               "locationType"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of Agency this location is associated with."
               },
               "currentOccupancy":{
                  "type":"integer",
                  "description":"Current occupancy of location.",
                  "format":"int32"
               },
               "description":{
                  "type":"string",
                  "description":"Location description."
               },
               "internalLocationCode":{
                  "type":"string"
               },
               "locationId":{
                  "type":"integer",
                  "description":"Location identifier.",
                  "format":"int64"
               },
               "locationPrefix":{
                  "type":"string",
                  "description":"Location prefix. Defines search prefix that will constrain search to this location and its subordinate locations."
               },
               "locationType":{
                  "type":"string",
                  "description":"Location type."
               },
               "locationUsage":{
                  "type":"string",
                  "description":"What events this room can be used for."
               },
               "operationalCapacity":{
                  "type":"integer",
                  "description":"Operational capacity of the location.",
                  "format":"int32"
               },
               "parentLocationId":{
                  "type":"integer",
                  "description":"Identifier of this location's parent location.",
                  "format":"int64"
               },
               "userDescription":{
                  "type":"string",
                  "description":"User-friendly location description."
               }
            },
            "description":"Location Details"
         },
         "LocationGroup":{
            "title":"LocationGroup",
            "required":[
               "children",
               "key",
               "name"
            ],
            "type":"object",
            "properties":{
               "children":{
                  "type":"array",
                  "description":"The child groups of this group",
                  "items":{
                     "$ref":"#/components/schemas/LocationGroup"
                  }
               },
               "key":{
                  "type":"string",
                  "description":"A key for the group"
               },
               "name":{
                  "type":"string",
                  "description":"The name of the group"
               }
            },
            "description":"Cell Locations are grouped for unlock lists as a 2 level tree. The two levels are referred to as Location and Sub-Location in the prisonstaffhub UI. Each (location/sub-location) group has a name that is understood by prison officers and also serves as a key to retrieve the corresponding Cell Locations and information about their occupants."
         },
         "MilitaryRecord":{
            "title":"MilitaryRecord",
            "required":[
               "militaryBranchCode",
               "militaryBranchDescription",
               "selectiveServicesFlag",
               "startDate"
            ],
            "type":"object",
            "properties":{
               "description":{
                  "type":"string",
                  "description":"Description",
                  "example":"Some description"
               },
               "dischargeLocation":{
                  "type":"string",
                  "description":"Discharge location",
                  "example":"Manchester"
               },
               "disciplinaryActionCode":{
                  "type":"string",
                  "description":"Disciplinary action code",
                  "example":"CM"
               },
               "disciplinaryActionDescription":{
                  "type":"string",
                  "description":"Disciplinary action description",
                  "example":"Court Martial"
               },
               "endDate":{
                  "type":"string",
                  "description":"End date",
                  "format":"date",
                  "example":"2020-10-17T00:00:00.000+00:00"
               },
               "enlistmentLocation":{
                  "type":"string",
                  "description":"Enlistment location",
                  "example":"Sheffield"
               },
               "militaryBranchCode":{
                  "type":"string",
                  "description":"Military branch code",
                  "example":"ARM"
               },
               "militaryBranchDescription":{
                  "type":"string",
                  "description":"Military branch description",
                  "example":"Army"
               },
               "militaryDischargeCode":{
                  "type":"string",
                  "description":"Military discharge code",
                  "example":"DIS"
               },
               "militaryDischargeDescription":{
                  "type":"string",
                  "description":"Military discharge description",
                  "example":"Dishonourable"
               },
               "militaryRankCode":{
                  "type":"string",
                  "description":"Military rank code",
                  "example":"LCPL_RMA"
               },
               "militaryRankDescription":{
                  "type":"string",
                  "description":"Military rank description",
                  "example":"Lance Corporal  (Royal Marines)"
               },
               "selectiveServicesFlag":{
                  "type":"boolean",
                  "description":"Selective services flag",
                  "example":false
               },
               "serviceNumber":{
                  "type":"string",
                  "description":"Service number",
                  "example":"25232301"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start date",
                  "format":"date",
                  "example":"2000-01-01T00:00:00.000+00:00"
               },
               "unitNumber":{
                  "type":"string",
                  "description":"The unit number",
                  "example":"255 TACP Battery"
               },
               "warZoneCode":{
                  "type":"string",
                  "description":"War zone code",
                  "example":"AFG"
               },
               "warZoneDescription":{
                  "type":"string",
                  "description":"War zone description",
                  "example":"Afghanistan"
               }
            },
            "description":"Military Record"
         },
         "MilitaryRecords":{
            "title":"MilitaryRecords",
            "type":"object",
            "properties":{
               "militaryRecords":{
                  "type":"array",
                  "description":"Military Records",
                  "items":{
                     "$ref":"#/components/schemas/MilitaryRecord"
                  }
               }
            },
            "description":"Military Records"
         },
         "Movement":{
            "title":"Movement",
            "required":[
               "createDateTime",
               "directionCode",
               "fromAgency",
               "fromAgencyDescription",
               "movementDate",
               "movementReason",
               "movementTime",
               "movementType",
               "movementTypeDescription",
               "offenderNo",
               "toAgency",
               "toAgencyDescription"
            ],
            "type":"object",
            "properties":{
               "commentText":{
                  "type":"string",
                  "description":"Comment"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Timestamp when the external movement record was created",
                  "format":"date-time"
               },
               "directionCode":{
                  "type":"string",
                  "description":"IN or OUT"
               },
               "fromAgency":{
                  "type":"string",
                  "description":"Agency travelling from"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"Description of the agency travelling from"
               },
               "fromCity":{
                  "type":"string",
                  "description":"City offender was received from"
               },
               "movementDate":{
                  "type":"string",
                  "description":"Movement date",
                  "format":"date"
               },
               "movementReason":{
                  "type":"string",
                  "description":"Description of movement reason"
               },
               "movementTime":{
                  "description":"Movement time",
                  "$ref":"#/components/schemas/LocalTime"
               },
               "movementType":{
                  "type":"string",
                  "description":"ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
                  "example":"ADM",
                  "enum":[
                     "ADM",
                     "CRT",
                     "REL",
                     "TAP",
                     "TRN"
                  ]
               },
               "movementTypeDescription":{
                  "type":"string",
                  "description":"Description of the movement type"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number (UK is NOMS ID)"
               },
               "toAgency":{
                  "type":"string",
                  "description":"Agency travelling to"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"Description of the agency travelling to"
               },
               "toCity":{
                  "type":"string",
                  "description":"City offender was sent to"
               }
            },
            "description":"Prisoner Custody Status"
         },
         "MovementCount":{
            "title":"MovementCount",
            "required":[
               "in",
               "out"
            ],
            "type":"object",
            "properties":{
               "in":{
                  "type":"integer",
                  "description":"Number of prisoners arrived so far on given date",
                  "format":"int32"
               },
               "out":{
                  "type":"integer",
                  "description":"Number of prisoners that have left so far on given date",
                  "format":"int32"
               }
            },
            "description":"Establishment roll count in and out numbers"
         },
         "MovementDate":{
            "title":"MovementDate",
            "type":"object",
            "properties":{
               "dateInToPrison":{
                  "type":"string",
                  "format":"date-time"
               },
               "dateOutOfPrison":{
                  "type":"string",
                  "format":"date-time"
               },
               "inwardType":{
                  "type":"string"
               },
               "outwardType":{
                  "type":"string"
               },
               "reasonInToPrison":{
                  "type":"string"
               },
               "reasonOutOfPrison":{
                  "type":"string"
               }
            },
            "description":"A movement IN and OUT range"
         },
         "MovementSummary":{
            "title":"MovementSummary",
            "required":[
               "createDateTime",
               "directionCode",
               "eventId",
               "fromAgency",
               "fromAgencyDescription",
               "movementReason",
               "movementTime",
               "movementType",
               "movementTypeDescription",
               "offenderNo",
               "toAgency",
               "toAgencyDescription"
            ],
            "type":"object",
            "properties":{
               "arrestAgencyLocId":{
                  "type":"string",
                  "description":"The arresting agency location ID",
                  "example":"SYPOL"
               },
               "commentText":{
                  "type":"string",
                  "description":"Comment",
                  "example":"This is a free text comment"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Timestamp when the external movement record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "directionCode":{
                  "type":"string",
                  "description":"IN or OUT",
                  "example":"IN"
               },
               "escortCode":{
                  "type":"string",
                  "description":"The escort code",
                  "example":"PECS123"
               },
               "escortText":{
                  "type":"string",
                  "description":"The escort text",
                  "example":"Secure van"
               },
               "eventId":{
                  "type":"integer",
                  "description":"The internal event ID",
                  "format":"int64",
                  "example":1223232
               },
               "fromAgency":{
                  "type":"string",
                  "description":"Agency travelling from",
                  "example":"LEI"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"Description of the agency travelling from",
                  "example":"HMP LEEDS"
               },
               "fromCity":{
                  "type":"string",
                  "description":"City offender was received from",
                  "example":"LEEDS"
               },
               "internalScheduleReasonCode":{
                  "type":"string",
                  "description":"Internal schedule reason code"
               },
               "internalScheduleType":{
                  "type":"string",
                  "description":"Internal schedule type"
               },
               "movementReason":{
                  "type":"string",
                  "description":"Description of movement reason",
                  "example":"Convicted at court"
               },
               "movementTime":{
                  "type":"string",
                  "description":"Movement date and time in Europe/London local time format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "movementType":{
                  "type":"string",
                  "description":"ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
                  "example":"ADM",
                  "enum":[
                     "ADM",
                     "CRT",
                     "REL",
                     "TAP",
                     "TRN"
                  ]
               },
               "movementTypeDescription":{
                  "type":"string",
                  "description":"Description of the movement type",
                  "example":"Admission"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (NOMS ID)",
                  "example":"G3878UK"
               },
               "toAgency":{
                  "type":"string",
                  "description":"Agency travelling to",
                  "example":"MDI"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"Description of the agency travelling to",
                  "example":"HMP MOORLANDS"
               },
               "toCity":{
                  "type":"string",
                  "description":"City offender was sent to",
                  "example":"DONCASTER"
               },
               "toProvStatCode":{
                  "type":"string",
                  "description":"To prov stat code - from offender_external_movements"
               }
            },
            "description":"Summary data for a completed movement"
         },
         "NewAppointment":{
            "title":"NewAppointment",
            "required":[
               "appointmentType",
               "locationId",
               "startTime"
            ],
            "type":"object",
            "properties":{
               "appointmentType":{
                  "maxLength":12,
                  "minLength":0,
                  "pattern":"\\w*",
                  "type":"string",
                  "description":"Corresponds to the scheduled event subType"
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"Details of appointment"
               },
               "endTime":{
                  "type":"string",
                  "description":"Date and time at which event ends",
                  "format":"date-time"
               },
               "locationId":{
                  "type":"integer",
                  "description":"Location at which the appointment takes place.",
                  "format":"int64"
               },
               "startTime":{
                  "type":"string",
                  "description":"Date and time at which event starts",
                  "format":"date-time"
               }
            },
            "description":"Creation details for a new appointment"
         },
         "NewCaseNote":{
            "title":"NewCaseNote",
            "required":[
               "subType",
               "text",
               "type"
            ],
            "type":"object",
            "properties":{
               "occurrenceDateTime":{
                  "type":"string",
                  "description":"Date and Time of when case note contact with offender was made",
                  "format":"date-time"
               },
               "subType":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Case Note Sub Type"
               },
               "text":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"Case Note Text"
               },
               "type":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Case Note Type"
               }
            },
            "description":"New Case Note"
         },
         "OffenceDetail":{
            "title":"OffenceDetail",
            "required":[
               "bookingId",
               "offenceCode",
               "offenceDescription",
               "statuteCode"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Prisoner booking id",
                  "format":"int64",
                  "example":1123456
               },
               "offenceCode":{
                  "type":"string",
                  "description":"Reference Code",
                  "example":"RR84070"
               },
               "offenceDescription":{
                  "type":"string",
                  "description":"Description of offence"
               },
               "statuteCode":{
                  "type":"string",
                  "description":"Statute code",
                  "example":"RR84"
               }
            },
            "description":"Offence Details"
         },
         "OffenceDto":{
            "title":"OffenceDto",
            "required":[
               "activeFlag",
               "code",
               "description",
               "hoCode",
               "severityRanking",
               "statuteCode"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "type":"string",
                  "description":"Active Y/N",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               },
               "code":{
                  "type":"string",
                  "description":"Reference Code",
                  "example":"RR84070"
               },
               "description":{
                  "type":"string",
                  "description":"Description of offence"
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Expiry Date if no longer active",
                  "format":"date",
                  "example":"2021-04-01T00:00:00.000+00:00"
               },
               "hoCode":{
                  "description":"HO code",
                  "$ref":"#/components/schemas/HOCodeDto",
                  "example":"825/99"
               },
               "listSequence":{
                  "type":"integer",
                  "description":"Sequence",
                  "format":"int32",
                  "example":1
               },
               "severityRanking":{
                  "type":"string",
                  "description":"Severity Ranking",
                  "example":"5"
               },
               "statuteCode":{
                  "description":"Statute code",
                  "$ref":"#/components/schemas/StatuteDto",
                  "example":"RR84"
               }
            },
            "description":"Offence"
         },
         "OffenceHistoryDetail":{
            "title":"OffenceHistoryDetail",
            "required":[
               "bookingId",
               "mostSerious",
               "offenceCode",
               "offenceDate",
               "offenceDescription",
               "statuteCode"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Prisoner booking id",
                  "format":"int64",
                  "example":1123456
               },
               "caseId":{
                  "type":"integer",
                  "description":"Court case id",
                  "format":"int64",
                  "example":100
               },
               "courtDate":{
                  "type":"string",
                  "description":"Latest court date associated with the offence",
                  "format":"date",
                  "example":"2018-02-10T00:00:00.000+00:00"
               },
               "mostSerious":{
                  "type":"boolean",
                  "description":"Identifies the main offence per booking",
                  "example":false
               },
               "offenceCode":{
                  "type":"string",
                  "description":"Reference Code",
                  "example":"RR84070"
               },
               "offenceDate":{
                  "type":"string",
                  "description":"Date the offence took place",
                  "format":"date",
                  "example":"2018-02-10T00:00:00.000+00:00"
               },
               "offenceDescription":{
                  "type":"string",
                  "description":"Description associated with the offence code",
                  "example":"Commit an act / series of acts with intent to pervert the course of public justice"
               },
               "offenceRangeDate":{
                  "type":"string",
                  "description":"End date if range the offence was believed to have taken place",
                  "format":"date",
                  "example":"2018-03-10T00:00:00.000+00:00"
               },
               "primaryResultCode":{
                  "type":"string",
                  "description":"Primary result code "
               },
               "primaryResultConviction":{
                  "type":"boolean",
                  "description":"Conviction flag for Primary result ",
                  "example":false
               },
               "primaryResultDescription":{
                  "type":"string",
                  "description":"Description for Primary result"
               },
               "secondaryResultCode":{
                  "type":"string",
                  "description":"Secondary result code"
               },
               "secondaryResultConviction":{
                  "type":"boolean",
                  "description":"Conviction flag for Secondary result ",
                  "example":false
               },
               "secondaryResultDescription":{
                  "type":"string",
                  "description":"Description for Secondary result"
               },
               "statuteCode":{
                  "type":"string",
                  "description":"Statute code",
                  "example":"RR84"
               }
            },
            "description":"Offence History Item"
         },
         "Offender":{
            "title":"Offender",
            "type":"object",
            "properties":{
               "aliases":{
                  "type":"array",
                  "description":"List of offenderâ€™s aliases",
                  "items":{
                     "$ref":"#/components/schemas/OffenderAlias"
                  }
               },
               "convicted":{
                  "type":"boolean",
                  "description":"indicates whether the offender has been convicted or is on remand",
                  "example":true
               },
               "cro_number":{
                  "type":"string",
                  "description":"CRO Number",
                  "example":"ADF567890"
               },
               "csra":{
                  "description":"Cell Sharing Risk Assessment",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "date_of_birth":{
                  "type":"string",
                  "description":"Date of Birth",
                  "format":"date",
                  "example":"1970-01-01T00:00:00.000+00:00"
               },
               "diet":{
                  "description":"Diet",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "ethnicity":{
                  "description":"Ethnicity",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "gender":{
                  "description":"Gender",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "given_name":{
                  "type":"string",
                  "description":"Given Name",
                  "example":"JENNIFER"
               },
               "iep_level":{
                  "description":"IEP Level",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "imprisonment_status":{
                  "description":"Imprisonment Status",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "language":{
                  "description":"Language",
                  "$ref":"#/components/schemas/Language"
               },
               "middle_names":{
                  "type":"string",
                  "description":"Middle Names",
                  "example":"ESMERALADA JANE"
               },
               "nationalities":{
                  "type":"string",
                  "description":"Nationalities"
               },
               "pnc_number":{
                  "type":"string",
                  "description":"PNC Number",
                  "example":"96/346527V"
               },
               "religion":{
                  "description":"Religion",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "security_category":{
                  "description":"Security Categorisation",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "suffix":{
                  "type":"string",
                  "description":"Suffix"
               },
               "surname":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"HALLIBUT"
               },
               "title":{
                  "type":"string",
                  "description":"Title",
                  "example":"MR"
               }
            },
            "description":"Offender"
         },
         "OffenderAlias":{
            "title":"OffenderAlias",
            "type":"object",
            "properties":{
               "date_of_birth":{
                  "type":"string",
                  "description":"Date of Birth",
                  "format":"date",
                  "example":"1970-01-01T00:00:00.000+00:00"
               },
               "given_name":{
                  "type":"string",
                  "description":"Given Name",
                  "example":"JENNIFER"
               },
               "middle_names":{
                  "type":"string",
                  "description":"Middle Names",
                  "example":"ESMERALADA JANE"
               },
               "surname":{
                  "type":"string",
                  "description":"Surname",
                  "example":"HALLIBUT"
               }
            },
            "description":"Offender Alias"
         },
         "OffenderBooking":{
            "title":"OffenderBooking",
            "required":[
               "age",
               "agencyId",
               "alertsCodes",
               "alertsDetails",
               "bookingId",
               "dateOfBirth",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "age":{
                  "type":"integer",
                  "description":"Offender's current age.",
                  "format":"int32",
                  "example":32
               },
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of agency that offender is associated with.",
                  "example":"MDI"
               },
               "alertsCodes":{
                  "type":"array",
                  "description":"List of offender's current alert types.",
                  "items":{
                     "type":"string"
                  }
               },
               "alertsDetails":{
                  "type":"array",
                  "description":"List of offender's current alert codes.",
                  "items":{
                     "type":"string"
                  }
               },
               "aliases":{
                  "type":"array",
                  "description":"List of offender's alias names.",
                  "items":{
                     "type":"string"
                  }
               },
               "assignedLivingUnitDesc":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) that offender is assigned to.",
                  "example":"MDI-1-1-3"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Identifier of living unit (e.g. cell) that offender is assigned to.",
                  "format":"int64",
                  "example":123123
               },
               "assignedOfficerUserId":{
                  "type":"string",
                  "description":"Identifier of officer (key worker) to which offender is assigned.",
                  "example":"354543"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Unique, numeric booking id.",
                  "format":"int64",
                  "example":1234134
               },
               "bookingNo":{
                  "type":"string",
                  "description":"Booking number.",
                  "example":"A12121"
               },
               "categoryCode":{
                  "type":"string",
                  "description":"The Cat A/B/C/D of the offender",
                  "example":"C",
                  "enum":[
                     "A",
                     "B",
                     "C",
                     "D",
                     "I",
                     "J"
                  ]
               },
               "convictedStatus":{
                  "type":"string",
                  "description":"Convicted Status",
                  "example":"Convicted",
                  "enum":[
                     "Convicted",
                     "Remand"
                  ]
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Offender date of birth.",
                  "format":"date",
                  "example":"1980-05-02T00:00:00.000+00:00"
               },
               "facialImageId":{
                  "type":"integer",
                  "description":"Identifier of facial image of offender.",
                  "format":"int64",
                  "example":1241241
               },
               "firstName":{
                  "type":"string",
                  "description":"Offender first name.",
                  "example":"JOHN"
               },
               "iepLevel":{
                  "type":"string",
                  "description":"The IEP Level of the offender (UK Only)",
                  "example":"Basic"
               },
               "imprisonmentStatus":{
                  "type":"string",
                  "description":"The imprisonment status of the offender",
                  "example":"SENT"
               },
               "lastName":{
                  "type":"string",
                  "description":"Offender last name.",
                  "example":"SMITH"
               },
               "legalStatus":{
                  "type":"string",
                  "description":"Legal Status",
                  "example":"REMAND",
                  "enum":[
                     "CIVIL_PRISONER",
                     "CONVICTED_UNSENTENCED",
                     "DEAD",
                     "IMMIGRATION_DETAINEE",
                     "INDETERMINATE_SENTENCE",
                     "OTHER",
                     "RECALL",
                     "REMAND",
                     "SENTENCED",
                     "UNKNOWN"
                  ]
               },
               "middleName":{
                  "type":"string",
                  "description":"Offender middle name.",
                  "example":"ASHLEY"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number).",
                  "example":"A1234AA"
               }
            },
            "description":"Offender Booking Summary"
         },
         "OffenderCategorise":{
            "title":"OffenderCategorise",
            "required":[
               "bookingId",
               "firstName",
               "lastName",
               "offenderNo",
               "status"
            ],
            "type":"object",
            "properties":{
               "approvalDate":{
                  "type":"string",
                  "description":"Date categorisation was approved if any",
                  "format":"date"
               },
               "approverFirstName":{
                  "type":"string",
                  "description":"Approver First Name if any"
               },
               "approverLastName":{
                  "type":"string",
                  "description":"Approver Last Name if any"
               },
               "assessStatus":{
                  "type":"string",
                  "description":"Categorisation status",
                  "enum":[
                     "A",
                     "I",
                     "P",
                     "null"
                  ]
               },
               "assessmentDate":{
                  "type":"string",
                  "description":"Categorisation date if any",
                  "format":"date"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "description":"Sequence number within booking",
                  "format":"int32"
               },
               "assessmentTypeId":{
                  "type":"integer",
                  "description":"assessment type",
                  "format":"int64"
               },
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "categoriserFirstName":{
                  "type":"string",
                  "description":"Categoriser First Name"
               },
               "categoriserLastName":{
                  "type":"string",
                  "description":"Categoriser Last Name"
               },
               "category":{
                  "type":"string",
                  "description":"Categorisation"
               },
               "firstName":{
                  "type":"string",
                  "description":"Prisoner First Name"
               },
               "lastName":{
                  "type":"string",
                  "description":"Prisoner Last Name"
               },
               "nextReviewDate":{
                  "type":"string",
                  "description":"Next Review Date - for recategorisations",
                  "format":"date"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number"
               },
               "status":{
                  "type":"string",
                  "description":"Where in the categorisation workflow the prisoner is",
                  "enum":[
                     "AWAITING_APPROVAL",
                     "UNCATEGORISED"
                  ]
               }
            },
            "description":"Prisoner with categorisation data"
         },
         "OffenderCell":{
            "title":"OffenderCell",
            "type":"object",
            "properties":{
               "attributes":{
                  "type":"array",
                  "description":"List of attributes",
                  "items":{
                     "$ref":"#/components/schemas/OffenderCellAttribute"
                  }
               },
               "capacity":{
                  "type":"integer",
                  "description":"Capacity",
                  "format":"int32",
                  "example":2
               },
               "description":{
                  "type":"string",
                  "description":"Description",
                  "example":"LEI-1-1"
               },
               "id":{
                  "type":"integer",
                  "description":"The case identifier",
                  "format":"int64",
                  "example":1
               },
               "noOfOccupants":{
                  "type":"integer",
                  "description":"Number of occupants",
                  "format":"int32",
                  "example":2
               },
               "userDescription":{
                  "type":"string",
                  "description":"Description",
                  "example":"LEI-1-1"
               }
            },
            "description":"Offender cell details"
         },
         "OffenderCellAttribute":{
            "title":"OffenderCellAttribute",
            "type":"object",
            "properties":{
               "code":{
                  "type":"string",
                  "description":"Attribute code",
                  "example":"LC"
               },
               "description":{
                  "type":"string",
                  "description":"Attribute description",
                  "example":"Listener Cell"
               }
            },
            "description":"Offender cell details"
         },
         "OffenderDamageObligationModel":{
            "title":"OffenderDamageObligationModel",
            "type":"object",
            "properties":{
               "amountPaid":{
                  "type":"number",
                  "description":"Amount paid",
                  "format":"bigdecimal",
                  "example":10.0
               },
               "amountToPay":{
                  "type":"number",
                  "description":"Original amount to pay",
                  "format":"bigdecimal",
                  "example":50.0
               },
               "comment":{
                  "type":"string",
                  "description":"Comment",
                  "example":"Damages to canteen furniture"
               },
               "currency":{
                  "type":"string",
                  "description":"Currency of these amounts.",
                  "example":"GBP"
               },
               "endDateTime":{
                  "type":"string",
                  "description":"The end date time when the damage obligation ended",
                  "format":"date-time"
               },
               "id":{
                  "type":"integer",
                  "description":"Identifier of damage obligation",
                  "format":"int64",
                  "example":1
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number",
                  "example":"G4346UT"
               },
               "prisonId":{
                  "type":"string",
                  "description":"Prison the damages occurred",
                  "example":"MDI"
               },
               "referenceNumber":{
                  "type":"string",
                  "description":"Reference number",
                  "example":"841177/1, A841821/1, 842371"
               },
               "startDateTime":{
                  "type":"string",
                  "description":"The start date time when the damage obligation started",
                  "format":"date-time"
               },
               "status":{
                  "type":"string",
                  "description":"Status",
                  "example":"ACTIVE"
               }
            },
            "description":"Damage obligation for an offender"
         },
         "OffenderDamageObligationResponse":{
            "title":"OffenderDamageObligationResponse",
            "type":"object",
            "properties":{
               "damageObligations":{
                  "type":"array",
                  "description":"List of offender damage obligations",
                  "items":{
                     "$ref":"#/components/schemas/OffenderDamageObligationModel"
                  }
               }
            },
            "description":"Offender damage obligation response"
         },
         "OffenderEvent":{
            "title":"OffenderEvent",
            "type":"object",
            "properties":{
               "addressEndDate":{
                  "type":"string",
                  "format":"date"
               },
               "addressId":{
                  "type":"integer",
                  "format":"int64"
               },
               "addressUsage":{
                  "type":"string"
               },
               "agencyIncidentId":{
                  "type":"integer",
                  "format":"int64"
               },
               "agencyLocationId":{
                  "type":"string"
               },
               "alertCode":{
                  "type":"string"
               },
               "alertDateTime":{
                  "type":"string",
                  "format":"date-time"
               },
               "alertSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "alertType":{
                  "type":"string"
               },
               "aliasOffenderId":{
                  "type":"integer",
                  "format":"int64"
               },
               "assessmentSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "bedAssignmentSeq":{
                  "type":"integer",
                  "format":"int32"
               },
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "bookingNumber":{
                  "type":"string"
               },
               "caseNoteId":{
                  "type":"integer",
                  "format":"int64"
               },
               "chargeSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "conditionCode":{
                  "type":"string"
               },
               "directionCode":{
                  "type":"string"
               },
               "escortCode":{
                  "type":"string"
               },
               "eventDatetime":{
                  "type":"string",
                  "format":"date-time"
               },
               "eventId":{
                  "type":"string"
               },
               "eventType":{
                  "type":"string"
               },
               "expiryDateTime":{
                  "type":"string",
                  "format":"date-time"
               },
               "findingCode":{
                  "type":"string"
               },
               "fromAgencyLocationId":{
                  "type":"string"
               },
               "identifierType":{
                  "type":"string"
               },
               "identifierValue":{
                  "type":"string"
               },
               "imprisonmentStatusSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "incidentCaseId":{
                  "type":"integer",
                  "format":"int64"
               },
               "incidentPartySeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "incidentQuestionSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "incidentRequirementSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "incidentResponseSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "livingUnitId":{
                  "type":"integer",
                  "format":"int64"
               },
               "mailAddressFlag":{
                  "type":"string"
               },
               "movementDateTime":{
                  "type":"string",
                  "format":"date-time"
               },
               "movementReasonCode":{
                  "type":"string"
               },
               "movementSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "movementType":{
                  "type":"string"
               },
               "nomisEventType":{
                  "type":"string"
               },
               "offenderId":{
                  "type":"integer",
                  "format":"int64"
               },
               "offenderIdDisplay":{
                  "type":"string"
               },
               "offenderSentenceConditionId":{
                  "type":"integer",
                  "format":"int64"
               },
               "oicHearingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "oicOffenceId":{
                  "type":"integer",
                  "format":"int64"
               },
               "ownerClass":{
                  "type":"string"
               },
               "ownerId":{
                  "type":"integer",
                  "format":"int64"
               },
               "personId":{
                  "type":"integer",
                  "format":"int64"
               },
               "pleaFindingCode":{
                  "type":"string"
               },
               "previousBookingNumber":{
                  "type":"string"
               },
               "previousOffenderId":{
                  "type":"integer",
                  "format":"int64"
               },
               "primaryAddressFlag":{
                  "type":"string"
               },
               "resultSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "riskPredictorId":{
                  "type":"integer",
                  "format":"int64"
               },
               "rootOffenderId":{
                  "type":"integer",
                  "format":"int64"
               },
               "sanctionSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "sentenceCalculationId":{
                  "type":"integer",
                  "format":"int64"
               },
               "sentenceSeq":{
                  "type":"integer",
                  "format":"int64"
               },
               "toAgencyLocationId":{
                  "type":"string"
               }
            },
            "description":"Offender Event"
         },
         "OffenderId":{
            "title":"OffenderId",
            "type":"object",
            "properties":{
               "id":{
                  "type":"integer",
                  "description":"ID",
                  "format":"int64",
                  "example":1234567
               }
            },
            "description":"offender ID"
         },
         "OffenderIdentifier":{
            "title":"OffenderIdentifier",
            "required":[
               "type",
               "value"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"The booking ID for this identifier",
                  "format":"int64",
                  "example":1231223
               },
               "caseloadType":{
                  "type":"string",
                  "description":"Related caseload type",
                  "example":"GENERAL"
               },
               "issuedAuthorityText":{
                  "type":"string",
                  "description":"Issuing Authority Information",
                  "example":"Important Auth"
               },
               "issuedDate":{
                  "type":"string",
                  "description":"Date of issue",
                  "format":"date",
                  "example":"2018-01-21T00:00:00.000+00:00"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"The offender number for this identifier",
                  "example":"A1234AB"
               },
               "type":{
                  "type":"string",
                  "description":"Type of offender identifier",
                  "example":"PNC"
               },
               "value":{
                  "type":"string",
                  "description":"The value of the offender identifier",
                  "example":"1231/XX/121"
               }
            },
            "description":"Offender Identifier"
         },
         "OffenderIepReview":{
            "title":"OffenderIepReview",
            "required":[
               "bookingId",
               "cellLocation",
               "firstName",
               "lastName",
               "negativeIeps",
               "offenderNo",
               "positiveIeps",
               "provenAdjudications"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking ID of offender",
                  "format":"int64",
                  "example":1111111
               },
               "cellLocation":{
                  "type":"string",
                  "description":"The current cell location of Offender",
                  "example":"LEI-A-3-003"
               },
               "currentLevel":{
                  "type":"string",
                  "description":"The current IEP level for offender",
                  "example":"Basic"
               },
               "firstName":{
                  "type":"string",
                  "description":"Offender first name",
                  "example":"John"
               },
               "lastName":{
                  "type":"string",
                  "description":"Offender last name",
                  "example":"Smith"
               },
               "lastReviewTime":{
                  "type":"string",
                  "description":"Date of last IEP review",
                  "format":"date-time"
               },
               "middleName":{
                  "type":"string",
                  "description":"Offender middle name",
                  "example":"James"
               },
               "negativeIeps":{
                  "type":"integer",
                  "description":"Number for case notes of type NEG and subtype IEP_WARN",
                  "format":"int32",
                  "example":3
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Number",
                  "example":"G1401GN"
               },
               "positiveIeps":{
                  "type":"integer",
                  "description":"Number for case notes of type POS and subtype IEP_ENC",
                  "format":"int32",
                  "example":3
               },
               "provenAdjudications":{
                  "type":"integer",
                  "description":"Number of proven adjudications",
                  "format":"int32",
                  "example":3
               }
            },
            "description":"Details required for IEP review for offender"
         },
         "OffenderIn":{
            "title":"OffenderIn",
            "required":[
               "bookingId",
               "dateOfBirth",
               "firstName",
               "fromAgencyDescription",
               "fromAgencyId",
               "lastName",
               "location",
               "movementDateTime",
               "movementTime",
               "offenderNo",
               "toAgencyDescription",
               "toAgencyId"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "dateOfBirth":{
                  "type":"string",
                  "format":"date"
               },
               "firstName":{
                  "type":"string"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"Description for Agency travelling from"
               },
               "fromAgencyId":{
                  "type":"string",
                  "description":"Id for Agency travelling from"
               },
               "fromCity":{
                  "type":"string",
                  "description":"City offender was received from"
               },
               "lastName":{
                  "type":"string"
               },
               "location":{
                  "type":"string",
                  "description":"Description of the offender's (internal) location"
               },
               "middleName":{
                  "type":"string"
               },
               "movementDateTime":{
                  "type":"string",
                  "description":"Movement date time",
                  "format":"date-time"
               },
               "movementTime":{
                  "description":"Movement time",
                  "$ref":"#/components/schemas/LocalTime"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"Description for Agency travelling to"
               },
               "toAgencyId":{
                  "type":"string",
                  "description":"Id for Agency travelling to"
               },
               "toCity":{
                  "type":"string",
                  "description":"City offender was sent to"
               }
            },
            "description":"Summary of an offender counted as Establishment Roll - In"
         },
         "OffenderInReception":{
            "title":"OffenderInReception",
            "required":[
               "bookingId",
               "dateOfBirth",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id",
                  "format":"int64"
               },
               "dateOfBirth":{
                  "type":"string",
                  "format":"date"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number"
               }
            },
            "description":"Summary of an offender counted as Establishment Roll - Reception"
         },
         "OffenderKeyWorker":{
            "title":"OffenderKeyWorker",
            "required":[
               "active",
               "agencyId",
               "assigned",
               "created",
               "createdBy",
               "offenderNo",
               "staffId",
               "userId"
            ],
            "type":"object",
            "properties":{
               "active":{
                  "type":"string",
                  "description":"Y"
               },
               "agencyId":{
                  "type":"string",
                  "description":"Agency Id"
               },
               "assigned":{
                  "type":"string",
                  "description":"Date and time allocation was assigned",
                  "format":"date-time"
               },
               "created":{
                  "type":"string",
                  "description":"Date and time allocation record was created",
                  "format":"date-time"
               },
               "createdBy":{
                  "type":"string",
                  "description":"Username of user who created allocation record"
               },
               "expired":{
                  "type":"string",
                  "description":"Date and time allocation expired",
                  "format":"date-time"
               },
               "modified":{
                  "type":"string",
                  "description":"Date and time allocation record was last modified",
                  "format":"date-time"
               },
               "modifiedBy":{
                  "type":"string",
                  "description":"Username of user who last modified allocation record"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference"
               },
               "staffId":{
                  "type":"integer",
                  "description":"The key worker's Staff Id",
                  "format":"int64"
               },
               "userId":{
                  "type":"string",
                  "description":"Username of user who processed allocation"
               }
            },
            "description":"Offender Key Worker record representation (to facilitate data migration)"
         },
         "OffenderMovement":{
            "title":"OffenderMovement",
            "required":[
               "bookingId",
               "dateOfBirth",
               "directionCode",
               "firstName",
               "fromAgency",
               "fromAgencyDescription",
               "lastName",
               "movementDate",
               "movementReason",
               "movementReasonDescription",
               "movementTime",
               "movementType",
               "movementTypeDescription",
               "offenderNo",
               "toAgency",
               "toAgencyDescription"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "dateOfBirth":{
                  "type":"string",
                  "format":"date"
               },
               "directionCode":{
                  "type":"string",
                  "description":"IN or OUT"
               },
               "firstName":{
                  "type":"string"
               },
               "fromAgency":{
                  "type":"string",
                  "description":"Agency travelling from"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"Description for Agency travelling from"
               },
               "lastName":{
                  "type":"string"
               },
               "middleName":{
                  "type":"string"
               },
               "movementDate":{
                  "type":"string",
                  "description":"Movement date",
                  "format":"date"
               },
               "movementReason":{
                  "type":"string",
                  "description":"Reason code for the movement"
               },
               "movementReasonDescription":{
                  "type":"string",
                  "description":"Description of the movement reason"
               },
               "movementTime":{
                  "description":"Movement time",
                  "$ref":"#/components/schemas/LocalTime"
               },
               "movementType":{
                  "type":"string",
                  "description":"ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
                  "example":"ADM",
                  "enum":[
                     "ADM",
                     "CRT",
                     "REL",
                     "TAP",
                     "TRN"
                  ]
               },
               "movementTypeDescription":{
                  "type":"string",
                  "description":"Description of the movement type"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number (UK is NOMS ID)"
               },
               "toAgency":{
                  "type":"string",
                  "description":"Agency travelling to"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"Description for Agency travelling to"
               }
            },
            "description":"Prisoner Movement"
         },
         "OffenderNonAssociation":{
            "title":"OffenderNonAssociation",
            "required":[
               "agencyDescription",
               "assignedLivingUnitDescription",
               "assignedLivingUnitId",
               "firstName",
               "lastName",
               "offenderNo",
               "reasonCode",
               "reasonDescription"
            ],
            "type":"object",
            "properties":{
               "agencyDescription":{
                  "type":"string",
                  "description":"Description of the agency (e.g. prison) the offender is assigned to.",
                  "example":"Pentonville (PVI)"
               },
               "assignedLivingUnitDescription":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) the offender is assigned to.",
                  "example":"PVI-1-2-4"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Id of living unit (e.g. cell) the offender is assigned to.",
                  "format":"int64",
                  "example":123
               },
               "firstName":{
                  "type":"string",
                  "description":"The offenders first name",
                  "example":"Joseph"
               },
               "lastName":{
                  "type":"string",
                  "description":"The offenders last name",
                  "example":"Bloggs"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"The offenders number",
                  "example":"G0135GA"
               },
               "reasonCode":{
                  "type":"string",
                  "description":"The non-association reason code",
                  "example":"PER"
               },
               "reasonDescription":{
                  "type":"string",
                  "description":"The non-association reason description",
                  "example":"Perpetrator"
               }
            },
            "description":"Offender non-association"
         },
         "OffenderNonAssociationDetail":{
            "title":"OffenderNonAssociationDetail",
            "required":[
               "effectiveDate",
               "offenderNonAssociation",
               "reasonCode",
               "reasonDescription",
               "typeCode",
               "typeDescription"
            ],
            "type":"object",
            "properties":{
               "authorisedBy":{
                  "type":"string",
                  "description":"The person who authorised the non-association (free text)."
               },
               "comments":{
                  "type":"string",
                  "description":"Additional free text comments related to the non-association."
               },
               "effectiveDate":{
                  "type":"string",
                  "description":"Date and time the mom-association is effective from. In Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Date and time the mom-association expires. In Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "offenderNonAssociation":{
                  "description":"The offender with whom not to associate.",
                  "$ref":"#/components/schemas/OffenderNonAssociation"
               },
               "reasonCode":{
                  "type":"string",
                  "description":"The non-association reason code",
                  "example":"VIC"
               },
               "reasonDescription":{
                  "type":"string",
                  "description":"The non-association reason description",
                  "example":"Victim"
               },
               "typeCode":{
                  "type":"string",
                  "description":"The non-association type code",
                  "example":"WING"
               },
               "typeDescription":{
                  "type":"string",
                  "description":"The non-association type description",
                  "example":"Do Not Locate on Same Wing"
               }
            },
            "description":"Offender non-association detail"
         },
         "OffenderNonAssociationDetails":{
            "title":"OffenderNonAssociationDetails",
            "required":[
               "agencyDescription",
               "assignedLivingUnitDescription",
               "assignedLivingUnitId",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "agencyDescription":{
                  "type":"string",
                  "description":"Description of the agency (e.g. prison) the offender is assigned to.",
                  "example":"Moorland (HMP & YOI)"
               },
               "assignedLivingUnitDescription":{
                  "type":"string",
                  "description":"Description of living unit (e.g. cell) the offender is assigned to.",
                  "example":"MDI-1-1-3"
               },
               "assignedLivingUnitId":{
                  "type":"integer",
                  "description":"Id of living unit (e.g. cell) the offender is assigned to.",
                  "format":"int64",
                  "example":123
               },
               "firstName":{
                  "type":"string",
                  "description":"The offenders first name",
                  "example":"Fred"
               },
               "lastName":{
                  "type":"string",
                  "description":"The offenders last name",
                  "example":"Bloggs"
               },
               "nonAssociations":{
                  "type":"array",
                  "description":"Offender non-association details",
                  "items":{
                     "$ref":"#/components/schemas/OffenderNonAssociationDetail"
                  }
               },
               "offenderNo":{
                  "type":"string",
                  "description":"The offenders number",
                  "example":"G9109UD"
               }
            },
            "description":"Offender non-association details"
         },
         "OffenderNumber":{
            "title":"OffenderNumber",
            "type":"object",
            "properties":{
               "offenderNumber":{
                  "type":"string",
                  "description":"offenderNumber"
               }
            },
            "description":"The NOMS Offender Number"
         },
         "OffenderOut":{
            "title":"OffenderOut",
            "required":[
               "bookingId",
               "dateOfBirth",
               "firstName",
               "lastName",
               "location",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "dateOfBirth":{
                  "type":"string",
                  "format":"date"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "location":{
                  "type":"string",
                  "description":"The prisoner's internal location (Cell)"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Display Prisoner Number"
               }
            },
            "description":"Summary of an offender 'currently out' according to Establishment Roll"
         },
         "OffenderOutTodayDto":{
            "title":"OffenderOutTodayDto",
            "required":[
               "dateOfBirth",
               "firstName",
               "lastName",
               "offenderNo",
               "timeOut"
            ],
            "type":"object",
            "properties":{
               "dateOfBirth":{
                  "type":"string",
                  "format":"date"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference"
               },
               "reasonDescription":{
                  "type":"string",
                  "description":"Reason for out movement"
               },
               "timeOut":{
                  "$ref":"#/components/schemas/LocalTime"
               }
            },
            "description":"Offender out today details"
         },
         "OffenderRelationship":{
            "title":"OffenderRelationship",
            "required":[
               "firstName",
               "lastName",
               "relationshipType"
            ],
            "type":"object",
            "properties":{
               "externalRef":{
                  "type":"string",
                  "description":"unique external Id"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name"
               },
               "lastName":{
                  "type":"string",
                  "description":"Surname"
               },
               "personId":{
                  "type":"integer",
                  "description":"id of the person contact",
                  "format":"int64"
               },
               "relationshipType":{
                  "type":"string",
                  "description":"Relationship to inmate (e.g. COM or POM, etc.)"
               }
            },
            "description":"Offender Relationship"
         },
         "OffenderSentenceCalc":{
            "title":"OffenderSentenceCalc",
            "required":[
               "agencyLocationId",
               "bookingId",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "agencyLocationId":{
                  "type":"string",
                  "description":"Agency Id",
                  "example":"LEI"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":12341321
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name",
                  "example":"John"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"Smith"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference",
                  "example":"A1000AA"
               },
               "sentenceDetail":{
                  "description":"Offender Sentence Detail Information",
                  "$ref":"#/components/schemas/BaseSentenceDetail"
               }
            },
            "description":"Offender Sentence Calculation"
         },
         "OffenderSentenceDetail":{
            "title":"OffenderSentenceDetail",
            "required":[
               "agencyLocationDesc",
               "agencyLocationId",
               "bookingId",
               "dateOfBirth",
               "firstName",
               "internalLocationDesc",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "agencyLocationDesc":{
                  "type":"string",
                  "description":"Agency Description"
               },
               "agencyLocationId":{
                  "type":"string",
                  "description":"Agency Id",
                  "example":"LEI"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":12341321
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Offender date of birth.",
                  "format":"date"
               },
               "facialImageId":{
                  "type":"integer",
                  "description":"Identifier of facial image of offender.",
                  "format":"int64"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name",
                  "example":"John"
               },
               "internalLocationDesc":{
                  "type":"string",
                  "description":"Description of the location within the prison"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"Smith"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender Unique Reference",
                  "example":"A1000AA"
               },
               "sentenceDetail":{
                  "description":"Offender Sentence Detail Information",
                  "$ref":"#/components/schemas/SentenceDetail"
               }
            },
            "description":"Offender Sentence Detail"
         },
         "OffenderSentenceTerms":{
            "title":"OffenderSentenceTerms",
            "required":[
               "bookingId",
               "caseId",
               "fineAmount",
               "lifeSentence",
               "lineSeq",
               "sentenceSequence",
               "sentenceStartDate",
               "sentenceTermCode",
               "startDate",
               "termSequence"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":1132400
               },
               "caseId":{
                  "type":"string",
                  "description":"Court case id"
               },
               "consecutiveTo":{
                  "type":"integer",
                  "description":"Sentence number which this sentence follows if consecutive, otherwise concurrent.",
                  "format":"int32",
                  "example":2
               },
               "days":{
                  "type":"integer",
                  "description":"Sentence length days.",
                  "format":"int32"
               },
               "fineAmount":{
                  "type":"number",
                  "description":"Fine amount.",
                  "format":"double"
               },
               "lifeSentence":{
                  "type":"boolean",
                  "description":"Whether this is a life sentence.",
                  "example":false
               },
               "lineSeq":{
                  "type":"integer",
                  "description":"Sentence line number",
                  "format":"int64",
                  "example":1
               },
               "months":{
                  "type":"integer",
                  "description":"Sentence length months.",
                  "format":"int32"
               },
               "sentenceSequence":{
                  "type":"integer",
                  "description":"Sentence number within booking id.",
                  "format":"int32",
                  "example":2
               },
               "sentenceStartDate":{
                  "type":"string",
                  "description":"Sentence start date",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "sentenceTermCode":{
                  "type":"string",
                  "description":"Sentence term code.",
                  "example":"IMP"
               },
               "sentenceType":{
                  "type":"string",
                  "description":"Sentence type, using reference data from table SENTENCE_CALC_TYPES.",
                  "example":"2"
               },
               "sentenceTypeDescription":{
                  "type":"string",
                  "description":"Sentence type description.",
                  "example":"2"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start date of sentence term.",
                  "format":"date",
                  "example":"2018-12-31T00:00:00.000+00:00"
               },
               "termSequence":{
                  "type":"integer",
                  "description":"Sentence term number within sentence.",
                  "format":"int32",
                  "example":1
               },
               "weeks":{
                  "type":"integer",
                  "description":"Sentence length weeks.",
                  "format":"int32"
               },
               "years":{
                  "type":"integer",
                  "description":"Sentence length years.",
                  "format":"int32"
               }
            },
            "description":"Offender Sentence terms details for booking id"
         },
         "OffenderSummary":{
            "title":"OffenderSummary",
            "required":[
               "bookingId",
               "firstName",
               "lastName",
               "offenderNo"
            ],
            "type":"object",
            "properties":{
               "agencyLocationDesc":{
                  "type":"string",
                  "description":"Agency description (if known)"
               },
               "agencyLocationId":{
                  "type":"string",
                  "description":"Agency Id (if known)"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"A unique booking id.",
                  "format":"int64"
               },
               "currentlyInPrison":{
                  "type":"string",
                  "description":"Set to Y or N to indicate if the person is currently in prison. If not set, status is not known."
               },
               "firstName":{
                  "type":"string",
                  "description":"The offender's first name."
               },
               "internalLocationDesc":{
                  "type":"string",
                  "description":"Internal location description (if known)"
               },
               "internalLocationId":{
                  "type":"string",
                  "description":"Internal location id (if known)"
               },
               "lastName":{
                  "type":"string",
                  "description":"The offender's last name."
               },
               "middleNames":{
                  "type":"string",
                  "description":"The offender's middle name(s)."
               },
               "offenderNo":{
                  "type":"string",
                  "description":"The offender's unique offender number (aka NOMS Number in the UK)."
               },
               "suffix":{
                  "type":"string",
                  "description":"A code representing a suffix that is applied to offender's name (from SUFFIX reference domain)."
               },
               "title":{
                  "type":"string",
                  "description":"A code representing the offender's title (from TITLE reference domain)."
               }
            },
            "description":"Offender Summary"
         },
         "OffenderTransactionHistoryDto":{
            "title":"OffenderTransactionHistoryDto",
            "type":"object",
            "properties":{
               "accountType":{
                  "type":"string",
                  "description":"Offender Sub Account",
                  "example":"savings,spends,cash"
               },
               "agencyId":{
                  "type":"string",
                  "description":"The place the transaction took place",
                  "example":"MDI"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Creation date time",
                  "format":"date-time"
               },
               "currency":{
                  "type":"string",
                  "description":"Currency of these amounts.",
                  "example":"GBP"
               },
               "currentBalance":{
                  "type":"integer",
                  "description":"Balance at a point in time",
                  "format":"int64"
               },
               "entryDate":{
                  "type":"string",
                  "description":"Transaction Date",
                  "format":"date",
                  "example":"2020-12-11T00:00:00.000+00:00"
               },
               "entryDescription":{
                  "type":"string",
                  "description":"Transaction Description",
                  "example":"some textual description here"
               },
               "holdingCleared":{
                  "type":"boolean",
                  "description":"Indicates that the amount has been cleared from holding",
                  "example":false
               },
               "offenderId":{
                  "type":"integer",
                  "description":"Offender Id",
                  "format":"int64",
                  "example":1
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number",
                  "example":"G6123VU"
               },
               "penceAmount":{
                  "type":"integer",
                  "description":"Transaction Amount",
                  "format":"int64",
                  "example":60
               },
               "postingType":{
                  "type":"string",
                  "description":"Posting type. Denotes the direction of money moving in or out of the account",
                  "example":"CR,DR"
               },
               "referenceNumber":{
                  "type":"string",
                  "description":"Transaction Reference Number"
               },
               "relatedOffenderTransactions":{
                  "type":"array",
                  "description":"List of related transaction details",
                  "items":{
                     "$ref":"#/components/schemas/RelatedTransactionDetails"
                  }
               },
               "transactionEntrySequence":{
                  "type":"integer",
                  "description":"Transaction Sequence",
                  "format":"int64",
                  "example":1
               },
               "transactionId":{
                  "type":"integer",
                  "description":"Transaction Id",
                  "format":"int64",
                  "example":1
               },
               "transactionType":{
                  "type":"string",
                  "description":"Transaction Type"
               }
            },
            "description":"Offender transaction details"
         },
         "PageOfBedAssignment":{
            "title":"PageOfBedAssignment",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/BedAssignment"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfCaseNote":{
            "title":"PageOfCaseNote",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CaseNote"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfEducation":{
            "title":"PageOfEducation",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Education"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfEmployment":{
            "title":"PageOfEmployment",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Employment"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfOffenceDto":{
            "title":"PageOfOffenceDto",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/OffenceDto"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfOffenderNumber":{
            "title":"PageOfOffenderNumber",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/OffenderNumber"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfPrisonerInformation":{
            "title":"PageOfPrisonerInformation",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PrisonerInformation"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "PageOfVisitWithVisitors":{
            "title":"PageOfVisitWithVisitors",
            "type":"object",
            "properties":{
               "content":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/VisitWithVisitors"
                  }
               },
               "empty":{
                  "type":"boolean"
               },
               "first":{
                  "type":"boolean"
               },
               "last":{
                  "type":"boolean"
               },
               "number":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfElements":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageable":{
                  "$ref":"#/components/schemas/Pageable"
               },
               "size":{
                  "type":"integer",
                  "format":"int32"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "totalElements":{
                  "type":"integer",
                  "format":"int64"
               },
               "totalPages":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         },
         "Pageable":{
            "title":"Pageable",
            "type":"object",
            "properties":{
               "offset":{
                  "type":"integer",
                  "format":"int64"
               },
               "pageNumber":{
                  "type":"integer",
                  "format":"int32"
               },
               "pageSize":{
                  "type":"integer",
                  "format":"int32"
               },
               "paged":{
                  "type":"boolean"
               },
               "sort":{
                  "$ref":"#/components/schemas/Sort"
               },
               "unpaged":{
                  "type":"boolean"
               }
            }
         },
         "PaymentResponse":{
            "title":"PaymentResponse",
            "type":"object",
            "properties":{
               "message":{
                  "type":"string",
                  "description":"Message returned from a payment",
                  "example":"Payment accepted"
               }
            },
            "description":"Payment Response"
         },
         "PersonIdentifier":{
            "title":"PersonIdentifier",
            "required":[
               "identifierType",
               "identifierValue"
            ],
            "type":"object",
            "properties":{
               "identifierType":{
                  "type":"string",
                  "description":"The identifier type"
               },
               "identifierValue":{
                  "type":"string",
                  "description":"The most recent identifier value of that type."
               }
            },
            "description":"PersonIdentifier"
         },
         "PersonalCareNeed":{
            "title":"PersonalCareNeed",
            "type":"object",
            "properties":{
               "commentText":{
                  "type":"string",
                  "description":"Comment Text",
                  "example":"a comment"
               },
               "endDate":{
                  "type":"string",
                  "description":"End Date",
                  "format":"date",
                  "example":"2010-06-21T00:00:00.000+00:00"
               },
               "problemCode":{
                  "type":"string",
                  "description":"Problem Code",
                  "example":"ACCU9"
               },
               "problemDescription":{
                  "type":"string",
                  "description":"Problem Description",
                  "example":"Preg, acc under 9mths"
               },
               "problemStatus":{
                  "type":"string",
                  "description":"Problem Status",
                  "example":"ON"
               },
               "problemType":{
                  "type":"string",
                  "description":"Problem Type",
                  "example":"MATSTAT"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start Date",
                  "format":"date",
                  "example":"2010-06-21T00:00:00.000+00:00"
               }
            },
            "description":"Personal Care Need"
         },
         "PersonalCareNeeds":{
            "title":"PersonalCareNeeds",
            "type":"object",
            "properties":{
               "offenderNo":{
                  "type":"string",
                  "description":"Offender No"
               },
               "personalCareNeeds":{
                  "type":"array",
                  "description":"Personal Care Needs",
                  "items":{
                     "$ref":"#/components/schemas/PersonalCareNeed"
                  }
               }
            },
            "description":"Personal Care Needs"
         },
         "PhysicalAttributes":{
            "title":"PhysicalAttributes",
            "required":[
               "ethnicity",
               "gender",
               "heightCentimetres",
               "heightFeet",
               "heightInches",
               "heightMetres",
               "raceCode",
               "sexCode",
               "weightKilograms",
               "weightPounds"
            ],
            "type":"object",
            "properties":{
               "ethnicity":{
                  "type":"string",
                  "description":"Ethnicity",
                  "example":"White: Eng./Welsh/Scot./N.Irish/British"
               },
               "gender":{
                  "type":"string",
                  "description":"Gender",
                  "example":"Male"
               },
               "heightCentimetres":{
                  "type":"integer",
                  "description":"Height in Centimetres",
                  "format":"int32",
                  "example":176
               },
               "heightFeet":{
                  "type":"integer",
                  "description":"Height in Feet",
                  "format":"int32",
                  "example":5
               },
               "heightInches":{
                  "type":"integer",
                  "description":"Height in Inches",
                  "format":"int32",
                  "example":60
               },
               "heightMetres":{
                  "type":"number",
                  "description":"Height in Metres (to 2dp)",
                  "format":"bigdecimal",
                  "example":1.76
               },
               "raceCode":{
                  "type":"string",
                  "description":"Ethnicity Code",
                  "example":"W1"
               },
               "sexCode":{
                  "type":"string",
                  "description":"Gender Code",
                  "example":"M"
               },
               "weightKilograms":{
                  "type":"integer",
                  "description":"Weight in Kilograms",
                  "format":"int32",
                  "example":67
               },
               "weightPounds":{
                  "type":"integer",
                  "description":"Weight in Pounds",
                  "format":"int32",
                  "example":50
               }
            },
            "description":"Physical Attributes"
         },
         "PhysicalCharacteristic":{
            "title":"PhysicalCharacteristic",
            "required":[
               "characteristic",
               "detail",
               "type"
            ],
            "type":"object",
            "properties":{
               "characteristic":{
                  "type":"string",
                  "description":"Type of physical characteristic"
               },
               "detail":{
                  "type":"string",
                  "description":"Detailed information about the physical characteristic"
               },
               "imageId":{
                  "type":"integer",
                  "description":"Image Id Ref",
                  "format":"int64"
               },
               "type":{
                  "type":"string",
                  "description":"Type code of physical characteristic"
               }
            },
            "description":"Physical Characteristic"
         },
         "PhysicalMark":{
            "title":"PhysicalMark",
            "required":[
               "bodyPart",
               "comment",
               "orientation",
               "side",
               "type"
            ],
            "type":"object",
            "properties":{
               "bodyPart":{
                  "type":"string",
                  "description":"Where on the body"
               },
               "comment":{
                  "type":"string",
                  "description":"More information"
               },
               "imageId":{
                  "type":"integer",
                  "description":"Image Id Ref",
                  "format":"int64"
               },
               "orientation":{
                  "type":"string",
                  "description":"Image orientation"
               },
               "side":{
                  "type":"string",
                  "description":"Left or Right Side"
               },
               "type":{
                  "type":"string",
                  "description":"Type of Mark"
               }
            },
            "description":"Physical Mark"
         },
         "PrisonContactDetail":{
            "title":"PrisonContactDetail",
            "required":[
               "addressType",
               "agencyId",
               "agencyType",
               "city",
               "country",
               "description",
               "formattedDescription",
               "locality",
               "phones",
               "postCode",
               "premise"
            ],
            "type":"object",
            "properties":{
               "addressType":{
                  "type":"string",
                  "description":"Type of address."
               },
               "addresses":{
                  "type":"array",
                  "description":"List of Address details",
                  "items":{
                     "$ref":"#/components/schemas/AddressDto"
                  }
               },
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of agency/prison.",
                  "example":"MDI"
               },
               "agencyType":{
                  "type":"string",
                  "description":"Type of agency.",
                  "example":"INST"
               },
               "city":{
                  "type":"string",
                  "description":"Address city."
               },
               "country":{
                  "type":"string",
                  "description":"Address country."
               },
               "description":{
                  "type":"string",
                  "description":"Agency description.",
                  "example":"MOORLAND (HMP & YOI)"
               },
               "formattedDescription":{
                  "type":"string",
                  "description":"Formatted agency description.",
                  "example":"Moorland (HMP & YOI)"
               },
               "locality":{
                  "type":"string",
                  "description":"Describes the geographic location."
               },
               "phones":{
                  "type":"array",
                  "description":"List of Telephone details",
                  "items":{
                     "$ref":"#/components/schemas/Telephone"
                  }
               },
               "postCode":{
                  "type":"string",
                  "description":"Address postcode."
               },
               "premise":{
                  "type":"string",
                  "description":"The Prison name."
               }
            },
            "description":"Contacts details for agency"
         },
         "PrisonMoveCancellation":{
            "title":"PrisonMoveCancellation",
            "required":[
               "reasonCode"
            ],
            "type":"object",
            "properties":{
               "reasonCode":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"The reason code for cancellation of the move.",
                  "enum":[
                     "ADMI",
                     "OCI",
                     "TRANS"
                  ]
               }
            },
            "description":"Captures what is needed for cancellation of a scheduled prison to prison move."
         },
         "PrisonPeriod":{
            "title":"PrisonPeriod",
            "type":"object",
            "properties":{
               "bookNumber":{
                  "type":"string"
               },
               "bookingId":{
                  "type":"integer",
                  "format":"int64"
               },
               "entryDate":{
                  "type":"string",
                  "format":"date-time"
               },
               "movementDates":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/MovementDate"
                  }
               },
               "releaseDate":{
                  "type":"string",
                  "format":"date-time"
               }
            },
            "description":"A period of time in prison"
         },
         "PrisonToCourtHearing":{
            "title":"PrisonToCourtHearing",
            "required":[
               "courtHearingDateTime",
               "fromPrisonLocation",
               "toCourtLocation"
            ],
            "type":"object",
            "properties":{
               "comments":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Any comments related to the court case.",
                  "example":"Restricted access to parking level."
               },
               "courtHearingDateTime":{
                  "type":"string",
                  "description":"The future date and time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "fromPrisonLocation":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The prison (agency code) where the offender will be moved from.",
                  "example":"LEI"
               },
               "toCourtLocation":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The court (agency code) where the offender will moved to.",
                  "example":"LEEDCC"
               }
            },
            "description":"Represents the data required to schedule a prison to court hearing for an offender."
         },
         "PrisonerDetail":{
            "title":"PrisonerDetail",
            "required":[
               "currentWorkingBirthDate",
               "currentWorkingFirstName",
               "currentWorkingLastName",
               "currentlyInPrison",
               "dateOfBirth",
               "firstName",
               "gender",
               "lastName",
               "offenderNo",
               "sexCode"
            ],
            "type":"object",
            "properties":{
               "birthCountry":{
                  "type":"string",
                  "description":"The prisoner's country of birth.",
                  "example":"Norway"
               },
               "convictedStatus":{
                  "type":"string",
                  "description":"Status code of prisoner's latest conviction.",
                  "example":"Convicted",
                  "enum":[
                     "Convicted",
                     "Remand"
                  ]
               },
               "croNumber":{
                  "type":"string",
                  "description":"The prisoner's CRO (Criminal Records Office) number.",
                  "example":"01/0001/01A"
               },
               "currentWorkingBirthDate":{
                  "type":"string",
                  "description":"The prisoner's current working date of birth (in YYYY-MM-DD format).",
                  "format":"date",
                  "example":"1960-02-29T00:00:00.000+00:00"
               },
               "currentWorkingFirstName":{
                  "type":"string",
                  "description":"The prisoner's current working first name.",
                  "example":"Thorfinn"
               },
               "currentWorkingLastName":{
                  "type":"string",
                  "description":"The prisoner's current working last name.",
                  "example":"Torf-Einarsson"
               },
               "currentlyInPrison":{
                  "type":"string",
                  "description":"Flag (Y or N) to indicate if prisoner is currently in prison.",
                  "example":"N"
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"The prisoner's date of birth (in YYYY-MM-DD format).",
                  "format":"date",
                  "example":"1960-02-29T00:00:00.000+00:00"
               },
               "ethnicity":{
                  "type":"string",
                  "description":"The prisoner's ethnicity.",
                  "example":"White: British"
               },
               "ethnicityCode":{
                  "type":"string",
                  "description":"The prisoner's ethnicity code.",
                  "example":"W1"
               },
               "firstName":{
                  "type":"string",
                  "description":"The prisoner's first name.",
                  "example":"Thorfinn"
               },
               "gender":{
                  "type":"string",
                  "description":"The prisoner's gender.",
                  "example":"Female"
               },
               "imprisonmentStatus":{
                  "type":"string",
                  "description":"The prisoner's imprisonment status.",
                  "example":"LIFE"
               },
               "imprisonmentStatusDesc":{
                  "type":"string",
                  "description":"The prisoner's imprisonment status description.",
                  "example":"Service Life Imprisonment"
               },
               "internalLocation":{
                  "type":"string",
                  "description":"Name of the location where the prisoner resides (if in prison)",
                  "example":"WRI-B-3-018"
               },
               "lastName":{
                  "type":"string",
                  "description":"The prisoner's last name.",
                  "example":"Torf-Einarsson"
               },
               "latestBookingId":{
                  "type":"integer",
                  "description":"ID of prisoner's latest booking.",
                  "format":"int64",
                  "example":1
               },
               "latestLocation":{
                  "type":"string",
                  "description":"Name of the prison where the prisoner resides (if in prison).",
                  "example":"Whitemoor (HMP)"
               },
               "latestLocationId":{
                  "type":"string",
                  "description":"Latest location ID of a prisoner (if in prison).",
                  "example":"WRI"
               },
               "legalStatus":{
                  "type":"string",
                  "description":"Legal Status",
                  "example":"REMAND",
                  "enum":[
                     "CIVIL_PRISONER",
                     "CONVICTED_UNSENTENCED",
                     "DEAD",
                     "IMMIGRATION_DETAINEE",
                     "INDETERMINATE_SENTENCE",
                     "OTHER",
                     "RECALL",
                     "REMAND",
                     "SENTENCED",
                     "UNKNOWN"
                  ]
               },
               "maritalStatus":{
                  "type":"string",
                  "description":"The prisoner's marital status.",
                  "example":"Single"
               },
               "middleNames":{
                  "type":"string",
                  "description":"The prisoner's middle name(s).",
                  "example":"Skull-splitter"
               },
               "nationalities":{
                  "type":"string",
                  "description":"The prisoner's nationality.",
                  "example":"Scottish"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"The prisoner's unique offender number (aka NOMS Number in the UK).",
                  "example":"A0000AA"
               },
               "pncNumber":{
                  "type":"string",
                  "description":"The prisoner's PNC (Police National Computer) number.",
                  "example":"01/000000A"
               },
               "receptionDate":{
                  "type":"string",
                  "description":"Date prisoner was received into the prison.",
                  "format":"date",
                  "example":"1980-01-01T00:00:00.000+00:00"
               },
               "religion":{
                  "type":"string",
                  "description":"The prisoner's religion.",
                  "example":"Pagan"
               },
               "religionCode":{
                  "type":"string",
                  "description":"The prisoner's religion code.",
                  "example":"PAG"
               },
               "sexCode":{
                  "type":"string",
                  "description":"The prisoner's gender code.",
                  "example":"F"
               },
               "suffix":{
                  "type":"string",
                  "description":"The prisoner's name suffix.",
                  "example":"Mac"
               },
               "title":{
                  "type":"string",
                  "description":"The prisoner's title.",
                  "example":"Earl"
               }
            },
            "description":"Prisoner Details"
         },
         "PrisonerDetailSearchCriteria":{
            "title":"PrisonerDetailSearchCriteria",
            "type":"object",
            "properties":{
               "anyMatch":{
                  "type":"boolean",
                  "description":"If <i>true</i>, offenders that match any of the specified criteria will be returned. The default search behaviour is to only return offenders that match <i>all</i> of the specified criteria. If the <i>prioritisedMatch</i> parameter is also set <i>true</i>, this parameter will only impact the behaviour of searching using offender name and date of birth criteria.",
                  "example":false
               },
               "croNumber":{
                  "type":"string",
                  "description":"The offender's CRO (Criminal Records Office) number.",
                  "example":"12312312"
               },
               "dob":{
                  "type":"string",
                  "description":"The offender's date of birth. Cannot be used in conjunction with <i>dobFrom</i> or <i>dobTo</i>. Must be specified using YYYY-MM-DD format.",
                  "format":"date",
                  "example":"2001-01-15T00:00:00.000+00:00"
               },
               "dobFrom":{
                  "type":"string",
                  "description":"Start date for offender date of birth search. If <i>dobTo</i> is not specified, an implicit <i>dobTo</i> value of <i>dobFrom</i> + 10 years will be applied. If <i>dobTo</i> is specified, it will be adjusted, if necessary, to ensure it is not more than 10 years after <i>dobFrom</i>. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
                  "format":"date",
                  "example":"1999-05-25T00:00:00.000+00:00"
               },
               "dobTo":{
                  "type":"string",
                  "description":"End date for offender date of birth search. If <i>dobFrom</i> is not specified, an implicit <i>dobFrom</i> value of <i>dobTo</i> - 10 years will be applied. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
                  "format":"date",
                  "example":"2005-12-31T00:00:00.000+00:00"
               },
               "firstName":{
                  "type":"string",
                  "description":"The first name of the offender.",
                  "example":"John"
               },
               "gender":{
                  "type":"string",
                  "description":"Offender's gender code (F - Female, M - Male, NK - Not Known or NS - Not Specified).",
                  "example":"F",
                  "enum":[
                     "ALL",
                     "F",
                     "M",
                     "NK",
                     "NS"
                  ]
               },
               "includeAliases":{
                  "type":"boolean",
                  "description":"If true the result set should include a row for every matched alias.  If the request includes some combination of firstName, lastName and dateOfBirth then this will be a subset of the OFFENDERS records for one or more offenders. Otherwise it will be every OFFENDERS record for each match on the other search criteria. Default is false.",
                  "example":false
               },
               "lastName":{
                  "type":"string",
                  "description":"The last name of the offender.",
                  "example":"Smith"
               },
               "location":{
                  "type":"string",
                  "description":"Offender's location filter (IN, OUT or ALL) - defaults to ALL.",
                  "example":"ALL",
                  "enum":[
                     "ALL",
                     "IN",
                     "OUT"
                  ]
               },
               "maxYearsRange":{
                  "type":"integer",
                  "description":"Max Date Range, applied to <i>dobFrom</i> or <i>dobTo</i>, default is 10, max allowed is 10",
                  "format":"int32",
                  "example":10
               },
               "middleNames":{
                  "type":"string",
                  "description":"The middle name(s) of the offender.",
                  "example":"James"
               },
               "offenderNos":{
                  "type":"array",
                  "description":"List of offender Numbers (NOMS ID)",
                  "items":{
                     "type":"string"
                  }
               },
               "partialNameMatch":{
                  "type":"boolean",
                  "description":"If <i>true</i>, the search will use partial, start-of-name matching of offender names (where provided). For example, if <i>lastName</i> criteria of 'AD' is specified, this will match an offender whose last name is 'ADAMS' but not an offender whose last name is 'HADAD'. This will typically increase the number of matching offenders found. This parameter can be used with any other search processing parameter (e.g. <i>prioritisedMatch</i> or <i>anyMatch</i>).",
                  "example":false
               },
               "pncNumber":{
                  "type":"string",
                  "description":"The offender's PNC (Police National Computer) number.",
                  "example":"123/1231"
               },
               "prioritisedMatch":{
                  "type":"boolean",
                  "description":"If <i>true</i>, search criteria prioritisation is used and searching/matching will stop as soon as one or more matching offenders are found. The criteria priority is:<br/><br/>1. <i>offenderNo</i><br/> 2. <i>pncNumber</i><br/>3. <i>croNumber</i><br/>4. <i>firstName</i>, <i>lastName</i>, <i>dob</i> <br/>5. <i>dobFrom</i>, <i>dobTo</i><br/><br/>As an example of how this works, if this parameter is set <i>true</i> and an <i>offenderNo</i> is specified and an offender having this offender number is found, searching will stop and that offender will be returned immediately. If no offender matching the specified <i>offenderNo</i> is found, the search will be repeated using the next priority criteria (<i>pncNumber</i>) and so on. Note that offender name and date of birth criteria have the same priority and will be used together to search for matching offenders.",
                  "example":false
               }
            },
            "description":"Prisoner Search Criteria"
         },
         "PrisonerIdentifier":{
            "title":"PrisonerIdentifier",
            "required":[
               "id"
            ],
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"Prisoner Identifier",
                  "example":"A1234AA"
               }
            },
            "description":"Prisoner Identifier"
         },
         "PrisonerInPrisonSummary":{
            "title":"PrisonerInPrisonSummary",
            "required":[
               "prisonerNumber"
            ],
            "type":"object",
            "properties":{
               "prisonPeriod":{
                  "type":"array",
                  "description":"List of date when prisoner was in prison",
                  "items":{
                     "$ref":"#/components/schemas/PrisonPeriod"
                  }
               },
               "prisonerNumber":{
                  "type":"string",
                  "description":"Prisoner Identifier",
                  "example":"A1234AA"
               }
            },
            "description":"Prisoners time in prison summary"
         },
         "PrisonerInformation":{
            "title":"PrisonerInformation",
            "required":[
               "bookingId",
               "communityStatus",
               "dateOfBirth",
               "englishSpeaking",
               "establishmentCode",
               "establishmentName",
               "gender",
               "givenName1",
               "lastName",
               "nomsId"
            ],
            "type":"object",
            "properties":{
               "admissionDate":{
                  "type":"string",
                  "description":"Date of admission into this prison",
                  "format":"date",
                  "example":"2019-06-01T00:00:00.000+00:00"
               },
               "bookingBeginDate":{
                  "type":"string",
                  "description":"Date Prisoner booking was initial made",
                  "format":"date",
                  "example":"2017-05-01T00:00:00.000+00:00"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Booking Id (Internal)",
                  "format":"int64",
                  "example":1231232
               },
               "categoryCode":{
                  "type":"string",
                  "description":"Category of this prisoner",
                  "example":"C"
               },
               "communityStatus":{
                  "type":"string",
                  "description":"Status of prisoner in community",
                  "example":"ACTIVE IN",
                  "enum":[
                     "ACTIVE IN",
                     "ACTIVE OUT"
                  ]
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of Birth",
                  "format":"date",
                  "example":"1970-05-01T00:00:00.000+00:00"
               },
               "englishSpeaking":{
                  "type":"boolean",
                  "description":"Indicated that is English speaking",
                  "example":true
               },
               "establishmentCode":{
                  "type":"string",
                  "description":"Establishment Code for prisoner",
                  "example":"MDI"
               },
               "establishmentName":{
                  "type":"string",
                  "description":"Establishment Name for prisoner",
                  "example":"Moorland"
               },
               "gender":{
                  "type":"string",
                  "description":"Gender",
                  "example":"Male"
               },
               "givenName1":{
                  "type":"string",
                  "description":"Given Name 1",
                  "example":"John"
               },
               "givenName2":{
                  "type":"string",
                  "description":"Given Name 2",
                  "example":"Luke"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"Smith"
               },
               "legalStatus":{
                  "type":"string",
                  "description":"Legal Status",
                  "example":"REMAND",
                  "enum":[
                     "CIVIL_PRISONER",
                     "CONVICTED_UNSENTENCED",
                     "DEAD",
                     "IMMIGRATION_DETAINEE",
                     "INDETERMINATE_SENTENCE",
                     "OTHER",
                     "RECALL",
                     "REMAND",
                     "SENTENCED",
                     "UNKNOWN"
                  ]
               },
               "nomsId":{
                  "type":"string",
                  "description":"Offender Identifier",
                  "example":"A1234AA"
               },
               "releaseDate":{
                  "type":"string",
                  "description":"Confirmed, actual, approved, provisional or calculated release date for offender, according to offender release date algorithm.<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
                  "format":"date",
                  "example":"2021-04-12T00:00:00.000+00:00"
               },
               "requestedName":{
                  "type":"string",
                  "description":"Requested Name",
                  "example":"Dave"
               },
               "unitCode1":{
                  "type":"string",
                  "description":"Level 1 Location Unit Code",
                  "example":"A"
               },
               "unitCode2":{
                  "type":"string",
                  "description":"Level 2 Location Unit Code",
                  "example":"2"
               },
               "unitCode3":{
                  "type":"string",
                  "description":"Level 3 Location Unit Code",
                  "example":"003"
               }
            },
            "description":"Prisoner Information"
         },
         "PrisonerSchedule":{
            "title":"PrisonerSchedule",
            "required":[
               "cellLocation",
               "comment",
               "event",
               "eventDescription",
               "eventLocation",
               "eventStatus",
               "eventType",
               "firstName",
               "lastName",
               "locationId",
               "offenderNo",
               "startTime"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking id for offender",
                  "format":"int64"
               },
               "cellLocation":{
                  "type":"string",
                  "description":"Offender cell"
               },
               "comment":{
                  "maxLength":4000,
                  "minLength":0,
                  "type":"string",
                  "description":"Comment"
               },
               "endTime":{
                  "type":"string",
                  "description":"Date and time at which event ends",
                  "format":"date-time"
               },
               "event":{
                  "type":"string",
                  "description":"Event code"
               },
               "eventDescription":{
                  "type":"string",
                  "description":"Description of event code"
               },
               "eventId":{
                  "type":"integer",
                  "description":"Activity id if any. Used to attend or pay the event",
                  "format":"int64"
               },
               "eventLocation":{
                  "type":"string",
                  "description":"Location of the event"
               },
               "eventLocationId":{
                  "type":"integer",
                  "description":"Id of an internal event location",
                  "format":"int64"
               },
               "eventOutcome":{
                  "type":"string",
                  "description":"Attendance, possible values are the codes in the 'PS_PA_OC' reference domain"
               },
               "eventStatus":{
                  "type":"string",
                  "description":"The event's status. Includes 'CANC', meaning cancelled for 'VISIT'"
               },
               "eventType":{
                  "type":"string",
                  "description":"Event type, e.g. VISIT, APP, PRISON_ACT"
               },
               "excluded":{
                  "type":"boolean",
                  "description":"Activity excluded flag",
                  "example":false
               },
               "firstName":{
                  "type":"string",
                  "description":"Offender first name"
               },
               "lastName":{
                  "type":"string",
                  "description":"Offender last name"
               },
               "locationCode":{
                  "type":"string",
                  "description":"The code for the activity location"
               },
               "locationId":{
                  "type":"integer",
                  "description":"The number which (uniquely) identifies the internal location associated with the Scheduled Event (Prisoner Schedule)",
                  "format":"int64"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number)"
               },
               "outcomeComment":{
                  "type":"string",
                  "description":"No-pay reason"
               },
               "paid":{
                  "type":"boolean",
                  "description":"Activity paid flag",
                  "example":false
               },
               "payRate":{
                  "type":"number",
                  "description":"Amount paid per activity session in pounds",
                  "format":"bigdecimal"
               },
               "performance":{
                  "type":"string",
                  "description":"Possible values are the codes in the 'PERFORMANCE' reference domain"
               },
               "startTime":{
                  "type":"string",
                  "description":"Date and time at which event starts",
                  "format":"date-time"
               },
               "suspended":{
                  "type":"boolean",
                  "description":"Event scheduled has been suspended",
                  "example":false
               },
               "timeSlot":{
                  "type":"string",
                  "description":"Activity time slot",
                  "enum":[
                     "AM",
                     "ED",
                     "PM"
                  ]
               }
            },
            "description":"Prisoner Schedule"
         },
         "PrivilegeDetail":{
            "title":"PrivilegeDetail",
            "required":[
               "agencyId",
               "bookingId",
               "iepDate",
               "iepLevel"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Identifier of Agency this privilege entry is associated with."
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking identifier.",
                  "format":"int64"
               },
               "comments":{
                  "type":"string",
                  "description":"Further details relating to this privilege entry."
               },
               "iepDate":{
                  "type":"string",
                  "description":"Effective date of IEP level.",
                  "format":"date"
               },
               "iepLevel":{
                  "type":"string",
                  "description":"The IEP level (e.g. Basic, Standard or Enhanced)."
               },
               "iepTime":{
                  "type":"string",
                  "description":"Effective date & time of IEP level.",
                  "format":"date-time"
               },
               "userId":{
                  "type":"string",
                  "description":"Identifier of user related to this privilege entry."
               }
            },
            "description":"Incentive & Earned Privilege Details"
         },
         "PrivilegeSummary":{
            "title":"PrivilegeSummary",
            "required":[
               "bookingId",
               "daysSinceReview",
               "iepDate",
               "iepLevel"
            ],
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking identifier.",
                  "format":"int64",
                  "example":112321
               },
               "daysSinceReview":{
                  "type":"integer",
                  "description":"The number of days since last review.",
                  "format":"int32",
                  "example":35
               },
               "iepDate":{
                  "type":"string",
                  "description":"Effective date of current IEP level.",
                  "format":"date",
                  "example":"2019-01-24T00:00:00.000+00:00"
               },
               "iepDetails":{
                  "type":"array",
                  "description":"All IEP detail entries for the offender (most recent first).",
                  "items":{
                     "$ref":"#/components/schemas/PrivilegeDetail"
                  }
               },
               "iepLevel":{
                  "type":"string",
                  "description":"The current IEP level (e.g. Basic, Standard or Enhanced).",
                  "example":"Basic",
                  "enum":[
                     "Basic",
                     "Enhanced",
                     "Standard"
                  ]
               },
               "iepTime":{
                  "type":"string",
                  "description":"Effective date & time of current IEP level.",
                  "format":"date-time"
               }
            },
            "description":"Incentive & Earned Privilege Summary"
         },
         "ProfileInformation":{
            "title":"ProfileInformation",
            "required":[
               "question",
               "resultValue",
               "type"
            ],
            "type":"object",
            "properties":{
               "question":{
                  "type":"string",
                  "description":"Profile Question"
               },
               "resultValue":{
                  "type":"string",
                  "description":"Profile Result Answer"
               },
               "type":{
                  "type":"string",
                  "description":"Type of profile information"
               }
            },
            "description":"Profile Information"
         },
         "PropertyContainer":{
            "title":"PropertyContainer",
            "type":"object",
            "properties":{
               "containerType":{
                  "type":"string",
                  "description":"The type of container",
                  "example":"Valuables"
               },
               "location":{
                  "description":"The location id of the property container",
                  "$ref":"#/components/schemas/Location"
               },
               "sealMark":{
                  "type":"string",
                  "description":"The case sequence number for the offender",
                  "example":"MDI10"
               }
            },
            "description":"Offender property container details"
         },
         "Questionnaire":{
            "title":"Questionnaire",
            "required":[
               "code",
               "questionnaireId",
               "questions"
            ],
            "type":"object",
            "properties":{
               "code":{
                  "type":"string",
                  "description":"Code to identify this questionnaire",
                  "example":"ASSAULTS"
               },
               "questionnaireId":{
                  "type":"integer",
                  "description":"ID internal of this Questionnaire",
                  "format":"int64",
                  "example":123412
               },
               "questions":{
                  "uniqueItems":true,
                  "type":"array",
                  "description":"List of Questions (with Answers) for this Questionnaire",
                  "items":{
                     "$ref":"#/components/schemas/QuestionnaireQuestion"
                  }
               }
            },
            "description":"Questionnaire"
         },
         "QuestionnaireAnswer":{
            "title":"QuestionnaireAnswer",
            "required":[
               "answerActiveFlag",
               "answerDesc",
               "answerExpiryDate",
               "answerListSeq",
               "answerSeq",
               "commentRequiredFlag",
               "dateRequiredFlag",
               "questionnaireAnsId"
            ],
            "type":"object",
            "properties":{
               "answerActiveFlag":{
                  "type":"boolean",
                  "example":true
               },
               "answerDesc":{
                  "type":"string",
                  "example":"YES"
               },
               "answerExpiryDate":{
                  "type":"string",
                  "format":"date-time"
               },
               "answerListSeq":{
                  "type":"integer",
                  "format":"int32",
                  "example":1
               },
               "answerSeq":{
                  "type":"integer",
                  "format":"int32",
                  "example":1
               },
               "commentRequiredFlag":{
                  "type":"boolean",
                  "example":false
               },
               "dateRequiredFlag":{
                  "type":"boolean",
                  "example":false
               },
               "questionnaireAnsId":{
                  "type":"integer",
                  "description":"ID for this Answer",
                  "format":"int64"
               }
            },
            "description":"Questionnaire Answer"
         },
         "QuestionnaireQuestion":{
            "title":"QuestionnaireQuestion",
            "required":[
               "answers",
               "multipleAnswerFlag",
               "nextQuestionnaireQueId",
               "questionActiveFlag",
               "questionDesc",
               "questionExpiryDate",
               "questionListSeq",
               "questionSeq",
               "questionnaireQueId"
            ],
            "type":"object",
            "properties":{
               "answers":{
                  "uniqueItems":true,
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/QuestionnaireAnswer"
                  }
               },
               "multipleAnswerFlag":{
                  "type":"boolean",
                  "example":false
               },
               "nextQuestionnaireQueId":{
                  "type":"integer",
                  "format":"int64"
               },
               "questionActiveFlag":{
                  "type":"boolean",
                  "example":false
               },
               "questionDesc":{
                  "type":"string"
               },
               "questionExpiryDate":{
                  "type":"string",
                  "format":"date-time"
               },
               "questionListSeq":{
                  "type":"integer",
                  "format":"int32"
               },
               "questionSeq":{
                  "type":"integer",
                  "format":"int32"
               },
               "questionnaireQueId":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "description":"Questionnaire Question"
         },
         "ReasonableAdjustment":{
            "title":"ReasonableAdjustment",
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"The agency id where the adjustment was created",
                  "example":"LEI"
               },
               "commentText":{
                  "type":"string",
                  "description":"Comment Text",
                  "example":"abcd"
               },
               "endDate":{
                  "type":"string",
                  "description":"End Date",
                  "format":"date",
                  "example":"2010-06-21T00:00:00.000+00:00"
               },
               "startDate":{
                  "type":"string",
                  "description":"Start Date",
                  "format":"date",
                  "example":"2010-06-21T00:00:00.000+00:00"
               },
               "treatmentCode":{
                  "type":"string",
                  "description":"Treatment Code",
                  "example":"WHEELCHR_ACC"
               },
               "treatmentDescription":{
                  "type":"string",
                  "description":"Treatment Description",
                  "example":"Wheelchair accessibility"
               }
            },
            "description":"Reasonable Adjustment"
         },
         "ReasonableAdjustments":{
            "title":"ReasonableAdjustments",
            "type":"object",
            "properties":{
               "reasonableAdjustments":{
                  "type":"array",
                  "description":"Reasonable Adjustments",
                  "items":{
                     "$ref":"#/components/schemas/ReasonableAdjustment"
                  }
               }
            },
            "description":"Reasonable Adjustments"
         },
         "ReferenceCode":{
            "title":"ReferenceCode",
            "required":[
               "activeFlag",
               "code",
               "description",
               "domain"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "maxLength":1,
                  "minLength":0,
                  "pattern":"[N|Y]",
                  "type":"string",
                  "description":"Reference data item active indicator flag.",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               },
               "code":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Reference data item code.",
                  "example":"MISC"
               },
               "description":{
                  "maxLength":40,
                  "minLength":0,
                  "type":"string",
                  "description":"Reference data item description.",
                  "example":"Some description"
               },
               "domain":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Reference data item domain.",
                  "example":"TASK_TYPE"
               },
               "expiredDate":{
                  "type":"string",
                  "description":"Expired Date",
                  "format":"date",
                  "example":"2018-03-09T00:00:00.000+00:00"
               },
               "listSeq":{
                  "type":"integer",
                  "description":"List Sequence",
                  "format":"int32",
                  "example":1
               },
               "parentCode":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Parent reference data item code.",
                  "example":"MIGRATION"
               },
               "parentDomain":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Parent reference data item domain.",
                  "example":"TASK_TYPE"
               },
               "subCodes":{
                  "type":"array",
                  "description":"List of subordinate reference data items associated with this reference data item.",
                  "items":{
                     "$ref":"#/components/schemas/ReferenceCode"
                  }
               },
               "systemDataFlag":{
                  "maxLength":1,
                  "minLength":0,
                  "pattern":"[N|Y]",
                  "type":"string",
                  "description":"System Data Flag",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               }
            },
            "description":"Reference Code"
         },
         "ReferenceCodeInfo":{
            "title":"ReferenceCodeInfo",
            "required":[
               "activeFlag",
               "description"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "maxLength":1,
                  "minLength":0,
                  "pattern":"[N|Y]",
                  "type":"string",
                  "description":"Reference data item active indicator flag.",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               },
               "description":{
                  "maxLength":40,
                  "minLength":0,
                  "type":"string",
                  "description":"Reference data item description.",
                  "example":"Some description"
               },
               "expiredDate":{
                  "type":"string",
                  "description":"Expired Date",
                  "format":"date",
                  "example":"2018-03-09T00:00:00.000+00:00"
               },
               "listSeq":{
                  "type":"integer",
                  "description":"List Sequence",
                  "format":"int32",
                  "example":1
               },
               "parentCode":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Parent reference data item code.",
                  "example":"MIGRATION"
               },
               "parentDomain":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Parent reference data item domain.",
                  "example":"TASK_TYPE"
               },
               "systemDataFlag":{
                  "maxLength":1,
                  "minLength":0,
                  "pattern":"[N|Y]",
                  "type":"string",
                  "description":"System Data Flag",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               }
            },
            "description":"Reference Code Data"
         },
         "RelatedTransactionDetails":{
            "title":"RelatedTransactionDetails",
            "type":"object",
            "properties":{
               "bonusPay":{
                  "type":"integer",
                  "description":"Bonus payment in pence",
                  "format":"int64",
                  "example":55
               },
               "calendarDate":{
                  "type":"string",
                  "description":"Calendar date the payment was processed",
                  "format":"date",
                  "example":"2020-10-12T00:00:00.000+00:00"
               },
               "currentBalance":{
                  "type":"integer",
                  "description":"Balance at a point in time",
                  "format":"int64"
               },
               "eventId":{
                  "type":"integer",
                  "description":"Event id the payment is associated with",
                  "format":"int64",
                  "example":1
               },
               "id":{
                  "type":"integer",
                  "description":"Transaction details id",
                  "format":"int64",
                  "example":1
               },
               "payAmount":{
                  "type":"integer",
                  "description":"Payment amount in pence",
                  "format":"int64",
                  "example":100
               },
               "payTypeCode":{
                  "type":"string",
                  "description":"Pay type code",
                  "example":"UNEMPLOYED,SESSION,LTSICK,STSICK,MATERNAL,RETIRED,HOSPITAL"
               },
               "paymentDescription":{
                  "type":"string",
                  "description":"Reason for payment",
                  "example":"Cleaner HB1 PM"
               },
               "pieceWork":{
                  "type":"integer",
                  "description":"Piece work amount in pence",
                  "format":"int64",
                  "example":250
               },
               "transactionEntrySequence":{
                  "type":"integer",
                  "description":"Transaction Sequence",
                  "format":"int64",
                  "example":1
               },
               "transactionId":{
                  "type":"integer",
                  "description":"Transaction Id",
                  "format":"int64",
                  "example":1
               }
            },
            "description":"Offender transaction drill down details"
         },
         "ReleaseEvent":{
            "title":"ReleaseEvent",
            "required":[
               "approvedReleaseDate",
               "bookingActiveFlag",
               "bookingInOutStatus",
               "commentText",
               "createDateTime",
               "eventClass",
               "eventId",
               "eventStatus",
               "fromAgency",
               "fromAgencyDescription",
               "movementReasonCode",
               "movementReasonDescription",
               "movementTypeCode",
               "movementTypeDescription",
               "offenderNo",
               "releaseDate"
            ],
            "type":"object",
            "properties":{
               "approvedReleaseDate":{
                  "type":"string",
                  "description":"The approved release date",
                  "format":"date",
                  "example":"2019-12-01T00:00:00.000+00:00"
               },
               "bookingActiveFlag":{
                  "type":"boolean",
                  "description":"The booking active flag",
                  "example":true
               },
               "bookingInOutStatus":{
                  "type":"string",
                  "description":"The booking in or out status - either IN or OUT",
                  "example":"OUT"
               },
               "commentText":{
                  "type":"string",
                  "description":"Any comment text entered against this event",
                  "example":"Notes relating to this release"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "eventClass":{
                  "type":"string",
                  "description":"The event class - usually EXT_MOV",
                  "example":"EXT_MOV"
               },
               "eventId":{
                  "type":"integer",
                  "description":"The internal event ID",
                  "format":"int64",
                  "example":1234556
               },
               "eventStatus":{
                  "type":"string",
                  "description":"The event status - either SCH (scheduled) or COMP (completed)",
                  "example":"SCH"
               },
               "fromAgency":{
                  "type":"string",
                  "description":"The agency code from which the release will be made",
                  "example":"LEI"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"The agency description",
                  "example":"HMP LEEDS"
               },
               "movementReasonCode":{
                  "type":"string",
                  "description":"The movement reason code - from OFFENDER_IND_SCHEDULE",
                  "example":"DD"
               },
               "movementReasonDescription":{
                  "type":"string",
                  "description":"The movement reason description from reference data",
                  "example":"Release"
               },
               "movementTypeCode":{
                  "type":"string",
                  "description":"The movement type code - from OFFENDER_IND_SCHEDULE",
                  "example":"REL"
               },
               "movementTypeDescription":{
                  "type":"string",
                  "description":"The movement type description from reference data",
                  "example":"Release at end of sentence"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (NOMS ID)",
                  "example":"G3878UK"
               },
               "releaseDate":{
                  "type":"string",
                  "description":"The planned release date",
                  "format":"date",
                  "example":"2019-12-01T00:00:00.000+00:00"
               }
            },
            "description":"Summary data for a scheduled offender release"
         },
         "Repeat":{
            "title":"Repeat",
            "required":[
               "count",
               "repeatPeriod"
            ],
            "type":"object",
            "properties":{
               "count":{
                  "type":"integer",
                  "description":"The total number of appointments. Must be greater than 0",
                  "format":"int32"
               },
               "repeatPeriod":{
                  "type":"string",
                  "description":"The period at which the appointment should repeat.",
                  "example":"WEEKLY",
                  "enum":[
                     "DAILY",
                     "FORTNIGHTLY",
                     "MONTHLY",
                     "WEEKDAYS",
                     "WEEKLY"
                  ]
               }
            }
         },
         "RequestForNewBooking":{
            "title":"RequestForNewBooking",
            "required":[
               "bookingInTime"
            ],
            "type":"object",
            "properties":{
               "bookingInTime":{
                  "type":"string",
                  "description":"The time the booking in occurred, if not supplied it will be the current time",
                  "format":"date-time"
               },
               "cellLocation":{
                  "type":"string",
                  "description":"Cell location where recalled prisoner should be housed, default will be reception",
                  "example":"MDI-RECP"
               },
               "fromLocationId":{
                  "type":"string",
                  "description":"Where the prisoner has moved from (default OUT)",
                  "example":"OUT"
               },
               "imprisonmentStatus":{
                  "type":"string",
                  "description":"Require imprisonment status (e.g Adult Imprisonment Without Option CJA03)",
                  "example":"SENT03"
               },
               "movementReasonCode":{
                  "type":"string",
                  "description":"Reason for in movement (e.g. Unconvicted Remand)",
                  "example":"N"
               },
               "prisonId":{
                  "type":"string",
                  "description":"Received Prison ID",
                  "example":"MDI"
               },
               "youthOffender":{
                  "type":"boolean",
                  "description":"Is this offender a youth",
                  "example":false
               }
            },
            "description":"Represents the data required receiving a prisoner under a new booking"
         },
         "RequestMoveToCellSwap":{
            "title":"RequestMoveToCellSwap",
            "type":"object",
            "properties":{
               "dateTime":{
                  "type":"string",
                  "description":"The date / time of the move (defaults to current)",
                  "format":"date-time"
               },
               "reasonCode":{
                  "type":"string",
                  "description":"The reason code for the move (from reason code domain CHG_HOUS_RSN) (defaults to ADM)",
                  "example":"ADM"
               }
            },
            "description":"Request move offender to cell swap"
         },
         "RequestToCreate":{
            "title":"RequestToCreate",
            "required":[
               "dateOfBirth",
               "firstName",
               "gender",
               "lastName"
            ],
            "type":"object",
            "properties":{
               "croNumber":{
                  "maxLength":20,
                  "minLength":0,
                  "type":"string",
                  "description":"The offender's CRO (Criminal Records Office) number."
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"The offender's date of birth. Must be specified in YYYY-MM-DD format. Range allowed is 16-110 years",
                  "format":"date",
                  "example":"1970-01-01T00:00:00.000+00:00"
               },
               "ethnicity":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"A code representing the offender's ethnicity (from the ETHNICITY reference domain).",
                  "example":"W1",
                  "enum":[
                     "A9",
                     "B1",
                     "B2",
                     "B9",
                     "M1",
                     "M2",
                     "M3",
                     "M9",
                     "NS",
                     "O1",
                     "O2",
                     "O9",
                     "W1",
                     "W2",
                     "W3",
                     "W8",
                     "W9"
                  ]
               },
               "firstName":{
                  "maxLength":35,
                  "minLength":0,
                  "pattern":"^[A-Z|a-z ,.'-]+$",
                  "type":"string",
                  "description":"The offender's first name.",
                  "example":"John"
               },
               "gender":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"A code representing the offender's gender (from the SEX reference domain).",
                  "example":"M",
                  "enum":[
                     "F",
                     "M",
                     "NK",
                     "NS",
                     "REF"
                  ]
               },
               "lastName":{
                  "maxLength":35,
                  "minLength":0,
                  "pattern":"^[A-Z|a-z ,.'-]+$",
                  "type":"string",
                  "description":"The offender's last name.",
                  "example":"Mark"
               },
               "middleName1":{
                  "maxLength":35,
                  "minLength":0,
                  "pattern":"^[A-Z|a-z ,.'-]+$",
                  "type":"string",
                  "description":"The offender's middle name.",
                  "example":"Luke"
               },
               "middleName2":{
                  "maxLength":35,
                  "minLength":0,
                  "pattern":"^[A-Z|a-z ,.'-]+$",
                  "type":"string",
                  "description":"An additional middle name for the offender.",
                  "example":"Matthew"
               },
               "pncNumber":{
                  "maxLength":20,
                  "minLength":0,
                  "pattern":"^^([0-9]{2}|[0-9]{4})/[0-9]+[a-zA-Z]$",
                  "type":"string",
                  "description":"The offender's PNC (Police National Computer) number.",
                  "example":"03/11999M"
               },
               "suffix":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"A code representing a suffix to apply to offender's name (from SUFFIX reference domain).",
                  "example":"JR",
                  "enum":[
                     "I",
                     "II",
                     "III",
                     "IV",
                     "IX",
                     "JR",
                     "SR",
                     "V",
                     "VI",
                     "VII",
                     "VIII"
                  ]
               },
               "title":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"A code representing the offender's title (from TITLE reference domain).",
                  "example":"MR",
                  "enum":[
                     "BR",
                     "DAME",
                     "DR",
                     "FR",
                     "IMAM",
                     "LADY",
                     "LORD",
                     "MISS",
                     "MR",
                     "MRS",
                     "MS",
                     "RABBI",
                     "REV",
                     "SIR",
                     "SR"
                  ]
               }
            },
            "description":"Represents the data required for creating a new prisoner"
         },
         "RequestToCreateAgency":{
            "title":"RequestToCreateAgency",
            "required":[
               "agencyId",
               "agencyType",
               "courtType",
               "description"
            ],
            "type":"object",
            "properties":{
               "active":{
                  "type":"boolean",
                  "description":"Indicates the Agency is active",
                  "example":true
               },
               "agencyId":{
                  "pattern":"^[a-zA-Z0-9]+$",
                  "type":"string",
                  "description":"Agency identifier.",
                  "example":"MDI"
               },
               "agencyType":{
                  "pattern":"^[a-zA-Z0-9]+$",
                  "type":"string",
                  "description":"Agency type.  Reference domain is AGY_LOC_TYPE",
                  "example":"INST",
                  "enum":[
                     "AIRPORT",
                     "APPR",
                     "COMM",
                     "CRC",
                     "CRT",
                     "HOSPITAL",
                     "HOST",
                     "HSHOSP",
                     "IMDC",
                     "INST",
                     "OUT",
                     "PAR",
                     "PECS",
                     "PNP",
                     "POLICE",
                     "POLSTN",
                     "PSY",
                     "SCH",
                     "STC",
                     "TRN",
                     "YOT"
                  ]
               },
               "courtType":{
                  "pattern":"^[a-zA-Z0-9]+$",
                  "type":"string",
                  "description":"Court Type.  Reference domain is JURISDICTION",
                  "example":"CC",
                  "enum":[
                     "CACD",
                     "CB",
                     "CC",
                     "CO",
                     "DCM",
                     "GCM",
                     "IMM",
                     "MC",
                     "OTHER",
                     "YC"
                  ]
               },
               "description":{
                  "type":"string",
                  "description":"Agency description.",
                  "example":"Moorland (HMP & YOI)"
               },
               "longDescription":{
                  "type":"string",
                  "description":"Long description of the agency",
                  "example":"Moorland (HMP & YOI)"
               }
            },
            "description":"Create Agency Request"
         },
         "RequestToDischargePrisoner":{
            "title":"RequestToDischargePrisoner",
            "required":[
               "dischargeTime"
            ],
            "type":"object",
            "properties":{
               "commentText":{
                  "type":"string",
                  "description":"Additional comments about the release",
                  "example":"Prisoner was released on bail"
               },
               "dischargeTime":{
                  "type":"string",
                  "description":"The time the release occurred, if not supplied it will be the current time",
                  "format":"date-time"
               },
               "fromLocationId":{
                  "type":"string",
                  "description":"Where the prisoner has moved from e.g. court, can be null if prisoner is already in prison",
                  "example":"SHEFCC"
               },
               "hospitalLocationCode":{
                  "type":"string",
                  "description":"Agency Location code for hospital, agency type is HSHOSP",
                  "example":"HAZLWD"
               },
               "supportingPrisonId":{
                  "type":"string",
                  "description":"Supporting Prison for POM, can be null if prisoner is already in a prison",
                  "example":"MDI"
               }
            },
            "description":"Request release of prisoner"
         },
         "RequestToRecall":{
            "title":"RequestToRecall",
            "required":[
               "recallTime"
            ],
            "type":"object",
            "properties":{
               "cellLocation":{
                  "type":"string",
                  "description":"Cell location where recalled prisoner should be housed, default will be reception",
                  "example":"MDI-RECP"
               },
               "fromLocationId":{
                  "type":"string",
                  "description":"Where the prisoner has been recalled from (default OUT)",
                  "example":"OUT"
               },
               "imprisonmentStatus":{
                  "type":"string",
                  "description":"Require imprisonment status",
                  "example":"CUR_ORA"
               },
               "movementReasonCode":{
                  "type":"string",
                  "description":"Reason for in movement (e.g. Recall from Intermittent Custody)",
                  "example":"24"
               },
               "prisonId":{
                  "type":"string",
                  "description":"Prison ID where recalled to",
                  "example":"MDI"
               },
               "recallTime":{
                  "type":"string",
                  "description":"The time the recall occurred, if not supplied it will be the current time",
                  "format":"date-time"
               },
               "youthOffender":{
                  "type":"boolean",
                  "description":"Is this offender a youth",
                  "example":false
               }
            },
            "description":"Represents the data required for recalling a prisoner"
         },
         "RequestToReleasePrisoner":{
            "title":"RequestToReleasePrisoner",
            "required":[
               "releaseTime"
            ],
            "type":"object",
            "properties":{
               "commentText":{
                  "type":"string",
                  "description":"Additional comments about the release",
                  "example":"Prisoner was released on bail"
               },
               "movementReasonCode":{
                  "type":"string",
                  "description":"Reason code for the release, reference domain is MOVE_RSN",
                  "example":"CR",
                  "enum":[
                     "AR",
                     "AU",
                     "BD",
                     "BL",
                     "CE",
                     "CR",
                     "D1",
                     "D2",
                     "D3",
                     "D4",
                     "D5",
                     "D6",
                     "DA",
                     "DD",
                     "DE",
                     "DEC",
                     "DL",
                     "DS",
                     "ER",
                     "ESCP",
                     "ETR",
                     "EX",
                     "HC",
                     "HD",
                     "HE",
                     "HP",
                     "HR",
                     "HU",
                     "IF",
                     "MRG",
                     "NCS",
                     "NG",
                     "NP",
                     "PD",
                     "PF",
                     "PX",
                     "RE",
                     "RW",
                     "SC",
                     "UAL"
                  ]
               },
               "releaseTime":{
                  "type":"string",
                  "description":"The time the release occurred, if not supplied it will be the current time",
                  "format":"date-time"
               },
               "toLocationCode":{
                  "type":"string",
                  "description":"Agency Location code where prisoner is released to, default is OUT",
                  "example":"OUT"
               }
            },
            "description":"Request release of prisoner"
         },
         "RequestToTransferIn":{
            "title":"RequestToTransferIn",
            "required":[
               "receiveTime"
            ],
            "type":"object",
            "properties":{
               "cellLocation":{
                  "type":"string",
                  "description":"Cell location",
                  "example":"MDI-RECP"
               },
               "commentText":{
                  "type":"string",
                  "description":"Additional comments about the release",
                  "example":"Prisoner was transferred to a new prison"
               },
               "receiveTime":{
                  "type":"string",
                  "description":"The time the movement occurred, if not supplied it will be the current time",
                  "format":"date-time"
               }
            },
            "description":"Represents the data required for receiving a prisoner transfer"
         },
         "RequestToTransferOut":{
            "title":"RequestToTransferOut",
            "required":[
               "escortType",
               "movementTime",
               "toLocation"
            ],
            "type":"object",
            "properties":{
               "commentText":{
                  "type":"string",
                  "description":"Additional comments about the release",
                  "example":"Prisoner was transferred to a new prison"
               },
               "escortType":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"The escort type of the move.",
                  "example":"PECS"
               },
               "movementTime":{
                  "type":"string",
                  "description":"The time the movement occurred, if not supplied it will be the current time",
                  "format":"date-time"
               },
               "toLocation":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The location to be moved to.",
                  "example":"PVI"
               },
               "transferReasonCode":{
                  "type":"string",
                  "description":"Reason code for the transfer, reference domain is MOVE_RSN",
                  "example":"NOTR"
               }
            },
            "description":"Represents the data required for transferring a prisoner to a new location"
         },
         "RequestToUpdateAddress":{
            "title":"RequestToUpdateAddress",
            "required":[
               "addressType",
               "noFixedAddress",
               "primary"
            ],
            "type":"object",
            "properties":{
               "addressType":{
                  "type":"string",
                  "description":"Address Type",
                  "example":"BUS"
               },
               "comment":{
                  "type":"string",
                  "description":"Comment",
                  "example":"This is a comment text"
               },
               "country":{
                  "type":"string",
                  "description":"Country",
                  "example":"ENG"
               },
               "county":{
                  "type":"string",
                  "description":"County",
                  "example":"HEREFORD"
               },
               "endDate":{
                  "type":"string",
                  "description":"Date ended",
                  "format":"date",
                  "example":"2021-02-12T00:00:00.000+00:00"
               },
               "flat":{
                  "type":"string",
                  "description":"Flat",
                  "example":"3B"
               },
               "locality":{
                  "type":"string",
                  "description":"Locality",
                  "example":"Brincliffe"
               },
               "noFixedAddress":{
                  "type":"boolean",
                  "description":"No Fixed Address",
                  "example":false
               },
               "postalCode":{
                  "type":"string",
                  "description":"Postal Code",
                  "example":"LI1 5TH"
               },
               "premise":{
                  "type":"string",
                  "description":"Premise",
                  "example":"Liverpool Prison"
               },
               "primary":{
                  "type":"boolean",
                  "description":"Primary Address",
                  "example":false
               },
               "startDate":{
                  "type":"string",
                  "description":"Date Added",
                  "format":"date",
                  "example":"2005-05-12T00:00:00.000+00:00"
               },
               "street":{
                  "type":"string",
                  "description":"Street",
                  "example":"Slinn Street"
               },
               "town":{
                  "type":"string",
                  "description":"Town/City",
                  "example":"Liverpool"
               }
            },
            "description":"Update Address Request"
         },
         "RequestToUpdateAgency":{
            "title":"RequestToUpdateAgency",
            "required":[
               "agencyType",
               "courtType",
               "description"
            ],
            "type":"object",
            "properties":{
               "active":{
                  "type":"boolean",
                  "description":"Indicates the Agency is active",
                  "example":true
               },
               "agencyType":{
                  "pattern":"^[a-zA-Z0-9]+$",
                  "type":"string",
                  "description":"Agency type.  Reference domain is AGY_LOC_TYPE",
                  "example":"INST",
                  "enum":[
                     "AIRPORT",
                     "APPR",
                     "COMM",
                     "CRC",
                     "CRT",
                     "HOSPITAL",
                     "HOST",
                     "HSHOSP",
                     "IMDC",
                     "INST",
                     "OUT",
                     "PAR",
                     "PECS",
                     "PNP",
                     "POLICE",
                     "POLSTN",
                     "PSY",
                     "SCH",
                     "STC",
                     "TRN",
                     "YOT"
                  ]
               },
               "courtType":{
                  "pattern":"^[a-zA-Z0-9]+$",
                  "type":"string",
                  "description":"Court Type.  Reference domain is JURISDICTION",
                  "example":"CC",
                  "enum":[
                     "CACD",
                     "CB",
                     "CC",
                     "CO",
                     "DCM",
                     "GCM",
                     "IMM",
                     "MC",
                     "OTHER",
                     "YC"
                  ]
               },
               "description":{
                  "type":"string",
                  "description":"Agency description.",
                  "example":"Moorland (HMP & YOI)"
               },
               "longDescription":{
                  "type":"string",
                  "description":"Long description of the agency",
                  "example":"Moorland (HMP & YOI)"
               }
            },
            "description":"Update Agency Request"
         },
         "RequestToUpdatePhone":{
            "title":"RequestToUpdatePhone",
            "required":[
               "number",
               "type"
            ],
            "type":"object",
            "properties":{
               "ext":{
                  "type":"string",
                  "description":"Telephone extension number"
               },
               "number":{
                  "type":"string",
                  "description":"Telephone number"
               },
               "type":{
                  "type":"string",
                  "description":"Telephone type"
               }
            },
            "description":"Update Phone Request"
         },
         "RollCount":{
            "title":"RollCount",
            "required":[
               "availablePhysical",
               "bedsInUse",
               "currentlyInCell",
               "currentlyOut",
               "livingUnitDesc",
               "livingUnitId",
               "maximumCapacity",
               "netVacancies",
               "operationalCapacity",
               "outOfOrder"
            ],
            "type":"object",
            "properties":{
               "availablePhysical":{
                  "type":"integer",
                  "description":"All empty beds",
                  "format":"int32"
               },
               "bedsInUse":{
                  "type":"integer",
                  "description":"No of residential prisoners",
                  "format":"int32"
               },
               "currentlyInCell":{
                  "type":"integer",
                  "description":"No of residential prisoners actually in",
                  "format":"int32"
               },
               "currentlyOut":{
                  "type":"integer",
                  "description":"No of residential prisoners out",
                  "format":"int32"
               },
               "livingUnitDesc":{
                  "type":"string",
                  "description":"Wing, houseblock etc. name"
               },
               "livingUnitId":{
                  "type":"integer",
                  "description":"Id of location",
                  "format":"int64"
               },
               "maximumCapacity":{
                  "type":"integer",
                  "description":"Total capacity including unavailable cells",
                  "format":"int32"
               },
               "netVacancies":{
                  "type":"integer",
                  "description":"Available empty beds",
                  "format":"int32"
               },
               "operationalCapacity":{
                  "type":"integer",
                  "description":"Total capacity not including unavailable cells",
                  "format":"int32"
               },
               "outOfOrder":{
                  "type":"integer",
                  "description":"No of unavailable cells",
                  "format":"int32"
               }
            },
            "description":"Establishment roll count numbers for a housing block, wing, or reception etc."
         },
         "Sanction":{
            "title":"Sanction",
            "type":"object",
            "properties":{
               "comment":{
                  "type":"string",
                  "description":"Comment",
                  "example":"14x LOTV, 14x LOGYM, 14x LOC, 14x LOA, 14x LOE 50%, 14x CC"
               },
               "compensationAmount":{
                  "type":"integer",
                  "description":"Compensation Amount",
                  "format":"int64",
                  "example":50
               },
               "consecutiveSanctionSeq":{
                  "type":"integer",
                  "description":"Consecutive Sanction Seq",
                  "format":"int64",
                  "example":1
               },
               "effectiveDate":{
                  "type":"string",
                  "description":"Effective",
                  "format":"date-time"
               },
               "sanctionDays":{
                  "type":"integer",
                  "description":"Sanction Days",
                  "format":"int64",
                  "example":14
               },
               "sanctionMonths":{
                  "type":"integer",
                  "description":"Sanction Months",
                  "format":"int64",
                  "example":1
               },
               "sanctionSeq":{
                  "type":"integer",
                  "description":"Sanction Seq",
                  "format":"int64",
                  "example":1
               },
               "sanctionType":{
                  "type":"string",
                  "description":"Sanction Type",
                  "example":"Stoppage of Earnings (amount)"
               },
               "status":{
                  "type":"string",
                  "description":"Sanction status",
                  "example":"Immediate"
               },
               "statusDate":{
                  "type":"string",
                  "description":"Status Date",
                  "format":"date-time"
               }
            },
            "description":"An Adjudication Sanction"
         },
         "SchedulePrisonToPrisonMove":{
            "title":"SchedulePrisonToPrisonMove",
            "required":[
               "escortType",
               "fromPrisonLocation",
               "scheduledMoveDateTime",
               "toPrisonLocation"
            ],
            "type":"object",
            "properties":{
               "escortType":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"The escort type of the move.",
                  "example":"PECS"
               },
               "fromPrisonLocation":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The prison (agency code) to be moved from.",
                  "example":"LEI"
               },
               "scheduledMoveDateTime":{
                  "type":"string",
                  "description":"The date and time of the move in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "toPrisonLocation":{
                  "maxLength":6,
                  "minLength":0,
                  "type":"string",
                  "description":"The prison (agency code) to be moved to.",
                  "example":"PVI"
               }
            },
            "description":"Represents the data required for scheduling a prison to prison move."
         },
         "ScheduledAppointmentDto":{
            "title":"ScheduledAppointmentDto",
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"Agency the appointment belongs to"
               },
               "appointmentTypeCode":{
                  "type":"string",
                  "description":"Appointment code"
               },
               "appointmentTypeDescription":{
                  "type":"string",
                  "description":"Description of appointment type"
               },
               "createUserId":{
                  "type":"string",
                  "description":"Staff member who created the appointment"
               },
               "date":{
                  "type":"string",
                  "description":"Date the appointment is scheduled",
                  "format":"date"
               },
               "endTime":{
                  "type":"string",
                  "description":"Date and time at which appointment ends",
                  "format":"date-time"
               },
               "firstName":{
                  "type":"string",
                  "description":"Offender first name"
               },
               "id":{
                  "type":"integer",
                  "description":"Appointment id",
                  "format":"int64"
               },
               "lastName":{
                  "type":"string",
                  "description":"Offender last name"
               },
               "locationDescription":{
                  "type":"string",
                  "description":"Description of location the appointment is held"
               },
               "locationId":{
                  "type":"integer",
                  "description":"Id of location the appointment is held",
                  "format":"int64"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number (e.g. NOMS Number)"
               },
               "startTime":{
                  "type":"string",
                  "description":"Date and time at which appointment starts",
                  "format":"date-time"
               }
            },
            "description":"Scheduled appointment"
         },
         "ScheduledEvent":{
            "title":"ScheduledEvent",
            "required":[
               "bookingId",
               "eventClass",
               "eventDate",
               "eventSource",
               "eventStatus",
               "eventSubType",
               "eventSubTypeDesc",
               "eventType",
               "eventTypeDesc"
            ],
            "type":"object",
            "properties":{
               "agencyId":{
                  "type":"string",
                  "description":"The agency ID for the booked internal location",
                  "example":"WWI"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id",
                  "format":"int64"
               },
               "createUserId":{
                  "type":"string",
                  "description":"Staff member who created the appointment"
               },
               "endTime":{
                  "type":"string",
                  "description":"Date and time at which event ends",
                  "format":"date-time"
               },
               "eventClass":{
                  "type":"string",
                  "description":"Class of event"
               },
               "eventDate":{
                  "type":"string",
                  "description":"Date on which event occurs",
                  "format":"date"
               },
               "eventId":{
                  "type":"integer",
                  "description":"Activity id if any. Used to attend or pay an activity.",
                  "format":"int64"
               },
               "eventLocation":{
                  "type":"string",
                  "description":"Location at which event takes place (could be an internal location, agency or external address)."
               },
               "eventLocationId":{
                  "type":"integer",
                  "description":"Id of an internal event location",
                  "format":"int64"
               },
               "eventOutcome":{
                  "type":"string",
                  "description":"Activity attendance, possible values are the codes in the 'PS_PA_OC' reference domain."
               },
               "eventSource":{
                  "type":"string",
                  "description":"Code identifying underlying source of event data"
               },
               "eventSourceCode":{
                  "type":"string",
                  "description":"Source-specific code for the type or nature of the event"
               },
               "eventSourceDesc":{
                  "type":"string",
                  "description":"Source-specific description for type or nature of the event"
               },
               "eventStatus":{
                  "type":"string",
                  "description":"Status of event"
               },
               "eventSubType":{
                  "type":"string",
                  "description":"Sub type (or reason) of scheduled event (as a code)"
               },
               "eventSubTypeDesc":{
                  "type":"string",
                  "description":"Description of scheduled event sub type"
               },
               "eventType":{
                  "type":"string",
                  "description":"Type of scheduled event (as a code)"
               },
               "eventTypeDesc":{
                  "type":"string",
                  "description":"Description of scheduled event type"
               },
               "locationCode":{
                  "type":"string",
                  "description":"The code for the activity location"
               },
               "outcomeComment":{
                  "type":"string",
                  "description":"Activity no-pay reason."
               },
               "paid":{
                  "type":"boolean",
                  "description":"Activity paid flag.",
                  "example":false
               },
               "payRate":{
                  "type":"number",
                  "description":"Amount paid per activity session in pounds",
                  "format":"bigdecimal"
               },
               "performance":{
                  "type":"string",
                  "description":"Activity performance, possible values are the codes in the 'PERFORMANCE' reference domain."
               },
               "startTime":{
                  "type":"string",
                  "description":"Date and time at which event starts",
                  "format":"date-time"
               }
            },
            "description":"Scheduled Event"
         },
         "ScheduledPrisonToPrisonMove":{
            "title":"ScheduledPrisonToPrisonMove",
            "type":"object",
            "properties":{
               "fromPrisonLocation":{
                  "description":"The location of the prison to move from.",
                  "$ref":"#/components/schemas/Agency",
                  "example":"PVI"
               },
               "id":{
                  "type":"integer",
                  "description":"The identifier for the scheduled prison to prison move.",
                  "format":"int64",
                  "example":123456789
               },
               "scheduledMoveDateTime":{
                  "type":"string",
                  "description":"The date and start time of the move in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "toPrisonLocation":{
                  "description":"The location of the prison to move to.",
                  "$ref":"#/components/schemas/Agency",
                  "example":"LEI"
               }
            },
            "description":"Represents the data for a scheduled prison to prison move."
         },
         "SecondaryLanguage":{
            "title":"SecondaryLanguage",
            "type":"object",
            "properties":{
               "bookingId":{
                  "type":"integer",
                  "description":"Booking id",
                  "format":"int64",
                  "example":10000
               },
               "canRead":{
                  "type":"boolean",
                  "description":"Reading proficiency",
                  "example":false
               },
               "canSpeak":{
                  "type":"boolean",
                  "description":"Speaking proficiency",
                  "example":false
               },
               "canWrite":{
                  "type":"boolean",
                  "description":"Writing proficiency",
                  "example":false
               },
               "code":{
                  "type":"string",
                  "description":"Language code",
                  "example":"ENG"
               },
               "description":{
                  "type":"string",
                  "description":"Language description",
                  "example":"English"
               }
            },
            "description":"Secondary language"
         },
         "SentenceAdjustmentDetail":{
            "title":"SentenceAdjustmentDetail",
            "type":"object",
            "properties":{
               "additionalDaysAwarded":{
                  "type":"integer",
                  "description":"Number of additional days awarded",
                  "format":"int32",
                  "example":12
               },
               "lawfullyAtLarge":{
                  "type":"integer",
                  "description":"Number of lawfully at large days",
                  "format":"int32",
                  "example":12
               },
               "recallSentenceRemand":{
                  "type":"integer",
                  "description":"Number of recall sentence remand days",
                  "format":"int32",
                  "example":12
               },
               "recallSentenceTaggedBail":{
                  "type":"integer",
                  "description":"Number of recall sentence tagged bail days",
                  "format":"int32",
                  "example":12
               },
               "remand":{
                  "type":"integer",
                  "description":"Number of remand days",
                  "format":"int32",
                  "example":12
               },
               "restoredAdditionalDaysAwarded":{
                  "type":"integer",
                  "description":"Number of restored additional days awarded",
                  "format":"int32",
                  "example":12
               },
               "specialRemission":{
                  "type":"integer",
                  "description":"Number of special remission days",
                  "format":"int32",
                  "example":12
               },
               "taggedBail":{
                  "type":"integer",
                  "description":"Number of tagged bail days",
                  "format":"int32",
                  "example":12
               },
               "unlawfullyAtLarge":{
                  "type":"integer",
                  "description":"Number unlawfully at large days",
                  "format":"int32",
                  "example":12
               },
               "unusedRemand":{
                  "type":"integer",
                  "description":"Number of unused remand days",
                  "format":"int32",
                  "example":12
               }
            },
            "description":"Sentence adjustments"
         },
         "SentenceDetail":{
            "title":"SentenceDetail",
            "required":[
               "bookingId",
               "nonDtoReleaseDateType",
               "sentenceStartDate"
            ],
            "type":"object",
            "properties":{
               "actualParoleDate":{
                  "type":"string",
                  "description":"APD - the offender's actual parole date.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "additionalDaysAwarded":{
                  "type":"integer",
                  "description":"ADA - days added to sentence term due to adjustments.",
                  "format":"int32",
                  "example":5
               },
               "automaticReleaseDate":{
                  "type":"string",
                  "description":"ARD - calculated automatic (unconditional) release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "automaticReleaseOverrideDate":{
                  "type":"string",
                  "description":"ARD (override) - automatic (unconditional) release override date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "bookingId":{
                  "type":"integer",
                  "description":"Offender booking id.",
                  "format":"int64",
                  "example":1234123
               },
               "conditionalReleaseDate":{
                  "type":"string",
                  "description":"CRD - calculated conditional release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "conditionalReleaseOverrideDate":{
                  "type":"string",
                  "description":"CRD (override) - conditional release override date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "confirmedReleaseDate":{
                  "type":"string",
                  "description":"Confirmed release date for offender.",
                  "format":"date",
                  "example":"2020-04-20T00:00:00.000+00:00"
               },
               "dtoPostRecallReleaseDate":{
                  "type":"string",
                  "description":"DPRRD - Detention training order post recall release date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "dtoPostRecallReleaseDateOverride":{
                  "type":"string",
                  "description":"DPRRD (override) - detention training order post-recall release override date for offender",
                  "format":"date",
                  "example":"2020-04-01T00:00:00.000+00:00"
               },
               "earlyRemovalSchemeEligibilityDate":{
                  "type":"string",
                  "description":"ERSED - the date on which offender will be eligible for early removal (under the Early Removal Scheme for foreign nationals).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "earlyTermDate":{
                  "type":"string",
                  "description":"ETD - early term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "effectiveSentenceEndDate":{
                  "type":"string",
                  "description":"Effective sentence end date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "homeDetentionCurfewActualDate":{
                  "type":"string",
                  "description":"HDCAD - the offender's actual home detention curfew date.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "homeDetentionCurfewEligibilityDate":{
                  "type":"string",
                  "description":"HDCED - date on which offender will be eligible for home detention curfew.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "homeDetentionCurfewEndDate":{
                  "type":"string",
                  "description":"Offender's home detention curfew end date - calculated as one day before the releaseDate.",
                  "format":"date",
                  "example":"2019-04-01T00:00:00.000+00:00"
               },
               "lateTermDate":{
                  "type":"string",
                  "description":"LTD - late term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "licenceExpiryDate":{
                  "type":"string",
                  "description":"LED - date on which offender licence expires.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "midTermDate":{
                  "type":"string",
                  "description":"MTD - mid term date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "nonDtoReleaseDate":{
                  "type":"string",
                  "description":"Release date for non-DTO sentence (if applicable). This will be based on one of ARD, CRD, NPD or PRRD.",
                  "format":"date",
                  "example":"2020-04-01T00:00:00.000+00:00"
               },
               "nonDtoReleaseDateType":{
                  "type":"string",
                  "description":"Indicates which type of non-DTO release date is the effective release date. One of 'ARD', 'CRD', 'NPD' or 'PRRD'.",
                  "example":"CRD",
                  "enum":[
                     "ARD",
                     "CRD",
                     "NPD",
                     "PRRD"
                  ]
               },
               "nonParoleDate":{
                  "type":"string",
                  "description":"NPD - calculated non-parole date for offender (relating to the 1991 act).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "nonParoleOverrideDate":{
                  "type":"string",
                  "description":"NPD (override) - non-parole override date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "paroleEligibilityDate":{
                  "type":"string",
                  "description":"PED - date on which offender is eligible for parole.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "postRecallReleaseDate":{
                  "type":"string",
                  "description":"PRRD - calculated post-recall release date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "postRecallReleaseOverrideDate":{
                  "type":"string",
                  "description":"PRRD (override) - post-recall release override date for offender.",
                  "format":"date",
                  "example":"2020-04-01T00:00:00.000+00:00"
               },
               "releaseDate":{
                  "type":"string",
                  "description":"Confirmed, actual, approved, provisional or calculated release date for offender, according to offender release date algorithm.<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
                  "format":"date",
                  "example":"2020-04-01T00:00:00.000+00:00"
               },
               "releaseOnTemporaryLicenceDate":{
                  "type":"string",
                  "description":"ROTL - the date on which offender will be released on temporary licence.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "sentenceExpiryDate":{
                  "type":"string",
                  "description":"SED - date on which sentence expires.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "sentenceStartDate":{
                  "type":"string",
                  "description":"Sentence start date.",
                  "format":"date",
                  "example":"2010-02-03T00:00:00.000+00:00"
               },
               "tariffDate":{
                  "type":"string",
                  "description":"Date on which minimum term is reached for parole (indeterminate/life sentences).",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "tariffEarlyRemovalSchemeEligibilityDate":{
                  "type":"string",
                  "description":"TERSED - Tariff early removal scheme eligibility date",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "topupSupervisionExpiryDate":{
                  "type":"string",
                  "description":"TUSED - top-up supervision expiry date for offender.",
                  "format":"date",
                  "example":"2020-02-03T00:00:00.000+00:00"
               },
               "topupSupervisionStartDate":{
                  "type":"string",
                  "description":"Top-up supervision start date for offender - calculated as licence end date + 1 day or releaseDate if licence end date not set.",
                  "format":"date",
                  "example":"2019-04-01T00:00:00.000+00:00"
               }
            },
            "description":"Sentence Details"
         },
         "Sort":{
            "title":"Sort",
            "type":"object",
            "properties":{
               "empty":{
                  "type":"boolean"
               },
               "sorted":{
                  "type":"boolean"
               },
               "unsorted":{
                  "type":"boolean"
               }
            }
         },
         "StaffDetail":{
            "title":"StaffDetail",
            "required":[
               "firstName",
               "lastName",
               "staffId",
               "status"
            ],
            "type":"object",
            "properties":{
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of Birth of Staff Member",
                  "format":"date",
                  "example":"1970-01-02T00:00:00.000+00:00"
               },
               "firstName":{
                  "type":"string",
                  "description":"Staff member's first name.",
                  "example":"JOHN"
               },
               "gender":{
                  "type":"string",
                  "description":"Gender of Staff Member",
                  "example":"M",
                  "enum":[
                     "F",
                     "M",
                     "NK",
                     "NS",
                     "REF"
                  ]
               },
               "lastName":{
                  "type":"string",
                  "description":"Staff member's last name.",
                  "example":"SMITH"
               },
               "staffId":{
                  "type":"integer",
                  "description":"Unique identifier for staff member.",
                  "format":"int64",
                  "example":423142
               },
               "status":{
                  "type":"string",
                  "description":"Status of staff member.",
                  "example":"ACTIVE",
                  "enum":[
                     "ACTIVE",
                     "INACTIVE"
                  ]
               },
               "thumbnailId":{
                  "type":"integer",
                  "description":"Identifier for staff member image.",
                  "format":"int64",
                  "example":231232
               }
            },
            "description":"Staff Details"
         },
         "StaffLocationRole":{
            "title":"StaffLocationRole",
            "required":[
               "agencyId",
               "firstName",
               "fromDate",
               "lastName",
               "position",
               "role",
               "staffId",
               "status"
            ],
            "type":"object",
            "properties":{
               "agencyDescription":{
                  "type":"string",
                  "description":"Agency description.",
                  "example":"HMP Leeds"
               },
               "agencyId":{
                  "type":"string",
                  "description":"Agency at which staff member is performing role.",
                  "example":"LEI"
               },
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of Birth of Staff Member",
                  "format":"date",
                  "example":"1970-01-02T00:00:00.000+00:00"
               },
               "firstName":{
                  "type":"string",
                  "description":"Staff member's first name.",
                  "example":"JOHN"
               },
               "fromDate":{
                  "type":"string",
                  "description":"Date from which staff member is actively performing role.",
                  "format":"date",
                  "example":"2019-02-05T00:00:00.000+00:00"
               },
               "gender":{
                  "type":"string",
                  "description":"Gender of Staff Member",
                  "example":"M",
                  "enum":[
                     "F",
                     "M",
                     "NK",
                     "NS",
                     "REF"
                  ]
               },
               "hoursPerWeek":{
                  "type":"number",
                  "description":"Number of hours worked per week by staff member.",
                  "format":"bigdecimal",
                  "example":30
               },
               "lastName":{
                  "type":"string",
                  "description":"Staff member's last name.",
                  "example":"SMITH"
               },
               "position":{
                  "type":"string",
                  "description":"A code that defines staff member's position at agency.",
                  "example":"PRO"
               },
               "positionDescription":{
                  "type":"string",
                  "description":"Description of staff member's position at agency.",
                  "example":"Prison Officer"
               },
               "role":{
                  "type":"string",
                  "description":"A code that defines staff member's role at agency.",
                  "example":"KW"
               },
               "roleDescription":{
                  "type":"string",
                  "description":"Description of staff member's role at agency.",
                  "example":"Key Worker"
               },
               "scheduleType":{
                  "type":"string",
                  "description":"A code the defines staff member's schedule type.",
                  "example":"FT"
               },
               "scheduleTypeDescription":{
                  "type":"string",
                  "description":"Description of staff member's schedule type.",
                  "example":"Full Time"
               },
               "staffId":{
                  "type":"integer",
                  "description":"Unique identifier for staff member.",
                  "format":"int64",
                  "example":242342
               },
               "status":{
                  "type":"string",
                  "description":"Status of staff member.",
                  "example":"ACTIVE",
                  "enum":[
                     "ACTIVE",
                     "INACTIVE"
                  ]
               },
               "thumbnailId":{
                  "type":"integer",
                  "description":"Identifier for staff member image.",
                  "format":"int64",
                  "example":2342334
               },
               "toDate":{
                  "type":"string",
                  "description":"Date on which staff member stops actively performing role.",
                  "format":"date",
                  "example":"2019-03-25T00:00:00.000+00:00"
               }
            },
            "description":"Staff Details with position and role"
         },
         "StaffRole":{
            "title":"StaffRole",
            "required":[
               "role"
            ],
            "type":"object",
            "properties":{
               "role":{
                  "type":"string",
                  "description":"A code that defines staff member's role at agency."
               },
               "roleDescription":{
                  "type":"string",
                  "description":"Description of staff member's role at agency."
               }
            },
            "description":"Staff Role"
         },
         "StaffUserRole":{
            "title":"StaffUserRole",
            "required":[
               "roleCode",
               "roleId",
               "roleName",
               "staffId",
               "username"
            ],
            "type":"object",
            "properties":{
               "caseloadId":{
                  "type":"string",
                  "description":"caseload that this role belongs to, (NOMIS only)"
               },
               "parentRoleCode":{
                  "type":"string",
                  "description":"role code of the parent role"
               },
               "roleCode":{
                  "type":"string",
                  "description":"code for this role"
               },
               "roleId":{
                  "type":"integer",
                  "description":"Role Id",
                  "format":"int64"
               },
               "roleName":{
                  "type":"string",
                  "description":"Full text description of the role type"
               },
               "staffId":{
                  "type":"integer",
                  "description":"Staff Id",
                  "format":"int64"
               },
               "username":{
                  "type":"string",
                  "description":"Staff username"
               }
            },
            "description":"Staff User Role"
         },
         "StatuteDto":{
            "title":"StatuteDto",
            "required":[
               "activeFlag",
               "code",
               "description",
               "legislatingBodyCode"
            ],
            "type":"object",
            "properties":{
               "activeFlag":{
                  "type":"string",
                  "description":"Active Y/N",
                  "example":"Y",
                  "enum":[
                     "N",
                     "Y"
                  ]
               },
               "code":{
                  "type":"string",
                  "description":"Statute code",
                  "example":"RR84"
               },
               "description":{
                  "type":"string",
                  "description":"Statute code description",
                  "example":"Statute RV98"
               },
               "legislatingBodyCode":{
                  "type":"string",
                  "description":"Legislating Body Code"
               }
            },
            "description":"Statute"
         },
         "StorePaymentRequest":{
            "title":"StorePaymentRequest",
            "type":"object",
            "properties":{
               "amount":{
                  "type":"integer",
                  "description":"Amount of the payment in pence, hence 1634 is Â£16.34",
                  "format":"int64",
                  "example":1634
               },
               "client_transaction_id":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Client transaction identifier",
                  "example":"CL123212"
               },
               "description":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Description of the payment",
                  "example":"Adjustment"
               },
               "type":{
                  "type":"string",
                  "description":"Valid payment type for the prison",
                  "example":"ADJ",
                  "enum":[
                     "ADJ",
                     "A_EARN"
                  ]
               }
            },
            "description":"Transaction to Create"
         },
         "Telephone":{
            "title":"Telephone",
            "required":[
               "number",
               "type"
            ],
            "type":"object",
            "properties":{
               "ext":{
                  "type":"string",
                  "description":"Telephone extension number",
                  "example":"123"
               },
               "number":{
                  "type":"string",
                  "description":"Telephone number",
                  "example":"0114 2345678"
               },
               "phoneId":{
                  "type":"integer",
                  "description":"Phone Id",
                  "format":"int64",
                  "example":2234232
               },
               "type":{
                  "type":"string",
                  "description":"Telephone type",
                  "example":"TEL"
               }
            },
            "description":"Telephone Details"
         },
         "Transaction":{
            "title":"Transaction",
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"ID of created transaction",
                  "example":"6179604-1"
               }
            },
            "description":"Transaction Response"
         },
         "Transfer":{
            "title":"Transfer",
            "type":"object",
            "properties":{
               "current_location":{
                  "description":"Current Location",
                  "$ref":"#/components/schemas/CodeDescription"
               },
               "transaction":{
                  "description":"Transaction",
                  "$ref":"#/components/schemas/Transaction"
               }
            },
            "description":"Transfer Response"
         },
         "TransferEvent":{
            "title":"TransferEvent",
            "required":[
               "bookingActiveFlag",
               "bookingInOutStatus",
               "createDateTime",
               "directionCode",
               "endTime",
               "engagementCode",
               "escortCode",
               "eventClass",
               "eventDate",
               "eventId",
               "eventStatus",
               "eventSubType",
               "eventType",
               "fromAgency",
               "fromAgencyDescription",
               "judgeName",
               "offenderNo",
               "outcomeReasonCode",
               "performanceCode",
               "startTime",
               "toAgency",
               "toAgencyDescription",
               "toCity"
            ],
            "type":"object",
            "properties":{
               "bookingActiveFlag":{
                  "type":"boolean",
                  "description":"The booking active flag",
                  "example":true
               },
               "bookingInOutStatus":{
                  "type":"string",
                  "description":"The booking in or out status - either IN or OUT from offender bookings",
                  "example":"OUT"
               },
               "createDateTime":{
                  "type":"string",
                  "description":"Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "directionCode":{
                  "type":"string",
                  "description":"The direction code (IN or OUT)",
                  "example":"IN"
               },
               "endTime":{
                  "type":"string",
                  "description":"The planned date and time of the end of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "engagementCode":{
                  "type":"string",
                  "description":"Engagement code",
                  "example":"ENG"
               },
               "escortCode":{
                  "type":"string",
                  "description":"The escort code",
                  "example":"DEF2"
               },
               "eventClass":{
                  "type":"string",
                  "description":"The event class - from OFFENDER_IND_SCHEDULES",
                  "example":"EXT_MOV"
               },
               "eventDate":{
                  "type":"string",
                  "description":"The date on which the event is scheduled to occur",
                  "format":"date",
                  "example":"2019-01-01T00:00:00.000+00:00"
               },
               "eventId":{
                  "type":"integer",
                  "description":"The internal event ID",
                  "format":"int64",
                  "example":1232323
               },
               "eventStatus":{
                  "type":"string",
                  "description":"The event status - either SCH or COMP",
                  "example":"SCH"
               },
               "eventSubType":{
                  "type":"string",
                  "description":"The event sub-type - from OFFENDER_IND_SCHEDULES",
                  "example":"PP"
               },
               "eventType":{
                  "type":"string",
                  "description":"The event type - from OFFENDER_IND_SCHEDULES",
                  "example":"TRN"
               },
               "fromAgency":{
                  "type":"string",
                  "description":"The agency code from which the event will start",
                  "example":"LEI"
               },
               "fromAgencyDescription":{
                  "type":"string",
                  "description":"The from agency description",
                  "example":"HMP LEEDS"
               },
               "judgeName":{
                  "type":"string",
                  "description":"The name of the judge where known"
               },
               "offenderNo":{
                  "type":"string",
                  "description":"Offender number(NOMS ID)",
                  "example":"G3878UK"
               },
               "outcomeReasonCode":{
                  "type":"string",
                  "description":"The outcome reason code - from offender_ind_schedules",
                  "example":"CO"
               },
               "performanceCode":{
                  "type":"string",
                  "description":"The performance code",
                  "example":"PERF1"
               },
               "startTime":{
                  "type":"string",
                  "description":"The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
                  "format":"date-time"
               },
               "toAgency":{
                  "type":"string",
                  "description":"The agency code to which the transfer will be made (if an agency)",
                  "example":"MDI"
               },
               "toAgencyDescription":{
                  "type":"string",
                  "description":"The to agency description",
                  "example":"HMP MOORLANDS"
               },
               "toCity":{
                  "type":"string",
                  "description":"The destination city when available",
                  "example":"DONCASTER"
               }
            },
            "description":"A scheduled offender movement event"
         },
         "TransferSummary":{
            "title":"TransferSummary",
            "type":"object",
            "properties":{
               "courtEvents":{
                  "type":"array",
                  "description":"List of scheduled or completed court events",
                  "items":{
                     "$ref":"#/components/schemas/CourtEvent"
                  }
               },
               "movements":{
                  "type":"array",
                  "description":"List of confirmed movements",
                  "items":{
                     "$ref":"#/components/schemas/MovementSummary"
                  }
               },
               "releaseEvents":{
                  "type":"array",
                  "description":"List of scheduled or completed release events",
                  "items":{
                     "$ref":"#/components/schemas/ReleaseEvent"
                  }
               },
               "transferEvents":{
                  "type":"array",
                  "description":"List of scheduled or completed offender events",
                  "items":{
                     "$ref":"#/components/schemas/TransferEvent"
                  }
               }
            },
            "description":"The container object for transfer and movement events"
         },
         "TransferTransaction":{
            "title":"TransferTransaction",
            "type":"object",
            "properties":{
               "amount":{
                  "type":"integer",
                  "description":"Amount of transaction in pence, hence 1634 is Â£16.34",
                  "format":"int64",
                  "example":1634
               },
               "client_transaction_id":{
                  "maxLength":12,
                  "minLength":1,
                  "type":"string",
                  "description":"Client Transaction Id",
                  "example":"CL123212"
               },
               "client_unique_ref":{
                  "maxLength":64,
                  "minLength":1,
                  "pattern":"[a-zA-Z0-9-_]+",
                  "type":"string",
                  "description":"A reference unique to the client making the post. Maximum size 64 characters, only alphabetic, numeric, '-' and '_' are allowed",
                  "example":"CLIENT121131-0_11"
               },
               "description":{
                  "maxLength":240,
                  "minLength":1,
                  "type":"string",
                  "description":"Description of the Transaction",
                  "example":"Canteen Purchase of Â£16.34"
               }
            },
            "description":"Transfer to Savings Transaction"
         },
         "TransferTransactionDetail":{
            "title":"TransferTransactionDetail",
            "type":"object",
            "properties":{
               "creditTransaction":{
                  "description":"Credit Transaction",
                  "$ref":"#/components/schemas/Transaction"
               },
               "debitTransaction":{
                  "description":"Debit Transaction",
                  "$ref":"#/components/schemas/Transaction"
               },
               "transactionId":{
                  "type":"integer",
                  "description":"Transaction Id",
                  "format":"int64"
               }
            },
            "description":"Detail of result of transfer transaction"
         },
         "TypeValue":{
            "title":"TypeValue",
            "type":"object",
            "properties":{
               "type":{
                  "type":"string",
                  "description":"Type",
                  "example":"Wing"
               },
               "value":{
                  "type":"string",
                  "description":"Value",
                  "example":"C"
               }
            },
            "description":"Type Value"
         },
         "UnavailabilityReason":{
            "title":"UnavailabilityReason",
            "type":"object",
            "properties":{
               "banned":{
                  "type":"boolean",
                  "description":"Banned",
                  "example":true
               },
               "existing_visits":{
                  "type":"array",
                  "description":"Existing Visits",
                  "items":{
                     "$ref":"#/components/schemas/Visit"
                  }
               },
               "external_movement":{
                  "type":"boolean",
                  "description":"External Movement",
                  "example":true
               },
               "out_of_vo":{
                  "type":"boolean",
                  "description":"Out of Vo",
                  "example":true
               }
            },
            "description":"Date Unavailability Reasons"
         },
         "UpdateAttendance":{
            "title":"UpdateAttendance",
            "required":[
               "eventOutcome"
            ],
            "type":"object",
            "properties":{
               "eventOutcome":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Attendance outcome, possible values are the codes in the 'PS_PA_OC' reference domain.",
                  "example":"ATT",
                  "enum":[
                     "ABS",
                     "ACCAB",
                     "ATT",
                     "CANC",
                     "NREQ",
                     "REST",
                     "SUS",
                     "UNACAB"
                  ]
               },
               "outcomeComment":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Free text comment, maximum length 240 characters.",
                  "example":"Turned up very late"
               },
               "performance":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Possible values are the codes in the 'PERFORMANCE' reference domain, mandatory for eventOutcome 'ATT'.",
                  "example":"ACCEPT",
                  "enum":[
                     "ACCEPT",
                     "GOOD",
                     "POOR",
                     "STANDARD",
                     "UNACCEPT"
                  ]
               }
            },
            "description":"Attendance details.  This is used to update the attendance details of an offender"
         },
         "UpdateAttendanceBatch":{
            "title":"UpdateAttendanceBatch",
            "required":[
               "bookingActivities",
               "eventOutcome"
            ],
            "type":"object",
            "properties":{
               "bookingActivities":{
                  "uniqueItems":true,
                  "type":"array",
                  "description":"set of booking and activity ids",
                  "items":{
                     "$ref":"#/components/schemas/BookingActivity"
                  }
               },
               "eventOutcome":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Attendance outcome, possible values are the codes in the 'PS_PA_OC' reference domain.",
                  "example":"ATT",
                  "enum":[
                     "ABS",
                     "ACCAB",
                     "ATT",
                     "CANC",
                     "NREQ",
                     "REST",
                     "SUS",
                     "UNACAB"
                  ]
               },
               "outcomeComment":{
                  "maxLength":240,
                  "minLength":0,
                  "type":"string",
                  "description":"Free text comment, maximum length 240 characters.",
                  "example":"Turned up very late"
               },
               "performance":{
                  "maxLength":12,
                  "minLength":0,
                  "type":"string",
                  "description":"Possible values are the codes in the 'PERFORMANCE' reference domain, mandatory for eventOutcome 'ATT'.",
                  "example":"ACCEPT",
                  "enum":[
                     "ACCEPT",
                     "GOOD",
                     "POOR",
                     "STANDARD",
                     "UNACCEPT"
                  ]
               }
            },
            "description":"Attendance details.  This is used to update the attendance details of multiple bookings"
         },
         "UpdateCaseNote":{
            "title":"UpdateCaseNote",
            "required":[
               "text"
            ],
            "type":"object",
            "properties":{
               "text":{
                  "type":"string",
                  "description":"Updated Case Note Text"
               }
            },
            "description":"Update Case Note"
         },
         "UserDetail":{
            "title":"UserDetail",
            "required":[
               "accountStatus",
               "active",
               "firstName",
               "lastName",
               "lockDate",
               "staffId",
               "username"
            ],
            "type":"object",
            "properties":{
               "accountStatus":{
                  "type":"string",
                  "description":"Status of the User Account",
                  "example":"ACTIVE",
                  "enum":[
                     "ACTIVE",
                     "CAREER",
                     "INACT",
                     "MAT",
                     "SAB",
                     "SICK",
                     "SUS"
                  ]
               },
               "active":{
                  "type":"boolean",
                  "description":"Indicate if the account is active",
                  "example":true
               },
               "activeCaseLoadId":{
                  "type":"string",
                  "description":"Current Active Caseload",
                  "example":"MDI"
               },
               "expiredFlag":{
                  "type":"boolean",
                  "description":"Indicates the user account has expired",
                  "example":true
               },
               "expiryDate":{
                  "type":"string",
                  "description":"Date the user account has expired",
                  "format":"date-time"
               },
               "firstName":{
                  "type":"string",
                  "description":"First Name",
                  "example":"John"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last Name",
                  "example":"Smith"
               },
               "lockDate":{
                  "type":"string",
                  "description":"Date the user account was locked",
                  "format":"date-time"
               },
               "lockedFlag":{
                  "type":"boolean",
                  "description":"The User account is locked",
                  "example":false
               },
               "staffId":{
                  "type":"integer",
                  "description":"Staff Id",
                  "format":"int64",
                  "example":231232
               },
               "thumbnailId":{
                  "type":"integer",
                  "description":"Image Thumbnail Id",
                  "format":"int64",
                  "example":2342341224
               },
               "username":{
                  "type":"string",
                  "description":"Username",
                  "example":"DEMO_USER1"
               }
            },
            "description":"User Details"
         },
         "UserRole":{
            "title":"UserRole",
            "required":[
               "roleCode",
               "roleId",
               "roleName"
            ],
            "type":"object",
            "properties":{
               "caseloadId":{
                  "type":"string",
                  "description":"caseload that this role belongs to, (NOMIS only)"
               },
               "parentRoleCode":{
                  "type":"string",
                  "description":"role code of the parent role"
               },
               "roleCode":{
                  "type":"string",
                  "description":"code for this role"
               },
               "roleId":{
                  "type":"integer",
                  "description":"Role Id",
                  "format":"int64"
               },
               "roleName":{
                  "type":"string",
                  "description":"Full text description of the role type"
               }
            },
            "description":"User Role"
         },
         "Visit":{
            "title":"Visit",
            "type":"object",
            "properties":{
               "id":{
                  "type":"integer",
                  "description":"Id",
                  "format":"int64",
                  "example":123456
               },
               "slot":{
                  "type":"string",
                  "description":"Slot",
                  "example":"2019-01-01T13:30/16:00"
               }
            },
            "description":"Visit Details"
         },
         "VisitBalances":{
            "title":"VisitBalances",
            "required":[
               "remainingPvo",
               "remainingVo"
            ],
            "type":"object",
            "properties":{
               "remainingPvo":{
                  "type":"integer",
                  "description":"Balance of privilege visit orders remaining",
                  "format":"int32"
               },
               "remainingVo":{
                  "type":"integer",
                  "description":"Balance of visit orders remaining",
                  "format":"int32"
               }
            },
            "description":"Balances of visit orders and privilege visit orders"
         },
         "VisitDetails":{
            "title":"VisitDetails",
            "required":[
               "eventOutcome",
               "eventStatus",
               "startTime",
               "visitType"
            ],
            "type":"object",
            "properties":{
               "cancelReasonDescription":{
                  "type":"string",
                  "description":"Description of cancellationReason code"
               },
               "cancellationReason":{
                  "type":"string",
                  "description":"Reason if not attended"
               },
               "endTime":{
                  "type":"string",
                  "description":"Date and time at which event ends",
                  "format":"date-time"
               },
               "eventOutcome":{
                  "type":"string",
                  "description":"Whether attended or not"
               },
               "eventOutcomeDescription":{
                  "type":"string",
                  "description":"Description of eventOutcome code"
               },
               "eventStatus":{
                  "type":"string",
                  "description":"Status of event"
               },
               "eventStatusDescription":{
                  "type":"string",
                  "description":"Description of eventStatus code"
               },
               "leadVisitor":{
                  "type":"string",
                  "description":"Name of main visitor"
               },
               "location":{
                  "type":"string",
                  "description":"Location at which event takes place (could be an internal location, agency or external address)."
               },
               "relationship":{
                  "type":"string",
                  "description":"Relationship of main visitor to offender"
               },
               "relationshipDescription":{
                  "type":"string",
                  "description":"Description of relationship code"
               },
               "startTime":{
                  "type":"string",
                  "description":"Date and time at which event starts",
                  "format":"date-time"
               },
               "visitType":{
                  "type":"string",
                  "description":"Social or official"
               },
               "visitTypeDescription":{
                  "type":"string",
                  "description":"Description of visitType code"
               }
            },
            "description":"Visit details"
         },
         "VisitRestriction":{
            "title":"VisitRestriction",
            "type":"object",
            "properties":{
               "comment_text":{
                  "type":"string",
                  "description":"Comment Text"
               },
               "effective_date":{
                  "type":"string",
                  "description":"Effective Date",
                  "format":"date",
                  "example":"2019-01-01T00:00:00.000+00:00"
               },
               "expiry_date":{
                  "type":"string",
                  "description":"Expiry Date",
                  "format":"date",
                  "example":"2019-01-01T00:00:00.000+00:00"
               },
               "type":{
                  "description":"Type",
                  "$ref":"#/components/schemas/CodeDescription"
               }
            },
            "description":"Visit Restriction"
         },
         "VisitSlotCapacity":{
            "title":"VisitSlotCapacity",
            "type":"object",
            "properties":{
               "adults_booked":{
                  "type":"integer",
                  "description":"Adults Booked",
                  "format":"int64",
                  "example":7
               },
               "capacity":{
                  "type":"integer",
                  "description":"Capacity",
                  "format":"int64",
                  "example":402
               },
               "groups_booked":{
                  "type":"integer",
                  "description":"Groups Booked",
                  "format":"int64",
                  "example":5
               },
               "max_adults":{
                  "type":"integer",
                  "description":"Max Adults",
                  "format":"int64",
                  "example":999
               },
               "max_groups":{
                  "type":"integer",
                  "description":"Max Groups",
                  "format":"int64",
                  "example":999
               },
               "time":{
                  "type":"string",
                  "description":"Time",
                  "example":"2019-01-01T13:30/16:00"
               },
               "visitors_booked":{
                  "type":"integer",
                  "description":"Visitors Booked",
                  "format":"int64",
                  "example":6
               }
            },
            "description":"Visit slots Details "
         },
         "VisitSlots":{
            "title":"VisitSlots",
            "type":"object",
            "properties":{
               "slots":{
                  "type":"array",
                  "description":"List of visit slots with capacity",
                  "items":{
                     "$ref":"#/components/schemas/VisitSlotCapacity"
                  }
               }
            },
            "description":"Visit slots with capacity"
         },
         "VisitWithVisitors":{
            "title":"VisitWithVisitors",
            "required":[
               "visitDetails",
               "visitors"
            ],
            "type":"object",
            "properties":{
               "visitDetails":{
                  "description":"Visit Information",
                  "$ref":"#/components/schemas/VisitDetails"
               },
               "visitors":{
                  "type":"array",
                  "description":"List of visitors on visit",
                  "items":{
                     "$ref":"#/components/schemas/Visitor"
                  }
               }
            },
            "description":"List of visitors for a visit"
         },
         "Visitor":{
            "title":"Visitor",
            "type":"object",
            "properties":{
               "dateOfBirth":{
                  "type":"string",
                  "description":"Date of birth of visitor",
                  "format":"date"
               },
               "firstName":{
                  "type":"string",
                  "description":"First name of visitor"
               },
               "lastName":{
                  "type":"string",
                  "description":"Last name of visitor"
               },
               "leadVisitor":{
                  "type":"boolean",
                  "description":"Flag marking the visitor as main or not",
                  "example":true
               },
               "personId":{
                  "type":"integer",
                  "description":"Person id of visitor",
                  "format":"int64"
               },
               "relationship":{
                  "type":"string",
                  "description":"Relationship of visitor to offender"
               }
            },
            "description":"Visitor"
         }
      },
      "securitySchemes":{
         "Authorization":{
            "type":"apiKey",
            "name":"Authorization",
            "in":"header"
         }
      }
   }
}
